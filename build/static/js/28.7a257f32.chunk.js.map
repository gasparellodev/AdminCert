{"version":3,"sources":["pages/dashboard/InvoiceList.js","icons/ArrowRight.js","icons/Download.js","icons/PencilAlt.js","components/Label.js","icons/Plus.js","icons/Upload.js","__fakeApi__/invoiceApi.js","components/dashboard/invoice/InvoiceListTable.js","components/dashboard/invoice/InvoicePDF.js","components/dashboard/invoice/InvoicePreview.js"],"names":["InvoiceList","mounted","useMounted","settings","useSettings","useState","invoices","setInvoices","useEffect","gtm","push","event","getInvoices","useCallback","a","invoiceApi","data","current","console","error","sx","backgroundColor","minHeight","py","maxWidth","compact","container","justifyContent","spacing","item","color","variant","separator","fontSize","mt","component","RouterLink","to","mb","mx","startIcon","m","ArrowRight","createSvgIcon","xmlns","viewBox","fill","fillRule","d","clipRule","Download","PencilAlt","LabelRoot","experimentalStyled","theme","styleProps","palette","main","contrastText","alignItems","borderRadius","shape","cursor","display","flexGrow","flexShrink","fontFamily","typography","pxToRem","fontWeight","fontWeightMedium","letterSpacing","minWidth","paddingBottom","paddingLeft","paddingRight","paddingTop","textTransform","whiteSpace","Label","props","children","other","Plus","Upload","now","Date","id","currency","customer","email","name","issueDate","subHours","getTime","status","totalAmount","subDays","Promise","resolve","invoice","address","company","taxId","dueDate","items","description","unitAmount","number","subtotalAmount","taxAmount","statusOptions","label","value","sortOptions","getStatusLabel","invoiceStatus","canceled","text","paid","pending","InvoiceListTable","selectedInvoices","setSelectedInvoices","page","setPage","limit","setLimit","query","setQuery","sort","setSort","filters","setFilters","handleSelectAllInvoices","target","checked","map","filteredInvoices","filter","matches","containsQuery","forEach","property","toLowerCase","includes","applyFilters","paginatedInvoices","slice","applyPagination","enableBulkActions","length","selectedSomeInvoices","selectedAllInvoices","Card","Box","flexWrap","p","width","TextField","fullWidth","InputProps","startAdornment","InputAdornment","position","Search","onChange","placeholder","select","SelectProps","native","option","prevFilters","statusOption","px","zIndex","Checkbox","indeterminate","Button","ml","Scrollbar","Table","TableHead","TableRow","TableCell","padding","align","TableBody","isInvoiceSelected","hover","selected","invoiceId","prevSelected","Link","underline","Typography","numeral","format","IconButton","TablePagination","count","onPageChange","newPage","onRowsPerPageChange","parseInt","rowsPerPage","rowsPerPageOptions","styles","StyleSheet","create","h4","lineHeight","h6","subtitle2","body2","gutterBottom","marginBottom","header","flexDirection","brand","height","marginTop","references","billing","notes","table","tableHeader","tableBody","tableRow","borderBottomWidth","borderColor","borderStyle","tableCell1","tableCellN","alignRight","textAlign","InvoicePDF","size","style","source","InvoicePreview","Paper","Grid","Logo","my"],"mappings":"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","file":"static/js/28.7a257f32.chunk.js","sourcesContent":["import { useState, useEffect, useCallback } from 'react';\nimport { Link as RouterLink } from 'react-router-dom';\nimport { Helmet } from 'react-helmet-async';\nimport { Box, Breadcrumbs, Button, Container, Grid, Link, Typography } from '@material-ui/core';\nimport { invoiceApi } from '../../__fakeApi__/invoiceApi';\nimport { InvoiceListTable } from '../../components/dashboard/invoice';\nimport useMounted from '../../hooks/useMounted';\nimport useSettings from '../../hooks/useSettings';\nimport ChevronRightIcon from '../../icons/ChevronRight';\nimport DownloadIcon from '../../icons/Download';\nimport PlusIcon from '../../icons/Plus';\nimport UploadIcon from '../../icons/Upload';\nimport gtm from '../../lib/gtm';\n\nconst InvoiceList = () => {\n  const mounted = useMounted();\n  const { settings } = useSettings();\n  const [invoices, setInvoices] = useState([]);\n\n  useEffect(() => {\n    gtm.push({ event: 'page_view' });\n  }, []);\n\n  const getInvoices = useCallback(async () => {\n    try {\n      const data = await invoiceApi.getInvoices();\n\n      if (mounted.current) {\n        setInvoices(data);\n      }\n    } catch (err) {\n      console.error(err);\n    }\n  }, [mounted]);\n\n  useEffect(() => {\n    getInvoices();\n  }, [getInvoices]);\n\n  return (\n    <>\n      <Helmet>\n        <title>AdminCerti | Pedidos</title>\n      </Helmet>\n      <Box\n        sx={{\n          backgroundColor: 'background.default',\n          minHeight: '100%',\n          py: 8\n        }}\n      >\n        <Container maxWidth={settings.compact ? 'xl' : false}>\n          <Grid\n            container\n            justifyContent=\"space-between\"\n            spacing={3}\n          >\n            <Grid item>\n              <Typography\n                color=\"textPrimary\"\n                variant=\"h5\"\n              >\n                Pedidos\n              </Typography>\n              <Breadcrumbs\n                aria-label=\"breadcrumb\"\n                separator={<ChevronRightIcon fontSize=\"small\" />}\n                sx={{ mt: 1 }}\n              >\n                <Link\n                  color=\"textPrimary\"\n                  component={RouterLink}\n                  to=\"/dashboard\"\n                  variant=\"subtitle2\"\n                >\n                  Dashboard\n                </Link>\n                <Link\n                  color=\"textPrimary\"\n                  component={RouterLink}\n                  to=\"/dashboard\"\n                  variant=\"subtitle2\"\n                >\n                  Controle AdminCerti\n                </Link>\n                <Typography\n                  color=\"textSecondary\"\n                  variant=\"subtitle2\"\n                >\n                  Pedidos\n                </Typography>\n              </Breadcrumbs>\n              <Box\n                sx={{\n                  mb: -1,\n                  mx: -1,\n                  mt: 1\n                }}\n              >\n                <Button\n                  color=\"primary\"\n                  startIcon={<UploadIcon fontSize=\"small\" />}\n                  sx={{ m: 1 }}\n                  variant=\"text\"\n                >\n                  Importar\n                </Button>\n                <Button\n                  color=\"primary\"\n                  startIcon={<DownloadIcon fontSize=\"small\" />}\n                  sx={{ m: 1 }}\n                  variant=\"text\"\n                >\n                  Exportar\n                </Button>\n              </Box>\n            </Grid>\n            <Grid item>\n              <Box sx={{ m: -1 }}>\n                <Button\n                  color=\"primary\"\n                  startIcon={<PlusIcon fontSize=\"small\" />}\n                  sx={{ m: 1 }}\n                  variant=\"contained\"\n                >\n                  Novo Pedido\n                </Button>\n              </Box>\n            </Grid>\n          </Grid>\n          <Box sx={{ mt: 3 }}>\n            <InvoiceListTable invoices={invoices} />\n          </Box>\n        </Container>\n      </Box>\n    </>\n  );\n};\n\nexport default InvoiceList;\n","import createSvgIcon from '@material-ui/core/utils/createSvgIcon';\n\nconst ArrowRight = createSvgIcon(\n  <svg\n    xmlns=\"http://www.w3.org/2000/svg\"\n    viewBox=\"0 0 20 20\"\n    fill=\"currentColor\"\n  >\n    <path\n      fillRule=\"evenodd\"\n      d=\"M10.293 3.293a1 1 0 011.414 0l6 6a1 1 0 010 1.414l-6 6a1 1 0 01-1.414-1.414L14.586 11H3a1 1 0 110-2h11.586l-4.293-4.293a1 1 0 010-1.414z\"\n      clipRule=\"evenodd\"\n    />\n  </svg>, 'ArrowRight'\n);\n\nexport default ArrowRight;\n","import createSvgIcon from '@material-ui/core/utils/createSvgIcon';\n\nconst Download = createSvgIcon(\n  <svg\n    xmlns=\"http://www.w3.org/2000/svg\"\n    viewBox=\"0 0 20 20\"\n    fill=\"currentColor\"\n  >\n    <path\n      fillRule=\"evenodd\"\n      d=\"M3 17a1 1 0 011-1h12a1 1 0 110 2H4a1 1 0 01-1-1zm3.293-7.707a1 1 0 011.414 0L9 10.586V3a1 1 0 112 0v7.586l1.293-1.293a1 1 0 111.414 1.414l-3 3a1 1 0 01-1.414 0l-3-3a1 1 0 010-1.414z\"\n      clipRule=\"evenodd\"\n    />\n  </svg>, 'Download'\n);\n\nexport default Download;\n","import createSvgIcon from '@material-ui/core/utils/createSvgIcon';\n\nconst PencilAlt = createSvgIcon(\n  <svg\n    xmlns=\"http://www.w3.org/2000/svg\"\n    viewBox=\"0 0 20 20\"\n    fill=\"currentColor\"\n  >\n    <path d=\"M17.414 2.586a2 2 0 00-2.828 0L7 10.172V13h2.828l7.586-7.586a2 2 0 000-2.828z\" />\n    <path\n      fillRule=\"evenodd\"\n      d=\"M2 6a2 2 0 012-2h4a1 1 0 010 2H4v10h10v-4a1 1 0 112 0v4a2 2 0 01-2 2H4a2 2 0 01-2-2V6z\"\n      clipRule=\"evenodd\"\n    />\n  </svg>, 'PencilAlt'\n);\n\nexport default PencilAlt;\n","import PropTypes from 'prop-types';\nimport { experimentalStyled } from '@material-ui/core/styles';\n\nconst LabelRoot = experimentalStyled('span')((({ theme, styleProps }) => {\n  const backgroundColor = theme.palette[styleProps.color].main;\n  const color = theme.palette[styleProps.color].contrastText;\n\n  return {\n    alignItems: 'center',\n    backgroundColor,\n    borderRadius: theme.shape.borderRadius,\n    color,\n    cursor: 'default',\n    display: 'inline-flex',\n    flexGrow: 0,\n    flexShrink: 0,\n    fontFamily: theme.typography.fontFamily,\n    fontSize: theme.typography.pxToRem(11),\n    fontWeight: theme.typography.fontWeightMedium,\n    justifyContent: 'center',\n    letterSpacing: 0.5,\n    minWidth: 20,\n    paddingBottom: theme.spacing(0.5),\n    paddingLeft: theme.spacing(1),\n    paddingRight: theme.spacing(1),\n    paddingTop: theme.spacing(0.5),\n    textTransform: 'uppercase',\n    whiteSpace: 'nowrap'\n  };\n}));\n\nconst Label = (props) => {\n  const { color = 'primary', children, ...other } = props;\n\n  const styleProps = { color };\n\n  return (\n    <LabelRoot\n      styleProps={styleProps}\n      {...other}\n    >\n      {children}\n    </LabelRoot>\n  );\n};\n\nLabel.propTypes = {\n  children: PropTypes.node,\n  color: PropTypes.oneOf([\n    'primary',\n    'secondary',\n    'error',\n    'warning',\n    'success'\n  ])\n};\n\nexport default Label;\n","import createSvgIcon from '@material-ui/core/utils/createSvgIcon';\n\nconst Plus = createSvgIcon(\n  <svg\n    xmlns=\"http://www.w3.org/2000/svg\"\n    viewBox=\"0 0 20 20\"\n    fill=\"currentColor\"\n  >\n    <path\n      fillRule=\"evenodd\"\n      d=\"M10 5a1 1 0 011 1v3h3a1 1 0 110 2h-3v3a1 1 0 11-2 0v-3H6a1 1 0 110-2h3V6a1 1 0 011-1z\"\n      clipRule=\"evenodd\"\n    />\n  </svg>, 'Plus'\n);\n\nexport default Plus;\n","import createSvgIcon from '@material-ui/core/utils/createSvgIcon';\n\nconst Upload = createSvgIcon(\n  <svg\n    xmlns=\"http://www.w3.org/2000/svg\"\n    viewBox=\"0 0 20 20\"\n    fill=\"currentColor\"\n  >\n    <path\n      fillRule=\"evenodd\"\n      d=\"M3 17a1 1 0 011-1h12a1 1 0 110 2H4a1 1 0 01-1-1zM6.293 6.707a1 1 0 010-1.414l3-3a1 1 0 011.414 0l3 3a1 1 0 01-1.414 1.414L11 5.414V13a1 1 0 11-2 0V5.414L7.707 6.707a1 1 0 01-1.414 0z\"\n      clipRule=\"evenodd\"\n    />\n  </svg>, 'Upload'\n);\n\nexport default Upload;\n","import { subHours, subDays } from 'date-fns';\n\nconst now = new Date();\n\nclass InvoiceApi {\n  getInvoices() {\n    const invoices = [\n      {\n        id: '5ecb868d0f437390ef3ac62c',\n        currency: '$',\n        customer: {\n          email: 'matheus@teste.com.br',\n          name: 'Matheus Bavaresco'\n        },\n        issueDate: subHours(now, 1).getTime(),\n        status: 'paid',\n        totalAmount: 55.50\n      },\n      {\n        id: '5ecb868ada8deedee0638502',\n        currency: '$',\n        customer: {\n          email: 'teste@teste.com.br',\n          name: 'Teste 1'\n        },\n        issueDate: subDays(subHours(now, 5), 2).getTime(),\n        status: 'pending',\n        totalAmount: 253.76\n      },\n      {\n        id: '5ecb868700aba84d0f1c0e48',\n        currency: '$',\n        customer: {\n          email: 'teste@teste.com.br',\n          name: 'Teste 1'\n        },\n        issueDate: subDays(subHours(now, 4), 6).getTime(),\n        status: 'canceled',\n        totalAmount: 781.50\n      },\n    ];\n\n    return Promise.resolve(invoices);\n  }\n\n  getInvoice() {\n    const invoice = {\n      id: '5ecb86785312dcc69b5799ad',\n      currency: '$',\n      customer: {\n        address: '271 Richmond Rd, Grey Lynn, Auckland 1022, New Zealand',\n        company: 'Countdown Grey Lynn',\n        email: 'contact@anahenisky.io',\n        name: 'Ana Henisky',\n        taxId: '6934656584231'\n      },\n      dueDate: now.getTime(),\n      issueDate: subHours(now, 1).getTime(),\n      items: [\n        {\n          id: '5ecb8694db1760a701dfbf74',\n          currency: '$',\n          description: 'Freelancer Subscription (12/05/2019 - 11/06/2019)',\n          unitAmount: 55.50\n        }\n      ],\n      number: 'DEV-9483',\n      status: 'paid',\n      subtotalAmount: 50.00,\n      taxAmount: 5.50,\n      totalAmount: 55.50\n    };\n\n    return Promise.resolve(invoice);\n  }\n}\n\nexport const invoiceApi = new InvoiceApi();\n","import { useState } from 'react';\nimport { Link as RouterLink } from 'react-router-dom';\nimport { format } from 'date-fns';\nimport numeral from 'numeral';\nimport PropTypes from 'prop-types';\nimport {\n  Box,\n  Button,\n  Card,\n  Checkbox,\n  IconButton,\n  InputAdornment,\n  Link,\n  Table,\n  TableBody,\n  TableCell,\n  TableHead,\n  TablePagination,\n  TableRow,\n  TextField,\n  Typography\n} from '@material-ui/core';\nimport ArrowRightIcon from '../../../icons/ArrowRight';\nimport PencilAltIcon from '../../../icons/PencilAlt';\nimport SearchIcon from '../../../icons/Search';\nimport Label from '../../Label';\nimport Scrollbar from '../../Scrollbar';\n\nconst statusOptions = [\n  {\n    label: 'Todos',\n    value: 'all'\n  },\n  {\n    label: 'Pago',\n    value: 'paid'\n  },\n  {\n    label: 'Pendente',\n    value: 'pending'\n  },\n  {\n    label: 'Cancelada',\n    value: 'canceled'\n  }\n];\n\nconst sortOptions = [\n  {\n    label: 'Newest first',\n    value: 'createdAt|desc'\n  },\n  {\n    label: 'Oldest first',\n    value: 'createdAt|asc'\n  }\n];\n\nconst getStatusLabel = (invoiceStatus) => {\n  const map = {\n    canceled: {\n      color: 'error',\n      text: 'Canceled'\n    },\n    paid: {\n      color: 'success',\n      text: 'Paid'\n    },\n    pending: {\n      color: 'warning',\n      text: 'Pending'\n    }\n  };\n\n  const { text, color } = map[invoiceStatus];\n\n  return (\n    <Label color={color}>\n      {text}\n    </Label>\n  );\n};\n\nconst applyFilters = (invoices, query, filters) => invoices\n  .filter((invoice) => {\n    let matches = true;\n\n    if (query) {\n      const properties = ['name', 'email'];\n      let containsQuery = false;\n\n      properties.forEach((property) => {\n        if (invoice.customer[property].toLowerCase().includes(query.toLowerCase())) {\n          containsQuery = true;\n        }\n      });\n\n      if (!containsQuery) {\n        matches = false;\n      }\n    }\n\n    if (filters.status && invoice.status !== filters.status) {\n      matches = false;\n    }\n\n    return matches;\n  });\n\nconst applyPagination = (invoices, page, limit) => invoices\n  .slice(page * limit, page * limit + limit);\n\nconst InvoiceListTable = (props) => {\n  const { invoices, ...other } = props;\n  const [selectedInvoices, setSelectedInvoices] = useState([]);\n  const [page, setPage] = useState(0);\n  const [limit, setLimit] = useState(10);\n  const [query, setQuery] = useState('');\n  const [sort, setSort] = useState(sortOptions[0].value);\n  const [filters, setFilters] = useState({\n    status: null\n  });\n\n  const handleQueryChange = (event) => {\n    setQuery(event.target.value);\n  };\n\n  const handleStatusChange = (event) => {\n    let value = null;\n\n    if (event.target.value !== 'all') {\n      value = event.target.value;\n    }\n\n    setFilters((prevFilters) => ({\n      ...prevFilters,\n      status: value\n    }));\n  };\n\n  const handleSortChange = (event) => {\n    setSort(event.target.value);\n  };\n\n  const handleSelectAllInvoices = (event) => {\n    setSelectedInvoices(event.target.checked\n      ? invoices.map((invoice) => invoice.id)\n      : []);\n  };\n\n  const handleSelectOneInvoice = (event, invoiceId) => {\n    if (!selectedInvoices.includes(invoiceId)) {\n      setSelectedInvoices((prevSelected) => [...prevSelected, invoiceId]);\n    } else {\n      setSelectedInvoices((prevSelected) => prevSelected.filter((id) => id !== invoiceId));\n    }\n  };\n\n  const handlePageChange = (event, newPage) => {\n    setPage(newPage);\n  };\n\n  const handleLimitChange = (event) => {\n    setLimit(parseInt(event.target.value, 10));\n  };\n\n  // Usually query is done on backend with indexing solutions\n  const filteredInvoices = applyFilters(invoices, query, filters);\n  const paginatedInvoices = applyPagination(filteredInvoices, page, limit);\n  const enableBulkActions = selectedInvoices.length > 0;\n  const selectedSomeInvoices = selectedInvoices.length > 0\n    && selectedInvoices.length < invoices.length;\n  const selectedAllInvoices = selectedInvoices.length === invoices.length;\n\n  return (\n    <Card {...other}>\n      <Box\n        sx={{\n          alignItems: 'center',\n          display: 'flex',\n          flexWrap: 'wrap',\n          m: -1,\n          p: 2\n        }}\n      >\n        <Box\n          sx={{\n            m: 1,\n            maxWidth: '100%',\n            width: 500\n          }}\n        >\n          <TextField\n            fullWidth\n            InputProps={{\n              startAdornment: (\n                <InputAdornment position=\"start\">\n                  <SearchIcon fontSize=\"small\" />\n                </InputAdornment>\n              )\n            }}\n            onChange={handleQueryChange}\n            placeholder=\"Procurar Pedidos\"\n            value={query}\n            variant=\"outlined\"\n          />\n        </Box>\n        <Box\n          sx={{\n            m: 1,\n            maxWidth: '100%',\n            width: 240\n          }}\n        >\n          <TextField\n            fullWidth\n            label=\"Ordenar por\"\n            name=\"sort\"\n            onChange={handleSortChange}\n            select\n            SelectProps={{ native: true }}\n            value={sort}\n            variant=\"outlined\"\n          >\n            {sortOptions.map((option) => (\n              <option\n                key={option.value}\n                value={option.value}\n              >\n                {option.label}\n              </option>\n            ))}\n          </TextField>\n        </Box>\n        <Box\n          sx={{\n            m: 1,\n            maxWidth: '100%',\n            width: 240\n          }}\n        >\n          <TextField\n            fullWidth\n            label=\"Status\"\n            name=\"status\"\n            onChange={handleStatusChange}\n            select\n            SelectProps={{ native: true }}\n            value={filters.status || 'all'}\n            variant=\"outlined\"\n          >\n            {statusOptions.map((statusOption) => (\n              <option\n                key={statusOption.value}\n                value={statusOption.value}\n              >\n                {statusOption.label}\n              </option>\n            ))}\n          </TextField>\n        </Box>\n      </Box>\n      {enableBulkActions && (\n        <Box sx={{ position: 'relative' }}>\n          <Box\n            sx={{\n              backgroundColor: 'background.paper',\n              mt: '6px',\n              position: 'absolute',\n              px: '4px',\n              width: '100%',\n              zIndex: 2\n            }}\n          >\n            <Checkbox\n              checked={selectedAllInvoices}\n              color=\"primary\"\n              indeterminate={selectedSomeInvoices}\n              onChange={handleSelectAllInvoices}\n            />\n            <Button\n              color=\"primary\"\n              sx={{ ml: 2 }}\n              variant=\"outlined\"\n            >\n              Delete\n            </Button>\n            <Button\n              color=\"primary\"\n              sx={{ ml: 2 }}\n              variant=\"outlined\"\n            >\n              Edit\n            </Button>\n          </Box>\n        </Box>\n      )}\n      <Scrollbar>\n        <Box sx={{ minWidth: 1200 }}>\n          <Table>\n            <TableHead>\n              <TableRow>\n                <TableCell padding=\"checkbox\">\n                  <Checkbox\n                    checked={selectedAllInvoices}\n                    color=\"primary\"\n                    indeterminate={selectedSomeInvoices}\n                    onChange={handleSelectAllInvoices}\n                  />\n                </TableCell>\n                <TableCell>\n                  Cliente\n                </TableCell>\n                <TableCell>\n                  Status\n                </TableCell>\n                <TableCell>\n                  Valor\n                </TableCell>\n                <TableCell>\n                  ID\n                </TableCell>\n                <TableCell>\n                  Data\n                </TableCell>\n                <TableCell align=\"right\">\n                  Mais Informações\n                </TableCell>\n              </TableRow>\n            </TableHead>\n            <TableBody>\n              {paginatedInvoices.map((invoice) => {\n                const isInvoiceSelected = selectedInvoices.includes(invoice.id);\n\n                return (\n                  <TableRow\n                    hover\n                    key={invoice.id}\n                    selected={isInvoiceSelected}\n                  >\n                    <TableCell padding=\"checkbox\">\n                      <Checkbox\n                        checked={isInvoiceSelected}\n                        color=\"primary\"\n                        onChange={(event) => handleSelectOneInvoice(event, invoice.id)}\n                        value={isInvoiceSelected}\n                      />\n                    </TableCell>\n                    <TableCell>\n                      <Link\n                        color=\"textPrimary\"\n                        component={RouterLink}\n                        to=\"#\"\n                        underline=\"none\"\n                        variant=\"subtitle2\"\n                      >\n                        {invoice.customer.name}\n                      </Link>\n                      <Typography\n                        color=\"textSecondary\"\n                        variant=\"body2\"\n                      >\n                        {invoice.customer.email}\n                      </Typography>\n                    </TableCell>\n                    <TableCell>\n                      {getStatusLabel(invoice.status)}\n                    </TableCell>\n                    <TableCell>\n                      {numeral(invoice.totalAmount)\n                        .format(`${invoice.currency}0,0.00`)}\n                    </TableCell>\n                    <TableCell>\n                      {invoice.id}\n                    </TableCell>\n                    <TableCell>\n                      {format(invoice.issueDate, 'dd/MM/yyyy')}\n                    </TableCell>\n                    <TableCell align=\"right\">\n                      <IconButton\n                        component={RouterLink}\n                        to=\"#\"\n                      >\n                        <PencilAltIcon fontSize=\"small\" />\n                      </IconButton>\n                      <IconButton\n                        component={RouterLink}\n                        to=\"/dashboard/invoices/1\"\n                      >\n                        <ArrowRightIcon fontSize=\"small\" />\n                      </IconButton>\n                    </TableCell>\n                  </TableRow>\n                );\n              })}\n            </TableBody>\n          </Table>\n        </Box>\n      </Scrollbar>\n      <TablePagination\n        component=\"div\"\n        count={filteredInvoices.length}\n        onPageChange={handlePageChange}\n        onRowsPerPageChange={handleLimitChange}\n        page={page}\n        rowsPerPage={limit}\n        rowsPerPageOptions={[5, 10, 25]}\n      />\n    </Card>\n  );\n};\n\nInvoiceListTable.propTypes = {\n  invoices: PropTypes.array.isRequired\n};\n\nexport default InvoiceListTable;\n","import PropTypes from 'prop-types';\nimport { format } from 'date-fns';\nimport numeral from 'numeral';\nimport { Document, Page, View, Text, Image, StyleSheet } from '@react-pdf/renderer';\n\nconst COL1_WIDTH = 60;\nconst COLN_WIDTH = (100 - COL1_WIDTH) / 2;\n\nconst styles = StyleSheet.create({\n  page: {\n    backgroundColor: '#ffffff',\n    padding: 24\n  },\n  h4: {\n    fontSize: 14,\n    fontWeight: 600,\n    lineHeight: 1.235\n  },\n  h6: {\n    fontSize: 12,\n    fontWeight: 600,\n    lineHeight: 1.6\n  },\n  subtitle2: {\n    fontSize: 10,\n    fontWeight: 500,\n    lineHeight: 1.57\n  },\n  body2: {\n    fontSize: 10,\n    lineHeight: 1.43\n  },\n  gutterBottom: {\n    marginBottom: 4\n  },\n  header: {\n    flexDirection: 'row',\n    justifyContent: 'space-between'\n  },\n  brand: {\n    height: 32,\n    width: 32\n  },\n  company: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    marginTop: 32\n  },\n  references: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    marginTop: 32\n  },\n  billing: {\n    marginTop: 32\n  },\n  items: {\n    marginTop: 32\n  },\n  notes: {\n    marginTop: 32\n  },\n  table: {\n    display: 'flex',\n    width: 'auto'\n  },\n  tableHeader: {},\n  tableBody: {},\n  tableRow: {\n    borderBottomWidth: 1,\n    borderColor: '#EEEEEE',\n    borderStyle: 'solid',\n    flexDirection: 'row'\n  },\n  tableCell1: {\n    padding: 6,\n    width: `${COL1_WIDTH}%`\n  },\n  tableCellN: {\n    padding: 6,\n    width: `${COLN_WIDTH}%`\n  },\n  alignRight: {\n    textAlign: 'right'\n  }\n});\n\nconst InvoicePDF = (props) => {\n  const { invoice } = props;\n\n  return (\n    <Document>\n      <Page\n        size=\"A4\"\n        style={styles.page}\n      >\n        <View style={styles.header}>\n          <View>\n            <Image\n              source=\"/static/favicon (1).png\"\n              style={styles.brand}\n            />\n            <Text style={styles.h6}>\n              www.admincert.com.br\n            </Text>\n          </View>\n          <View>\n            <Text style={styles.h4}>\n              {invoice.status}\n            </Text>\n            <Text style={styles.subtitle2}>\n              IPedido Teste #000001\n            </Text>\n          </View>\n        </View>\n        <View style={styles.company}>\n          <View>\n            <Text style={styles.body2}>\n              Rua Teste\n            </Text>\n            <Text style={styles.body2}>\n              Number Teste\n            </Text>\n            <Text style={styles.body2}>\n              Brasil\n            </Text>\n          </View>\n          <View>\n            <Text style={styles.body2}>\n              BRWORKS\n            </Text>\n            <Text style={styles.body2}>\n              cnpj teste\n            </Text>\n          </View>\n          <View>\n            <Text style={styles.body2}>\n              teste@teste.com.br\n            </Text>\n            <Text style={styles.body2}>\n              11 1111-1111\n            </Text>\n          </View>\n        </View>\n        <View style={styles.references}>\n          <View>\n            <Text style={[styles.subtitle2, styles.gutterBottom]}>\n              Data do Pedido\n            </Text>\n            <Text style={styles.body2}>\n              {format(invoice.dueDate, 'dd MMM yyyy')}\n            </Text>\n          </View>\n          <View>\n            <Text style={[styles.subtitle2, styles.gutterBottom]}>\n              Data de saída\n            </Text>\n            <Text style={styles.body2}>\n              {format(invoice.issueDate, 'dd MMM yyyy')}\n            </Text>\n          </View>\n          <View>\n            <Text style={[styles.subtitle2, styles.gutterBottom]}>\n              Id do Pedido\n            </Text>\n            <Text style={styles.body2}>\n              #00001\n            </Text>\n          </View>\n        </View>\n        <View style={styles.billing}>\n          <Text style={[styles.subtitle2, styles.gutterBottom]}>\n            Cobrança em nome de\n          </Text>\n          <Text style={styles.body2}>\n            Matheus Bavaresco\n          </Text>\n          <Text style={styles.body2}>\n            Teste\n          </Text>\n          <Text style={styles.body2}>\n            Teste\n          </Text>\n          <Text style={styles.body2}>\n            Teste\n          </Text>\n        </View>\n        <View style={styles.items}>\n          <View style={styles.table}>\n            <View style={styles.tableHeader}>\n              <View style={styles.tableRow}>\n                <View style={styles.tableCell1}>\n                  <Text style={styles.h6}>\n                    Descrição\n                  </Text>\n                </View>\n                <View style={styles.tableCellN} />\n                <View style={styles.tableCellN}>\n                  <Text style={[styles.h6, styles.alignRight]}>\n                    Valor unitário\n                  </Text>\n                </View>\n              </View>\n            </View>\n            <View style={styles.tableBody}>\n              {invoice.items.map((item) => (\n                <View\n                  style={styles.tableRow}\n                  key={item.id}\n                >\n                  <View style={styles.tableCell1}>\n                    <Text style={styles.body2}>\n                      Certidão de Teste\n                    </Text>\n                  </View>\n                  <View style={styles.tableCellN} />\n                  <View style={styles.tableCellN}>\n                    <Text style={[styles.body2, styles.alignRight]}>\n                      {numeral(item.unitAmount)\n                        .format(`${item.currency}0,0.00`)}\n                    </Text>\n                  </View>\n                </View>\n              ))}\n              <View style={styles.tableRow}>\n                <View style={styles.tableCell1} />\n                <View style={styles.tableCellN}>\n                  <Text style={styles.body2}>\n                    Subtotal\n                  </Text>\n                </View>\n                <View style={styles.tableCellN}>\n                  <Text style={[styles.body2, styles.alignRight]}>\n                    {numeral(invoice.subtotalAmount)\n                      .format(`${invoice.currency}0,0.00`)}\n                  </Text>\n                </View>\n              </View>\n              <View style={styles.tableRow}>\n                <View style={styles.tableCell1} />\n                <View style={styles.tableCellN}>\n                  <Text style={styles.body2}>\n                    Taxas\n                  </Text>\n                </View>\n                <View style={styles.tableCellN}>\n                  <Text style={[styles.body2, styles.alignRight]}>\n                    {numeral(invoice.taxAmount)\n                      .format(`${invoice.currency}0,0.00`)}\n                  </Text>\n                </View>\n              </View>\n              <View style={styles.tableRow}>\n                <View style={styles.tableCell1} />\n                <View style={styles.tableCellN}>\n                  <Text style={styles.body2}>\n                    Total\n                  </Text>\n                </View>\n                <View style={styles.tableCellN}>\n                  <Text style={[styles.body2, styles.alignRight]}>\n                    {numeral(invoice.totalAmount)\n                      .format(`${invoice.currency}0,0.00`)}\n                  </Text>\n                </View>\n              </View>\n            </View>\n          </View>\n        </View>\n        <View style={styles.notes}>\n          <Text style={[styles.h6, styles.gutterBottom]}>\n            Notas\n          </Text>\n          <Text style={styles.body2}>\n            Ao receber seu pedido apresentar esse documento para validação\n          </Text>\n        </View>\n      </Page>\n    </Document>\n  );\n};\n\nInvoicePDF.propTypes = {\n  invoice: PropTypes.object.isRequired\n};\n\nexport default InvoicePDF;\n","import PropTypes from 'prop-types';\nimport { format } from 'date-fns';\nimport numeral from 'numeral';\nimport {\n  Box,\n  Grid,\n  Paper,\n  Table,\n  TableBody,\n  TableCell,\n  TableHead,\n  TableRow,\n  Typography\n} from '@material-ui/core';\nimport Logo from '../../Logo';\nimport Scrollbar from '../../Scrollbar';\n\nconst InvoicePreview = (props) => {\n  const { invoice, ...other } = props;\n\n  return (\n    <Paper {...other}>\n      <Scrollbar>\n        <Box\n          sx={{\n            minWidth: 800,\n            p: 6\n          }}\n        >\n          <Grid\n            container\n            justifyContent=\"space-between\"\n          >\n            <Grid item>\n              <Logo />\n              <Typography\n                color=\"textPrimary\"\n                variant=\"h6\"\n              >\n                www.admincert.com.br\n              </Typography>\n            </Grid>\n            <Grid item>\n              <Typography\n                align=\"right\"\n                color=\"textPrimary\"\n                variant=\"h4\"\n              >\n                AdminCerti\n              </Typography>\n              <Typography\n                align=\"right\"\n                color=\"textPrimary\"\n                variant=\"subtitle2\"\n              >\n                Pedido Teste #000001\n              </Typography>\n            </Grid>\n          </Grid>\n          <Box sx={{ my: 4 }}>\n            <Grid\n              container\n              justifyContent=\"space-between\"\n            >\n              <Grid item>\n                <Typography\n                  color=\"textPrimary\"\n                  variant=\"body2\"\n                >\n                  Rua Teste\n                  <br />\n                  Number Teste\n                  <br />\n                  Brasil\n                </Typography>\n              </Grid>\n              <Grid item>\n                <Typography\n                  color=\"textPrimary\"\n                  variant=\"body2\"\n                >\n                  BRWORKS\n                  <br />\n                  CNPJ TESTE\n                  <br />\n                </Typography>\n              </Grid>\n              <Grid item>\n                <Typography\n                  align=\"right\"\n                  color=\"textPrimary\"\n                  variant=\"body2\"\n                >\n                  teste@teste.com.br\n                  <br />\n                  11 1111-1111\n                </Typography>\n              </Grid>\n            </Grid>\n          </Box>\n          <Box sx={{ my: 4 }}>\n            <Grid\n              container\n              justifyContent=\"space-between\"\n            >\n              <Grid item>\n                <Typography\n                  color=\"textPrimary\"\n                  gutterBottom\n                  variant=\"subtitle2\"\n                >\n                  Data do Pedido\n                </Typography>\n                <Typography\n                  color=\"textPrimary\"\n                  variant=\"body2\"\n                >\n                  {format(invoice.dueDate, 'dd MMM yyyy')}\n                </Typography>\n              </Grid>\n              <Grid item>\n                <Typography\n                  color=\"textPrimary\"\n                  gutterBottom\n                  variant=\"subtitle2\"\n                >\n                  Data de Saída\n                </Typography>\n                <Typography\n                  color=\"textPrimary\"\n                  variant=\"body2\"\n                >\n                  {format(invoice.issueDate, 'dd MMM yyyy')}\n                </Typography>\n              </Grid>\n              <Grid item>\n                <Typography\n                  color=\"textPrimary\"\n                  gutterBottom\n                  variant=\"subtitle2\"\n                >\n                  Id do Pedido\n                </Typography>\n                <Typography\n                  color=\"textPrimary\"\n                  variant=\"body2\"\n                >\n                  #000001\n                </Typography>\n              </Grid>\n            </Grid>\n          </Box>\n          <Box sx={{ my: 4 }}>\n            <Typography\n              color=\"textPrimary\"\n              gutterBottom\n              variant=\"subtitle2\"\n            >\n              Cobrança em nome de\n            </Typography>\n            <Typography\n              color=\"textPrimary\"\n              variant=\"body2\"\n            >\n              Matheus Bavaresco\n              <br />\n              Teste\n              <br />\n              Teste\n              <br />\n              Teste\n            </Typography>\n          </Box>\n          <Table>\n            <TableHead>\n              <TableRow>\n                <TableCell>\n                  Produtos do Pedido\n                </TableCell>\n                <TableCell />\n                <TableCell align=\"right\">\n                  Valor Unitário\n                </TableCell>\n              </TableRow>\n            </TableHead>\n            <TableBody>\n              {invoice.items.map((items) => (\n                <TableRow key={items.id}>\n                  <TableCell>\n                    Certidão de Teste\n                  </TableCell>\n                  <TableCell />\n                  <TableCell align=\"right\">\n                    {numeral(items.unitAmount)\n                      .format(`${items.currency}0,0.00`)}\n                  </TableCell>\n                </TableRow>\n              ))}\n              <TableRow>\n                <TableCell />\n                <TableCell>\n                  <Typography\n                    color=\"textPrimary\"\n                    gutterBottom\n                    variant=\"subtitle2\"\n                  >\n                    Subtotal\n                  </Typography>\n                </TableCell>\n                <TableCell align=\"right\">\n                  {numeral(invoice.subtotalAmount)\n                    .format(`${invoice.currency}0,0.00`)}\n                </TableCell>\n              </TableRow>\n              <TableRow>\n                <TableCell />\n                <TableCell>\n                  <Typography\n                    color=\"textPrimary\"\n                    gutterBottom\n                    variant=\"subtitle2\"\n                  >\n                    Taxas\n                  </Typography>\n                </TableCell>\n                <TableCell align=\"right\">\n                  {numeral(invoice.taxAmount)\n                    .format(`${invoice.currency}0,0.00`)}\n                </TableCell>\n              </TableRow>\n              <TableRow>\n                <TableCell />\n                <TableCell>\n                  <Typography\n                    color=\"textPrimary\"\n                    gutterBottom\n                    variant=\"subtitle2\"\n                  >\n                    Total\n                  </Typography>\n                </TableCell>\n                <TableCell align=\"right\">\n                  {numeral(invoice.totalAmount)\n                    .format(`${invoice.currency}0,0.00`)}\n                </TableCell>\n              </TableRow>\n            </TableBody>\n          </Table>\n          <Box sx={{ mt: 2 }}>\n            <Typography\n              color=\"textPrimary\"\n              gutterBottom\n              variant=\"h6\"\n            >\n              Notas\n            </Typography>\n            <Typography\n              color=\"textSecondary\"\n              variant=\"body2\"\n            >\n              Ao receber seu pedido apresentar esse documento para validação\n            </Typography>\n          </Box>\n        </Box>\n      </Scrollbar>\n    </Paper>\n  );\n};\n\nInvoicePreview.propTypes = {\n  invoice: PropTypes.object.isRequired\n};\n\nexport default InvoicePreview;\n"],"sourceRoot":""}