{"version":3,"sources":["pages/dashboard/InvoiceList.js","icons/ArrowRight.js","icons/PencilAlt.js","components/Label.js","icons/Download.js","icons/Plus.js","icons/Upload.js","__fakeApi__/invoiceApi.js","components/dashboard/invoice/InvoiceListTable.js","components/dashboard/invoice/InvoicePDF.js","components/dashboard/invoice/InvoicePreview.js"],"names":["InvoiceList","mounted","useMounted","settings","useSettings","useState","invoices","setInvoices","useEffect","gtm","push","event","getInvoices","useCallback","a","invoiceApi","data","current","console","error","sx","backgroundColor","minHeight","py","maxWidth","compact","container","justifyContent","spacing","item","color","variant","aria-label","separator","fontSize","mt","component","RouterLink","to","mb","mx","startIcon","m","ArrowRight","createSvgIcon","xmlns","viewBox","fill","fillRule","d","clipRule","PencilAlt","LabelRoot","experimentalStyled","theme","styleProps","palette","main","contrastText","alignItems","borderRadius","shape","cursor","display","flexGrow","flexShrink","fontFamily","typography","pxToRem","fontWeight","fontWeightMedium","letterSpacing","minWidth","paddingBottom","paddingLeft","paddingRight","paddingTop","textTransform","whiteSpace","Label","props","children","other","Download","Plus","Upload","now","Date","id","currency","customer","email","name","issueDate","subHours","getTime","status","totalAmount","subDays","Promise","resolve","invoice","address","company","taxId","dueDate","items","description","unitAmount","number","subtotalAmount","taxAmount","statusOptions","label","value","sortOptions","getStatusLabel","invoiceStatus","canceled","text","paid","pending","InvoiceListTable","selectedInvoices","setSelectedInvoices","page","setPage","limit","setLimit","query","setQuery","sort","setSort","filters","setFilters","handleSelectAllInvoices","target","checked","map","filteredInvoices","filter","matches","containsQuery","forEach","property","toLowerCase","includes","applyFilters","paginatedInvoices","slice","applyPagination","enableBulkActions","length","selectedSomeInvoices","selectedAllInvoices","Card","Box","flexWrap","p","width","TextField","fullWidth","InputProps","startAdornment","InputAdornment","position","Search","onChange","placeholder","select","SelectProps","native","option","prevFilters","statusOption","px","zIndex","Checkbox","indeterminate","Button","ml","Scrollbar","Table","TableHead","TableRow","TableCell","padding","align","TableBody","isInvoiceSelected","hover","selected","invoiceId","prevSelected","Link","underline","Typography","numeral","format","IconButton","TablePagination","count","onPageChange","newPage","onRowsPerPageChange","parseInt","rowsPerPage","rowsPerPageOptions","styles","StyleSheet","create","h4","lineHeight","h6","subtitle2","body2","gutterBottom","marginBottom","header","flexDirection","brand","height","marginTop","references","billing","notes","table","tableHeader","tableBody","tableRow","borderBottomWidth","borderColor","borderStyle","tableCell1","tableCellN","alignRight","textAlign","InvoicePDF","size","style","source","InvoicePreview","Paper","Grid","Logo","my"],"mappings":"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","file":"static/js/28.d87d4604.chunk.js","sourcesContent":["import { useState, useEffect, useCallback } from 'react';\r\nimport { Link as RouterLink } from 'react-router-dom';\r\nimport { Helmet } from 'react-helmet-async';\r\nimport { Box, Breadcrumbs, Button, Container, Grid, Link, Typography } from '@material-ui/core';\r\nimport { invoiceApi } from '../../__fakeApi__/invoiceApi';\r\nimport { InvoiceListTable } from '../../components/dashboard/invoice';\r\nimport useMounted from '../../hooks/useMounted';\r\nimport useSettings from '../../hooks/useSettings';\r\nimport ChevronRightIcon from '../../icons/ChevronRight';\r\nimport DownloadIcon from '../../icons/Download';\r\nimport PlusIcon from '../../icons/Plus';\r\nimport UploadIcon from '../../icons/Upload';\r\nimport gtm from '../../lib/gtm';\r\n\r\nconst InvoiceList = () => {\r\n  const mounted = useMounted();\r\n  const { settings } = useSettings();\r\n  const [invoices, setInvoices] = useState([]);\r\n\r\n  useEffect(() => {\r\n    gtm.push({ event: 'page_view' });\r\n  }, []);\r\n\r\n  const getInvoices = useCallback(async () => {\r\n    try {\r\n      const data = await invoiceApi.getInvoices();\r\n\r\n      if (mounted.current) {\r\n        setInvoices(data);\r\n      }\r\n    } catch (err) {\r\n      console.error(err);\r\n    }\r\n  }, [mounted]);\r\n\r\n  useEffect(() => {\r\n    getInvoices();\r\n  }, [getInvoices]);\r\n\r\n  return (\r\n    <>\r\n      <Helmet>\r\n        <title>AdminCerti | Pedidos</title>\r\n      </Helmet>\r\n      <Box\r\n        sx={{\r\n          backgroundColor: 'background.default',\r\n          minHeight: '100%',\r\n          py: 8\r\n        }}\r\n      >\r\n        <Container maxWidth={settings.compact ? 'xl' : false}>\r\n          <Grid\r\n            container\r\n            justifyContent=\"space-between\"\r\n            spacing={3}\r\n          >\r\n            <Grid item>\r\n              <Typography\r\n                color=\"textPrimary\"\r\n                variant=\"h5\"\r\n              >\r\n                Pedidos\r\n              </Typography>\r\n              <Breadcrumbs\r\n                aria-label=\"breadcrumb\"\r\n                separator={<ChevronRightIcon fontSize=\"small\" />}\r\n                sx={{ mt: 1 }}\r\n              >\r\n                <Link\r\n                  color=\"textPrimary\"\r\n                  component={RouterLink}\r\n                  to=\"/dashboard\"\r\n                  variant=\"subtitle2\"\r\n                >\r\n                  Dashboard\r\n                </Link>\r\n                <Link\r\n                  color=\"textPrimary\"\r\n                  component={RouterLink}\r\n                  to=\"/dashboard\"\r\n                  variant=\"subtitle2\"\r\n                >\r\n                  Controle AdminCerti\r\n                </Link>\r\n                <Typography\r\n                  color=\"textSecondary\"\r\n                  variant=\"subtitle2\"\r\n                >\r\n                  Pedidos\r\n                </Typography>\r\n              </Breadcrumbs>\r\n              <Box\r\n                sx={{\r\n                  mb: -1,\r\n                  mx: -1,\r\n                  mt: 1\r\n                }}\r\n              >\r\n                <Button\r\n                  color=\"primary\"\r\n                  startIcon={<UploadIcon fontSize=\"small\" />}\r\n                  sx={{ m: 1 }}\r\n                  variant=\"text\"\r\n                >\r\n                  Importar\r\n                </Button>\r\n                <Button\r\n                  color=\"primary\"\r\n                  startIcon={<DownloadIcon fontSize=\"small\" />}\r\n                  sx={{ m: 1 }}\r\n                  variant=\"text\"\r\n                >\r\n                  Exportar\r\n                </Button>\r\n              </Box>\r\n            </Grid>\r\n            <Grid item>\r\n              <Box sx={{ m: -1 }}>\r\n                <Button\r\n                  color=\"primary\"\r\n                  startIcon={<PlusIcon fontSize=\"small\" />}\r\n                  sx={{ m: 1 }}\r\n                  variant=\"contained\"\r\n                >\r\n                  Novo Pedido\r\n                </Button>\r\n              </Box>\r\n            </Grid>\r\n          </Grid>\r\n          <Box sx={{ mt: 3 }}>\r\n            <InvoiceListTable invoices={invoices} />\r\n          </Box>\r\n        </Container>\r\n      </Box>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default InvoiceList;\r\n","import createSvgIcon from '@material-ui/core/utils/createSvgIcon';\r\n\r\nconst ArrowRight = createSvgIcon(\r\n  <svg\r\n    xmlns=\"http://www.w3.org/2000/svg\"\r\n    viewBox=\"0 0 20 20\"\r\n    fill=\"currentColor\"\r\n  >\r\n    <path\r\n      fillRule=\"evenodd\"\r\n      d=\"M10.293 3.293a1 1 0 011.414 0l6 6a1 1 0 010 1.414l-6 6a1 1 0 01-1.414-1.414L14.586 11H3a1 1 0 110-2h11.586l-4.293-4.293a1 1 0 010-1.414z\"\r\n      clipRule=\"evenodd\"\r\n    />\r\n  </svg>, 'ArrowRight'\r\n);\r\n\r\nexport default ArrowRight;\r\n","import createSvgIcon from '@material-ui/core/utils/createSvgIcon';\r\n\r\nconst PencilAlt = createSvgIcon(\r\n  <svg\r\n    xmlns=\"http://www.w3.org/2000/svg\"\r\n    viewBox=\"0 0 20 20\"\r\n    fill=\"currentColor\"\r\n  >\r\n    <path d=\"M17.414 2.586a2 2 0 00-2.828 0L7 10.172V13h2.828l7.586-7.586a2 2 0 000-2.828z\" />\r\n    <path\r\n      fillRule=\"evenodd\"\r\n      d=\"M2 6a2 2 0 012-2h4a1 1 0 010 2H4v10h10v-4a1 1 0 112 0v4a2 2 0 01-2 2H4a2 2 0 01-2-2V6z\"\r\n      clipRule=\"evenodd\"\r\n    />\r\n  </svg>, 'PencilAlt'\r\n);\r\n\r\nexport default PencilAlt;\r\n","import PropTypes from 'prop-types';\r\nimport { experimentalStyled } from '@material-ui/core/styles';\r\n\r\nconst LabelRoot = experimentalStyled('span')((({ theme, styleProps }) => {\r\n  const backgroundColor = theme.palette[styleProps.color].main;\r\n  const color = theme.palette[styleProps.color].contrastText;\r\n\r\n  return {\r\n    alignItems: 'center',\r\n    backgroundColor,\r\n    borderRadius: theme.shape.borderRadius,\r\n    color,\r\n    cursor: 'default',\r\n    display: 'inline-flex',\r\n    flexGrow: 0,\r\n    flexShrink: 0,\r\n    fontFamily: theme.typography.fontFamily,\r\n    fontSize: theme.typography.pxToRem(11),\r\n    fontWeight: theme.typography.fontWeightMedium,\r\n    justifyContent: 'center',\r\n    letterSpacing: 0.5,\r\n    minWidth: 20,\r\n    paddingBottom: theme.spacing(0.5),\r\n    paddingLeft: theme.spacing(1),\r\n    paddingRight: theme.spacing(1),\r\n    paddingTop: theme.spacing(0.5),\r\n    textTransform: 'uppercase',\r\n    whiteSpace: 'nowrap'\r\n  };\r\n}));\r\n\r\nconst Label = (props) => {\r\n  const { color = 'primary', children, ...other } = props;\r\n\r\n  const styleProps = { color };\r\n\r\n  return (\r\n    <LabelRoot\r\n      styleProps={styleProps}\r\n      {...other}\r\n    >\r\n      {children}\r\n    </LabelRoot>\r\n  );\r\n};\r\n\r\nLabel.propTypes = {\r\n  children: PropTypes.node,\r\n  color: PropTypes.oneOf([\r\n    'primary',\r\n    'secondary',\r\n    'error',\r\n    'warning',\r\n    'success'\r\n  ])\r\n};\r\n\r\nexport default Label;\r\n","import createSvgIcon from '@material-ui/core/utils/createSvgIcon';\r\n\r\nconst Download = createSvgIcon(\r\n  <svg\r\n    xmlns=\"http://www.w3.org/2000/svg\"\r\n    viewBox=\"0 0 20 20\"\r\n    fill=\"currentColor\"\r\n  >\r\n    <path\r\n      fillRule=\"evenodd\"\r\n      d=\"M3 17a1 1 0 011-1h12a1 1 0 110 2H4a1 1 0 01-1-1zm3.293-7.707a1 1 0 011.414 0L9 10.586V3a1 1 0 112 0v7.586l1.293-1.293a1 1 0 111.414 1.414l-3 3a1 1 0 01-1.414 0l-3-3a1 1 0 010-1.414z\"\r\n      clipRule=\"evenodd\"\r\n    />\r\n  </svg>, 'Download'\r\n);\r\n\r\nexport default Download;\r\n","import createSvgIcon from '@material-ui/core/utils/createSvgIcon';\r\n\r\nconst Plus = createSvgIcon(\r\n  <svg\r\n    xmlns=\"http://www.w3.org/2000/svg\"\r\n    viewBox=\"0 0 20 20\"\r\n    fill=\"currentColor\"\r\n  >\r\n    <path\r\n      fillRule=\"evenodd\"\r\n      d=\"M10 5a1 1 0 011 1v3h3a1 1 0 110 2h-3v3a1 1 0 11-2 0v-3H6a1 1 0 110-2h3V6a1 1 0 011-1z\"\r\n      clipRule=\"evenodd\"\r\n    />\r\n  </svg>, 'Plus'\r\n);\r\n\r\nexport default Plus;\r\n","import createSvgIcon from '@material-ui/core/utils/createSvgIcon';\r\n\r\nconst Upload = createSvgIcon(\r\n  <svg\r\n    xmlns=\"http://www.w3.org/2000/svg\"\r\n    viewBox=\"0 0 20 20\"\r\n    fill=\"currentColor\"\r\n  >\r\n    <path\r\n      fillRule=\"evenodd\"\r\n      d=\"M3 17a1 1 0 011-1h12a1 1 0 110 2H4a1 1 0 01-1-1zM6.293 6.707a1 1 0 010-1.414l3-3a1 1 0 011.414 0l3 3a1 1 0 01-1.414 1.414L11 5.414V13a1 1 0 11-2 0V5.414L7.707 6.707a1 1 0 01-1.414 0z\"\r\n      clipRule=\"evenodd\"\r\n    />\r\n  </svg>, 'Upload'\r\n);\r\n\r\nexport default Upload;\r\n","import { subHours, subDays } from 'date-fns';\r\n\r\nconst now = new Date();\r\n\r\nclass InvoiceApi {\r\n  getInvoices() {\r\n    const invoices = [\r\n      {\r\n        id: '5ecb868d0f437390ef3ac62c',\r\n        currency: '$',\r\n        customer: {\r\n          email: 'matheus@teste.com.br',\r\n          name: 'Matheus Bavaresco'\r\n        },\r\n        issueDate: subHours(now, 1).getTime(),\r\n        status: 'paid',\r\n        totalAmount: 55.50\r\n      },\r\n      {\r\n        id: '5ecb868ada8deedee0638502',\r\n        currency: '$',\r\n        customer: {\r\n          email: 'teste@teste.com.br',\r\n          name: 'Teste 1'\r\n        },\r\n        issueDate: subDays(subHours(now, 5), 2).getTime(),\r\n        status: 'pending',\r\n        totalAmount: 253.76\r\n      },\r\n      {\r\n        id: '5ecb868700aba84d0f1c0e48',\r\n        currency: '$',\r\n        customer: {\r\n          email: 'teste@teste.com.br',\r\n          name: 'Teste 1'\r\n        },\r\n        issueDate: subDays(subHours(now, 4), 6).getTime(),\r\n        status: 'canceled',\r\n        totalAmount: 781.50\r\n      },\r\n    ];\r\n\r\n    return Promise.resolve(invoices);\r\n  }\r\n\r\n  getInvoice() {\r\n    const invoice = {\r\n      id: '5ecb86785312dcc69b5799ad',\r\n      currency: '$',\r\n      customer: {\r\n        address: '271 Richmond Rd, Grey Lynn, Auckland 1022, New Zealand',\r\n        company: 'Countdown Grey Lynn',\r\n        email: 'contact@anahenisky.io',\r\n        name: 'Ana Henisky',\r\n        taxId: '6934656584231'\r\n      },\r\n      dueDate: now.getTime(),\r\n      issueDate: subHours(now, 1).getTime(),\r\n      items: [\r\n        {\r\n          id: '5ecb8694db1760a701dfbf74',\r\n          currency: '$',\r\n          description: 'Freelancer Subscription (12/05/2019 - 11/06/2019)',\r\n          unitAmount: 55.50\r\n        }\r\n      ],\r\n      number: 'DEV-9483',\r\n      status: 'paid',\r\n      subtotalAmount: 50.00,\r\n      taxAmount: 5.50,\r\n      totalAmount: 55.50\r\n    };\r\n\r\n    return Promise.resolve(invoice);\r\n  }\r\n}\r\n\r\nexport const invoiceApi = new InvoiceApi();\r\n","import { useState } from 'react';\r\nimport { Link as RouterLink } from 'react-router-dom';\r\nimport { format } from 'date-fns';\r\nimport numeral from 'numeral';\r\nimport PropTypes from 'prop-types';\r\nimport {\r\n  Box,\r\n  Button,\r\n  Card,\r\n  Checkbox,\r\n  IconButton,\r\n  InputAdornment,\r\n  Link,\r\n  Table,\r\n  TableBody,\r\n  TableCell,\r\n  TableHead,\r\n  TablePagination,\r\n  TableRow,\r\n  TextField,\r\n  Typography\r\n} from '@material-ui/core';\r\nimport ArrowRightIcon from '../../../icons/ArrowRight';\r\nimport PencilAltIcon from '../../../icons/PencilAlt';\r\nimport SearchIcon from '../../../icons/Search';\r\nimport Label from '../../Label';\r\nimport Scrollbar from '../../Scrollbar';\r\n\r\nconst statusOptions = [\r\n  {\r\n    label: 'Todos',\r\n    value: 'all'\r\n  },\r\n  {\r\n    label: 'Pago',\r\n    value: 'paid'\r\n  },\r\n  {\r\n    label: 'Pendente',\r\n    value: 'pending'\r\n  },\r\n  {\r\n    label: 'Cancelada',\r\n    value: 'canceled'\r\n  }\r\n];\r\n\r\nconst sortOptions = [\r\n  {\r\n    label: 'Newest first',\r\n    value: 'createdAt|desc'\r\n  },\r\n  {\r\n    label: 'Oldest first',\r\n    value: 'createdAt|asc'\r\n  }\r\n];\r\n\r\nconst getStatusLabel = (invoiceStatus) => {\r\n  const map = {\r\n    canceled: {\r\n      color: 'error',\r\n      text: 'Canceled'\r\n    },\r\n    paid: {\r\n      color: 'success',\r\n      text: 'Paid'\r\n    },\r\n    pending: {\r\n      color: 'warning',\r\n      text: 'Pending'\r\n    }\r\n  };\r\n\r\n  const { text, color } = map[invoiceStatus];\r\n\r\n  return (\r\n    <Label color={color}>\r\n      {text}\r\n    </Label>\r\n  );\r\n};\r\n\r\nconst applyFilters = (invoices, query, filters) => invoices\r\n  .filter((invoice) => {\r\n    let matches = true;\r\n\r\n    if (query) {\r\n      const properties = ['name', 'email'];\r\n      let containsQuery = false;\r\n\r\n      properties.forEach((property) => {\r\n        if (invoice.customer[property].toLowerCase().includes(query.toLowerCase())) {\r\n          containsQuery = true;\r\n        }\r\n      });\r\n\r\n      if (!containsQuery) {\r\n        matches = false;\r\n      }\r\n    }\r\n\r\n    if (filters.status && invoice.status !== filters.status) {\r\n      matches = false;\r\n    }\r\n\r\n    return matches;\r\n  });\r\n\r\nconst applyPagination = (invoices, page, limit) => invoices\r\n  .slice(page * limit, page * limit + limit);\r\n\r\nconst InvoiceListTable = (props) => {\r\n  const { invoices, ...other } = props;\r\n  const [selectedInvoices, setSelectedInvoices] = useState([]);\r\n  const [page, setPage] = useState(0);\r\n  const [limit, setLimit] = useState(10);\r\n  const [query, setQuery] = useState('');\r\n  const [sort, setSort] = useState(sortOptions[0].value);\r\n  const [filters, setFilters] = useState({\r\n    status: null\r\n  });\r\n\r\n  const handleQueryChange = (event) => {\r\n    setQuery(event.target.value);\r\n  };\r\n\r\n  const handleStatusChange = (event) => {\r\n    let value = null;\r\n\r\n    if (event.target.value !== 'all') {\r\n      value = event.target.value;\r\n    }\r\n\r\n    setFilters((prevFilters) => ({\r\n      ...prevFilters,\r\n      status: value\r\n    }));\r\n  };\r\n\r\n  const handleSortChange = (event) => {\r\n    setSort(event.target.value);\r\n  };\r\n\r\n  const handleSelectAllInvoices = (event) => {\r\n    setSelectedInvoices(event.target.checked\r\n      ? invoices.map((invoice) => invoice.id)\r\n      : []);\r\n  };\r\n\r\n  const handleSelectOneInvoice = (event, invoiceId) => {\r\n    if (!selectedInvoices.includes(invoiceId)) {\r\n      setSelectedInvoices((prevSelected) => [...prevSelected, invoiceId]);\r\n    } else {\r\n      setSelectedInvoices((prevSelected) => prevSelected.filter((id) => id !== invoiceId));\r\n    }\r\n  };\r\n\r\n  const handlePageChange = (event, newPage) => {\r\n    setPage(newPage);\r\n  };\r\n\r\n  const handleLimitChange = (event) => {\r\n    setLimit(parseInt(event.target.value, 10));\r\n  };\r\n\r\n  // Usually query is done on backend with indexing solutions\r\n  const filteredInvoices = applyFilters(invoices, query, filters);\r\n  const paginatedInvoices = applyPagination(filteredInvoices, page, limit);\r\n  const enableBulkActions = selectedInvoices.length > 0;\r\n  const selectedSomeInvoices = selectedInvoices.length > 0\r\n    && selectedInvoices.length < invoices.length;\r\n  const selectedAllInvoices = selectedInvoices.length === invoices.length;\r\n\r\n  return (\r\n    <Card {...other}>\r\n      <Box\r\n        sx={{\r\n          alignItems: 'center',\r\n          display: 'flex',\r\n          flexWrap: 'wrap',\r\n          m: -1,\r\n          p: 2\r\n        }}\r\n      >\r\n        <Box\r\n          sx={{\r\n            m: 1,\r\n            maxWidth: '100%',\r\n            width: 500\r\n          }}\r\n        >\r\n          <TextField\r\n            fullWidth\r\n            InputProps={{\r\n              startAdornment: (\r\n                <InputAdornment position=\"start\">\r\n                  <SearchIcon fontSize=\"small\" />\r\n                </InputAdornment>\r\n              )\r\n            }}\r\n            onChange={handleQueryChange}\r\n            placeholder=\"Procurar Pedidos\"\r\n            value={query}\r\n            variant=\"outlined\"\r\n          />\r\n        </Box>\r\n        <Box\r\n          sx={{\r\n            m: 1,\r\n            maxWidth: '100%',\r\n            width: 240\r\n          }}\r\n        >\r\n          <TextField\r\n            fullWidth\r\n            label=\"Ordenar por\"\r\n            name=\"sort\"\r\n            onChange={handleSortChange}\r\n            select\r\n            SelectProps={{ native: true }}\r\n            value={sort}\r\n            variant=\"outlined\"\r\n          >\r\n            {sortOptions.map((option) => (\r\n              <option\r\n                key={option.value}\r\n                value={option.value}\r\n              >\r\n                {option.label}\r\n              </option>\r\n            ))}\r\n          </TextField>\r\n        </Box>\r\n        <Box\r\n          sx={{\r\n            m: 1,\r\n            maxWidth: '100%',\r\n            width: 240\r\n          }}\r\n        >\r\n          <TextField\r\n            fullWidth\r\n            label=\"Status\"\r\n            name=\"status\"\r\n            onChange={handleStatusChange}\r\n            select\r\n            SelectProps={{ native: true }}\r\n            value={filters.status || 'all'}\r\n            variant=\"outlined\"\r\n          >\r\n            {statusOptions.map((statusOption) => (\r\n              <option\r\n                key={statusOption.value}\r\n                value={statusOption.value}\r\n              >\r\n                {statusOption.label}\r\n              </option>\r\n            ))}\r\n          </TextField>\r\n        </Box>\r\n      </Box>\r\n      {enableBulkActions && (\r\n        <Box sx={{ position: 'relative' }}>\r\n          <Box\r\n            sx={{\r\n              backgroundColor: 'background.paper',\r\n              mt: '6px',\r\n              position: 'absolute',\r\n              px: '4px',\r\n              width: '100%',\r\n              zIndex: 2\r\n            }}\r\n          >\r\n            <Checkbox\r\n              checked={selectedAllInvoices}\r\n              color=\"primary\"\r\n              indeterminate={selectedSomeInvoices}\r\n              onChange={handleSelectAllInvoices}\r\n            />\r\n            <Button\r\n              color=\"primary\"\r\n              sx={{ ml: 2 }}\r\n              variant=\"outlined\"\r\n            >\r\n              Delete\r\n            </Button>\r\n            <Button\r\n              color=\"primary\"\r\n              sx={{ ml: 2 }}\r\n              variant=\"outlined\"\r\n            >\r\n              Edit\r\n            </Button>\r\n          </Box>\r\n        </Box>\r\n      )}\r\n      <Scrollbar>\r\n        <Box sx={{ minWidth: 1200 }}>\r\n          <Table>\r\n            <TableHead>\r\n              <TableRow>\r\n                <TableCell padding=\"checkbox\">\r\n                  <Checkbox\r\n                    checked={selectedAllInvoices}\r\n                    color=\"primary\"\r\n                    indeterminate={selectedSomeInvoices}\r\n                    onChange={handleSelectAllInvoices}\r\n                  />\r\n                </TableCell>\r\n                <TableCell>\r\n                  Cliente\r\n                </TableCell>\r\n                <TableCell>\r\n                  Status\r\n                </TableCell>\r\n                <TableCell>\r\n                  Valor\r\n                </TableCell>\r\n                <TableCell>\r\n                  ID\r\n                </TableCell>\r\n                <TableCell>\r\n                  Data\r\n                </TableCell>\r\n                <TableCell align=\"right\">\r\n                  Mais Informações\r\n                </TableCell>\r\n              </TableRow>\r\n            </TableHead>\r\n            <TableBody>\r\n              {paginatedInvoices.map((invoice) => {\r\n                const isInvoiceSelected = selectedInvoices.includes(invoice.id);\r\n\r\n                return (\r\n                  <TableRow\r\n                    hover\r\n                    key={invoice.id}\r\n                    selected={isInvoiceSelected}\r\n                  >\r\n                    <TableCell padding=\"checkbox\">\r\n                      <Checkbox\r\n                        checked={isInvoiceSelected}\r\n                        color=\"primary\"\r\n                        onChange={(event) => handleSelectOneInvoice(event, invoice.id)}\r\n                        value={isInvoiceSelected}\r\n                      />\r\n                    </TableCell>\r\n                    <TableCell>\r\n                      <Link\r\n                        color=\"textPrimary\"\r\n                        component={RouterLink}\r\n                        to=\"#\"\r\n                        underline=\"none\"\r\n                        variant=\"subtitle2\"\r\n                      >\r\n                        {invoice.customer.name}\r\n                      </Link>\r\n                      <Typography\r\n                        color=\"textSecondary\"\r\n                        variant=\"body2\"\r\n                      >\r\n                        {invoice.customer.email}\r\n                      </Typography>\r\n                    </TableCell>\r\n                    <TableCell>\r\n                      {getStatusLabel(invoice.status)}\r\n                    </TableCell>\r\n                    <TableCell>\r\n                      {numeral(invoice.totalAmount)\r\n                        .format(`${invoice.currency}0,0.00`)}\r\n                    </TableCell>\r\n                    <TableCell>\r\n                      {invoice.id}\r\n                    </TableCell>\r\n                    <TableCell>\r\n                      {format(invoice.issueDate, 'dd/MM/yyyy')}\r\n                    </TableCell>\r\n                    <TableCell align=\"right\">\r\n                      <IconButton\r\n                        component={RouterLink}\r\n                        to=\"#\"\r\n                      >\r\n                        <PencilAltIcon fontSize=\"small\" />\r\n                      </IconButton>\r\n                      <IconButton\r\n                        component={RouterLink}\r\n                        to=\"/dashboard/invoices/1\"\r\n                      >\r\n                        <ArrowRightIcon fontSize=\"small\" />\r\n                      </IconButton>\r\n                    </TableCell>\r\n                  </TableRow>\r\n                );\r\n              })}\r\n            </TableBody>\r\n          </Table>\r\n        </Box>\r\n      </Scrollbar>\r\n      <TablePagination\r\n        component=\"div\"\r\n        count={filteredInvoices.length}\r\n        onPageChange={handlePageChange}\r\n        onRowsPerPageChange={handleLimitChange}\r\n        page={page}\r\n        rowsPerPage={limit}\r\n        rowsPerPageOptions={[5, 10, 25]}\r\n      />\r\n    </Card>\r\n  );\r\n};\r\n\r\nInvoiceListTable.propTypes = {\r\n  invoices: PropTypes.array.isRequired\r\n};\r\n\r\nexport default InvoiceListTable;\r\n","import PropTypes from 'prop-types';\r\nimport { format } from 'date-fns';\r\nimport numeral from 'numeral';\r\nimport { Document, Page, View, Text, Image, StyleSheet } from '@react-pdf/renderer';\r\n\r\nconst COL1_WIDTH = 60;\r\nconst COLN_WIDTH = (100 - COL1_WIDTH) / 2;\r\n\r\nconst styles = StyleSheet.create({\r\n  page: {\r\n    backgroundColor: '#ffffff',\r\n    padding: 24\r\n  },\r\n  h4: {\r\n    fontSize: 14,\r\n    fontWeight: 600,\r\n    lineHeight: 1.235\r\n  },\r\n  h6: {\r\n    fontSize: 12,\r\n    fontWeight: 600,\r\n    lineHeight: 1.6\r\n  },\r\n  subtitle2: {\r\n    fontSize: 10,\r\n    fontWeight: 500,\r\n    lineHeight: 1.57\r\n  },\r\n  body2: {\r\n    fontSize: 10,\r\n    lineHeight: 1.43\r\n  },\r\n  gutterBottom: {\r\n    marginBottom: 4\r\n  },\r\n  header: {\r\n    flexDirection: 'row',\r\n    justifyContent: 'space-between'\r\n  },\r\n  brand: {\r\n    height: 32,\r\n    width: 32\r\n  },\r\n  company: {\r\n    flexDirection: 'row',\r\n    justifyContent: 'space-between',\r\n    marginTop: 32\r\n  },\r\n  references: {\r\n    flexDirection: 'row',\r\n    justifyContent: 'space-between',\r\n    marginTop: 32\r\n  },\r\n  billing: {\r\n    marginTop: 32\r\n  },\r\n  items: {\r\n    marginTop: 32\r\n  },\r\n  notes: {\r\n    marginTop: 32\r\n  },\r\n  table: {\r\n    display: 'flex',\r\n    width: 'auto'\r\n  },\r\n  tableHeader: {},\r\n  tableBody: {},\r\n  tableRow: {\r\n    borderBottomWidth: 1,\r\n    borderColor: '#EEEEEE',\r\n    borderStyle: 'solid',\r\n    flexDirection: 'row'\r\n  },\r\n  tableCell1: {\r\n    padding: 6,\r\n    width: `${COL1_WIDTH}%`\r\n  },\r\n  tableCellN: {\r\n    padding: 6,\r\n    width: `${COLN_WIDTH}%`\r\n  },\r\n  alignRight: {\r\n    textAlign: 'right'\r\n  }\r\n});\r\n\r\nconst InvoicePDF = (props) => {\r\n  const { invoice } = props;\r\n\r\n  return (\r\n    <Document>\r\n      <Page\r\n        size=\"A4\"\r\n        style={styles.page}\r\n      >\r\n        <View style={styles.header}>\r\n          <View>\r\n            <Image\r\n              source=\"/static/favicon (1).png\"\r\n              style={styles.brand}\r\n            />\r\n            <Text style={styles.h6}>\r\n              www.admincert.com.br\r\n            </Text>\r\n          </View>\r\n          <View>\r\n            <Text style={styles.h4}>\r\n              {invoice.status}\r\n            </Text>\r\n            <Text style={styles.subtitle2}>\r\n              IPedido Teste #000001\r\n            </Text>\r\n          </View>\r\n        </View>\r\n        <View style={styles.company}>\r\n          <View>\r\n            <Text style={styles.body2}>\r\n              Rua Teste\r\n            </Text>\r\n            <Text style={styles.body2}>\r\n              Number Teste\r\n            </Text>\r\n            <Text style={styles.body2}>\r\n              Brasil\r\n            </Text>\r\n          </View>\r\n          <View>\r\n            <Text style={styles.body2}>\r\n              BRWORKS\r\n            </Text>\r\n            <Text style={styles.body2}>\r\n              cnpj teste\r\n            </Text>\r\n          </View>\r\n          <View>\r\n            <Text style={styles.body2}>\r\n              teste@teste.com.br\r\n            </Text>\r\n            <Text style={styles.body2}>\r\n              11 1111-1111\r\n            </Text>\r\n          </View>\r\n        </View>\r\n        <View style={styles.references}>\r\n          <View>\r\n            <Text style={[styles.subtitle2, styles.gutterBottom]}>\r\n              Data do Pedido\r\n            </Text>\r\n            <Text style={styles.body2}>\r\n              {format(invoice.dueDate, 'dd MMM yyyy')}\r\n            </Text>\r\n          </View>\r\n          <View>\r\n            <Text style={[styles.subtitle2, styles.gutterBottom]}>\r\n              Data de saída\r\n            </Text>\r\n            <Text style={styles.body2}>\r\n              {format(invoice.issueDate, 'dd MMM yyyy')}\r\n            </Text>\r\n          </View>\r\n          <View>\r\n            <Text style={[styles.subtitle2, styles.gutterBottom]}>\r\n              Id do Pedido\r\n            </Text>\r\n            <Text style={styles.body2}>\r\n              #00001\r\n            </Text>\r\n          </View>\r\n        </View>\r\n        <View style={styles.billing}>\r\n          <Text style={[styles.subtitle2, styles.gutterBottom]}>\r\n            Cobrança em nome de\r\n          </Text>\r\n          <Text style={styles.body2}>\r\n            Matheus Bavaresco\r\n          </Text>\r\n          <Text style={styles.body2}>\r\n            Teste\r\n          </Text>\r\n          <Text style={styles.body2}>\r\n            Teste\r\n          </Text>\r\n          <Text style={styles.body2}>\r\n            Teste\r\n          </Text>\r\n        </View>\r\n        <View style={styles.items}>\r\n          <View style={styles.table}>\r\n            <View style={styles.tableHeader}>\r\n              <View style={styles.tableRow}>\r\n                <View style={styles.tableCell1}>\r\n                  <Text style={styles.h6}>\r\n                    Descrição\r\n                  </Text>\r\n                </View>\r\n                <View style={styles.tableCellN} />\r\n                <View style={styles.tableCellN}>\r\n                  <Text style={[styles.h6, styles.alignRight]}>\r\n                    Valor unitário\r\n                  </Text>\r\n                </View>\r\n              </View>\r\n            </View>\r\n            <View style={styles.tableBody}>\r\n              {invoice.items.map((item) => (\r\n                <View\r\n                  style={styles.tableRow}\r\n                  key={item.id}\r\n                >\r\n                  <View style={styles.tableCell1}>\r\n                    <Text style={styles.body2}>\r\n                      Certidão de Teste\r\n                    </Text>\r\n                  </View>\r\n                  <View style={styles.tableCellN} />\r\n                  <View style={styles.tableCellN}>\r\n                    <Text style={[styles.body2, styles.alignRight]}>\r\n                      {numeral(item.unitAmount)\r\n                        .format(`${item.currency}0,0.00`)}\r\n                    </Text>\r\n                  </View>\r\n                </View>\r\n              ))}\r\n              <View style={styles.tableRow}>\r\n                <View style={styles.tableCell1} />\r\n                <View style={styles.tableCellN}>\r\n                  <Text style={styles.body2}>\r\n                    Subtotal\r\n                  </Text>\r\n                </View>\r\n                <View style={styles.tableCellN}>\r\n                  <Text style={[styles.body2, styles.alignRight]}>\r\n                    {numeral(invoice.subtotalAmount)\r\n                      .format(`${invoice.currency}0,0.00`)}\r\n                  </Text>\r\n                </View>\r\n              </View>\r\n              <View style={styles.tableRow}>\r\n                <View style={styles.tableCell1} />\r\n                <View style={styles.tableCellN}>\r\n                  <Text style={styles.body2}>\r\n                    Taxas\r\n                  </Text>\r\n                </View>\r\n                <View style={styles.tableCellN}>\r\n                  <Text style={[styles.body2, styles.alignRight]}>\r\n                    {numeral(invoice.taxAmount)\r\n                      .format(`${invoice.currency}0,0.00`)}\r\n                  </Text>\r\n                </View>\r\n              </View>\r\n              <View style={styles.tableRow}>\r\n                <View style={styles.tableCell1} />\r\n                <View style={styles.tableCellN}>\r\n                  <Text style={styles.body2}>\r\n                    Total\r\n                  </Text>\r\n                </View>\r\n                <View style={styles.tableCellN}>\r\n                  <Text style={[styles.body2, styles.alignRight]}>\r\n                    {numeral(invoice.totalAmount)\r\n                      .format(`${invoice.currency}0,0.00`)}\r\n                  </Text>\r\n                </View>\r\n              </View>\r\n            </View>\r\n          </View>\r\n        </View>\r\n        <View style={styles.notes}>\r\n          <Text style={[styles.h6, styles.gutterBottom]}>\r\n            Notas\r\n          </Text>\r\n          <Text style={styles.body2}>\r\n            Ao receber seu pedido apresentar esse documento para validação\r\n          </Text>\r\n        </View>\r\n      </Page>\r\n    </Document>\r\n  );\r\n};\r\n\r\nInvoicePDF.propTypes = {\r\n  invoice: PropTypes.object.isRequired\r\n};\r\n\r\nexport default InvoicePDF;\r\n","import PropTypes from 'prop-types';\r\nimport { format } from 'date-fns';\r\nimport numeral from 'numeral';\r\nimport {\r\n  Box,\r\n  Grid,\r\n  Paper,\r\n  Table,\r\n  TableBody,\r\n  TableCell,\r\n  TableHead,\r\n  TableRow,\r\n  Typography\r\n} from '@material-ui/core';\r\nimport Logo from '../../Logo';\r\nimport Scrollbar from '../../Scrollbar';\r\n\r\nconst InvoicePreview = (props) => {\r\n  const { invoice, ...other } = props;\r\n\r\n  return (\r\n    <Paper {...other}>\r\n      <Scrollbar>\r\n        <Box\r\n          sx={{\r\n            minWidth: 800,\r\n            p: 6\r\n          }}\r\n        >\r\n          <Grid\r\n            container\r\n            justifyContent=\"space-between\"\r\n          >\r\n            <Grid item>\r\n              <Logo />\r\n              <Typography\r\n                color=\"textPrimary\"\r\n                variant=\"h6\"\r\n              >\r\n                www.admincert.com.br\r\n              </Typography>\r\n            </Grid>\r\n            <Grid item>\r\n              <Typography\r\n                align=\"right\"\r\n                color=\"textPrimary\"\r\n                variant=\"h4\"\r\n              >\r\n                AdminCerti\r\n              </Typography>\r\n              <Typography\r\n                align=\"right\"\r\n                color=\"textPrimary\"\r\n                variant=\"subtitle2\"\r\n              >\r\n                Pedido Teste #000001\r\n              </Typography>\r\n            </Grid>\r\n          </Grid>\r\n          <Box sx={{ my: 4 }}>\r\n            <Grid\r\n              container\r\n              justifyContent=\"space-between\"\r\n            >\r\n              <Grid item>\r\n                <Typography\r\n                  color=\"textPrimary\"\r\n                  variant=\"body2\"\r\n                >\r\n                  Rua Teste\r\n                  <br />\r\n                  Number Teste\r\n                  <br />\r\n                  Brasil\r\n                </Typography>\r\n              </Grid>\r\n              <Grid item>\r\n                <Typography\r\n                  color=\"textPrimary\"\r\n                  variant=\"body2\"\r\n                >\r\n                  BRWORKS\r\n                  <br />\r\n                  CNPJ TESTE\r\n                  <br />\r\n                </Typography>\r\n              </Grid>\r\n              <Grid item>\r\n                <Typography\r\n                  align=\"right\"\r\n                  color=\"textPrimary\"\r\n                  variant=\"body2\"\r\n                >\r\n                  teste@teste.com.br\r\n                  <br />\r\n                  11 1111-1111\r\n                </Typography>\r\n              </Grid>\r\n            </Grid>\r\n          </Box>\r\n          <Box sx={{ my: 4 }}>\r\n            <Grid\r\n              container\r\n              justifyContent=\"space-between\"\r\n            >\r\n              <Grid item>\r\n                <Typography\r\n                  color=\"textPrimary\"\r\n                  gutterBottom\r\n                  variant=\"subtitle2\"\r\n                >\r\n                  Data do Pedido\r\n                </Typography>\r\n                <Typography\r\n                  color=\"textPrimary\"\r\n                  variant=\"body2\"\r\n                >\r\n                  {format(invoice.dueDate, 'dd MMM yyyy')}\r\n                </Typography>\r\n              </Grid>\r\n              <Grid item>\r\n                <Typography\r\n                  color=\"textPrimary\"\r\n                  gutterBottom\r\n                  variant=\"subtitle2\"\r\n                >\r\n                  Data de Saída\r\n                </Typography>\r\n                <Typography\r\n                  color=\"textPrimary\"\r\n                  variant=\"body2\"\r\n                >\r\n                  {format(invoice.issueDate, 'dd MMM yyyy')}\r\n                </Typography>\r\n              </Grid>\r\n              <Grid item>\r\n                <Typography\r\n                  color=\"textPrimary\"\r\n                  gutterBottom\r\n                  variant=\"subtitle2\"\r\n                >\r\n                  Id do Pedido\r\n                </Typography>\r\n                <Typography\r\n                  color=\"textPrimary\"\r\n                  variant=\"body2\"\r\n                >\r\n                  #000001\r\n                </Typography>\r\n              </Grid>\r\n            </Grid>\r\n          </Box>\r\n          <Box sx={{ my: 4 }}>\r\n            <Typography\r\n              color=\"textPrimary\"\r\n              gutterBottom\r\n              variant=\"subtitle2\"\r\n            >\r\n              Cobrança em nome de\r\n            </Typography>\r\n            <Typography\r\n              color=\"textPrimary\"\r\n              variant=\"body2\"\r\n            >\r\n              Matheus Bavaresco\r\n              <br />\r\n              Teste\r\n              <br />\r\n              Teste\r\n              <br />\r\n              Teste\r\n            </Typography>\r\n          </Box>\r\n          <Table>\r\n            <TableHead>\r\n              <TableRow>\r\n                <TableCell>\r\n                  Produtos do Pedido\r\n                </TableCell>\r\n                <TableCell />\r\n                <TableCell align=\"right\">\r\n                  Valor Unitário\r\n                </TableCell>\r\n              </TableRow>\r\n            </TableHead>\r\n            <TableBody>\r\n              {invoice.items.map((items) => (\r\n                <TableRow key={items.id}>\r\n                  <TableCell>\r\n                    Certidão de Teste\r\n                  </TableCell>\r\n                  <TableCell />\r\n                  <TableCell align=\"right\">\r\n                    {numeral(items.unitAmount)\r\n                      .format(`${items.currency}0,0.00`)}\r\n                  </TableCell>\r\n                </TableRow>\r\n              ))}\r\n              <TableRow>\r\n                <TableCell />\r\n                <TableCell>\r\n                  <Typography\r\n                    color=\"textPrimary\"\r\n                    gutterBottom\r\n                    variant=\"subtitle2\"\r\n                  >\r\n                    Subtotal\r\n                  </Typography>\r\n                </TableCell>\r\n                <TableCell align=\"right\">\r\n                  {numeral(invoice.subtotalAmount)\r\n                    .format(`${invoice.currency}0,0.00`)}\r\n                </TableCell>\r\n              </TableRow>\r\n              <TableRow>\r\n                <TableCell />\r\n                <TableCell>\r\n                  <Typography\r\n                    color=\"textPrimary\"\r\n                    gutterBottom\r\n                    variant=\"subtitle2\"\r\n                  >\r\n                    Taxas\r\n                  </Typography>\r\n                </TableCell>\r\n                <TableCell align=\"right\">\r\n                  {numeral(invoice.taxAmount)\r\n                    .format(`${invoice.currency}0,0.00`)}\r\n                </TableCell>\r\n              </TableRow>\r\n              <TableRow>\r\n                <TableCell />\r\n                <TableCell>\r\n                  <Typography\r\n                    color=\"textPrimary\"\r\n                    gutterBottom\r\n                    variant=\"subtitle2\"\r\n                  >\r\n                    Total\r\n                  </Typography>\r\n                </TableCell>\r\n                <TableCell align=\"right\">\r\n                  {numeral(invoice.totalAmount)\r\n                    .format(`${invoice.currency}0,0.00`)}\r\n                </TableCell>\r\n              </TableRow>\r\n            </TableBody>\r\n          </Table>\r\n          <Box sx={{ mt: 2 }}>\r\n            <Typography\r\n              color=\"textPrimary\"\r\n              gutterBottom\r\n              variant=\"h6\"\r\n            >\r\n              Notas\r\n            </Typography>\r\n            <Typography\r\n              color=\"textSecondary\"\r\n              variant=\"body2\"\r\n            >\r\n              Ao receber seu pedido apresentar esse documento para validação\r\n            </Typography>\r\n          </Box>\r\n        </Box>\r\n      </Scrollbar>\r\n    </Paper>\r\n  );\r\n};\r\n\r\nInvoicePreview.propTypes = {\r\n  invoice: PropTypes.object.isRequired\r\n};\r\n\r\nexport default InvoicePreview;\r\n"],"sourceRoot":""}