{"version":3,"sources":["components/widgets/grid-lists/GridList1.js","components/widgets/grid-lists/GridList2.js","components/widgets/grid-lists/GridList3.js","components/widgets/grid-lists/GridList4.js","components/widgets/grid-lists/GridList5.js","components/widgets/grid-lists/GridList6.js","pages/browse/BrowseGridLists.js","icons/DotsHorizontal.js","icons/PencilAlt.js","icons/Download.js","icons/Moon.js","icons/Sun.js","components/WidgetPreviewer.js","icons/Trash.js","icons/Archive.js","icons/DocumentText.js","utils/bytesToSize.js","icons/Share.js","icons/Clock.js"],"names":["now","Date","posts","id","author","avatar","name","category","cover","publishedAt","subMinutes","subSeconds","getTime","readTime","shortDescription","title","subHours","BlogPostCardMediaWrapper","experimentalStyled","paddingTop","position","GridList1","Box","sx","backgroundColor","minHeight","p","Grid","container","spacing","map","post","item","md","xs","Card","height","CardMedia","image","top","width","mt","Chip","label","variant","display","alignItems","my","Avatar","src","ml","Typography","color","format","Link","overflow","textOverflow","WebkitBoxOrient","WebkitLineClamp","projects","budget","caption","currency","isLiked","likes","location","rating","membersCount","type","updatedAt","GridList2","project","formatDistanceToNowStrict","pb","px","py","justifyContent","numeral","Divider","pl","pr","Tooltip","IconButton","red","fontSize","Users","flexGrow","Rating","readOnly","size","value","files","mimeType","url","GridList3","moreRef","useRef","useState","openMenu","setOpenMenu","handleMenuOpen","handleMenuClose","file","includes","blueGrey","DocumentText","CardContent","bytesToSize","edge","onClick","ref","DotsHorizontal","CardActions","Button","fullWidth","startIcon","Download","Menu","anchorEl","current","anchorOrigin","horizontal","vertical","elevation","onClose","open","PaperProps","maxWidth","transformOrigin","MenuItem","divider","ListItemIcon","PencilAlt","ListItemText","primary","Trash","Archive","applicants","commonConnections","skills","GridList4","applicant","pt","mb","alt","border","align","underline","m","skill","createdAt","media","message","GridList5","CardHeader","disableTypography","subheader","Clock","CardActionArea","backgroundPosition","Share","connections","status","GridList6","connection","Paper","mx","gutterBottom","BrowseGridLists","useEffect","gtm","push","event","Container","WidgetPreviewer","element","createSvgIcon","xmlns","viewBox","fill","d","fillRule","clipRule","Moon","Sun","props","other","settings","useSettings","theme","selectedTheme","setSelectedTheme","createCustomTheme","action","prevSelectedTheme","THEMES","LIGHT","DARK","ThemeProvider","bytes","decimals","k","dm","sizes","i","Math","floor","log","parseFloat","pow","toFixed"],"mappings":"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","file":"static/js/34.ceeaee8a.chunk.js","sourcesContent":["import { format, subHours, subMinutes, subSeconds } from 'date-fns';\r\nimport { Avatar, Box, Card, CardMedia, Chip, Grid, Link, Typography } from '@material-ui/core';\r\nimport { experimentalStyled } from '@material-ui/core/styles';\r\n\r\nconst now = new Date();\r\n\r\nconst posts = [\r\n  {\r\n    id: '24b76cac9a128cd949747080',\r\n    author: {\r\n      avatar: '/static/mock-images/avatars/avatar-jie_yan_song.png',\r\n      name: 'Jie Yan Song'\r\n    },\r\n    category: 'Programming',\r\n    cover: '/static/mock-images/covers/cover_4.jpeg',\r\n    publishedAt: subMinutes(subSeconds(now, 16), 45).getTime(),\r\n    readTime: '5 min',\r\n    shortDescription: 'Aliquam dapibus elementum nulla at malesuada. Ut mi nisl, aliquet non mollis vel, feugiat non nibh. Vivamus sit amet tristique dui. Praesent in bibendum arcu, at placerat augue. Nam varius fermentum diam, at tristique libero ultrices non. Praesent scelerisque diam vitae posuere dignissim. In et purus ac sapien posuere accumsan sit amet id diam. Pellentesque sit amet nulla ante. Maecenas nec leo vitae quam volutpat pretium id vitae augue.',\r\n    title: 'Why I Still Lisp, and You Should Too'\r\n  },\r\n  {\r\n    id: 'a9c19d0caf2ca91020aacd1f',\r\n    author: {\r\n      avatar: '/static/mock-images/avatars/avatar-omar_darobe.png',\r\n      name: 'Omar Darobe'\r\n    },\r\n    category: 'Productivity',\r\n    cover: '/static/mock-images/covers/cover_5.jpeg',\r\n    publishedAt: subHours(subMinutes(subSeconds(now, 29), 51), 6).getTime(),\r\n    readTime: '6 min',\r\n    shortDescription: 'Class aptent taciti sociosqu ad litora torquent per conubia nostra, per inceptos himenaeos. Morbi in turpis ac quam luctus interdum. Nullam ac lorem ligula. Integer sed massa bibendum, blandit ipsum et, iaculis augue. Curabitur nec enim eget dolor tincidunt posuere eget nec dolor. Ut ullamcorper dignissim arcu vel laoreet. Sed ligula dolor, vulputate quis eros ac, maximus pharetra orci. Aenean lobortis volutpat vehicula. Suspendisse vel nunc enim. Cras ultrices metus libero, non aliquam diam condimentum vel. Vestibulum arcu leo, consectetur id diam a, semper elementum odio. Proin eleifend volutpat sapien tempor bibendum. Etiam sagittis nulla sit amet aliquam sollicitudin.',\r\n    title: 'Scrum Has Hit the Glass Ceiling'\r\n  },\r\n  {\r\n    id: '44df90cbf89963b8aa625c7d',\r\n    author: {\r\n      avatar: '/static/mock-images/avatars/avatar-siegbert_gottfried.png',\r\n      name: 'Siegbert Gottfried'\r\n    },\r\n    category: 'Entrepreneurs',\r\n    cover: '/static/mock-images/covers/cover_6.jpeg',\r\n    publishedAt: subHours(subMinutes(subSeconds(now, 6), 46), 16).getTime(),\r\n    readTime: '3 min',\r\n    shortDescription: 'Praesent eget leo mauris. Morbi ac vulputate nibh. In hac habitasse platea dictumst. Praesent fermentum lacus eleifend erat cursus, congue rhoncus mi porta. Mauris rhoncus mollis nisl, vitae tempus tortor. Proin sit amet feugiat felis. Donec nunc urna, pretium sed viverra vel, blandit at urna. Integer pharetra placerat mauris, at fringilla arcu dignissim a. Morbi nec fermentum purus. Integer vel justo interdum lectus euismod bibendum.',\r\n    title: 'How Model View Controller (MVC) Architectures Work'\r\n  }\r\n];\r\n\r\nconst BlogPostCardMediaWrapper = experimentalStyled('div')({\r\n  paddingTop: 'calc(100% * 4 / 4)',\r\n  position: 'relative'\r\n});\r\n\r\nconst GridList1 = () => (\r\n  <Box\r\n    sx={{\r\n      backgroundColor: 'background.default',\r\n      minHeight: '100%',\r\n      p: 3\r\n    }}\r\n  >\r\n    <Grid\r\n      container\r\n      spacing={3}\r\n    >\r\n      {posts.map((post) => (\r\n        <Grid\r\n          item\r\n          key={post.id}\r\n          md={4}\r\n          xs={12}\r\n        >\r\n          <Card\r\n            sx={{\r\n              height: '100%',\r\n              p: 2\r\n            }}\r\n          >\r\n            <BlogPostCardMediaWrapper>\r\n              <CardMedia\r\n                image={post.cover}\r\n                sx={{\r\n                  height: '100%',\r\n                  position: 'absolute',\r\n                  top: 0,\r\n                  width: '100%'\r\n                }}\r\n              />\r\n            </BlogPostCardMediaWrapper>\r\n            <Box sx={{ mt: 2 }}>\r\n              <div>\r\n                <Chip\r\n                  label={post.category}\r\n                  variant=\"outlined\"\r\n                />\r\n              </div>\r\n              <Box\r\n                sx={{\r\n                  display: 'flex',\r\n                  alignItems: 'center',\r\n                  my: 2\r\n                }}\r\n              >\r\n                <Avatar src={post.author.avatar} />\r\n                <Box sx={{ ml: 2 }}>\r\n                  <Typography\r\n                    color=\"textPrimary\"\r\n                    variant=\"subtitle2\"\r\n                  >\r\n                    {post.author.name}\r\n                  </Typography>\r\n                  <Typography\r\n                    color=\"textSecondary\"\r\n                    variant=\"caption\"\r\n                  >\r\n                    {`${format(post.publishedAt, 'dd MMM')} · ${post.readTime} read`}\r\n                  </Typography>\r\n                </Box>\r\n              </Box>\r\n              <Link\r\n                color=\"textPrimary\"\r\n                variant=\"h5\"\r\n              >\r\n                {post.title}\r\n              </Link>\r\n              <Typography\r\n                color=\"textSecondary\"\r\n                sx={{\r\n                  height: 72,\r\n                  mt: 1,\r\n                  overflow: 'hidden',\r\n                  textOverflow: 'ellipsis',\r\n                  WebkitBoxOrient: 'vertical',\r\n                  WebkitLineClamp: 2\r\n                }}\r\n                variant=\"body1\"\r\n              >\r\n                {post.shortDescription}\r\n              </Typography>\r\n            </Box>\r\n          </Card>\r\n        </Grid>\r\n      ))}\r\n    </Grid>\r\n  </Box>\r\n);\r\n\r\nexport default GridList1;\r\n","import { formatDistanceToNowStrict, subHours, subMinutes } from 'date-fns';\r\nimport numeral from 'numeral';\r\nimport {\r\n  Avatar,\r\n  Box,\r\n  Card,\r\n  CardMedia,\r\n  Divider,\r\n  Grid,\r\n  IconButton,\r\n  Link,\r\n  Rating,\r\n  Tooltip,\r\n  Typography\r\n} from '@material-ui/core';\r\nimport red from '@material-ui/core/colors/red';\r\nimport FavoriteIcon from '@material-ui/icons/Favorite';\r\nimport UsersIcon from '../../../icons/Users';\r\n\r\nconst now = new Date();\r\n\r\nconst projects = [\r\n  {\r\n    id: '5e8dcef8f95685ce21f16f3d',\r\n    author: {\r\n      id: '5e887b7602bdbc4dbb234b27',\r\n      avatar: '/static/mock-images/avatars/avatar-jie_yan_song.png',\r\n      name: 'Jie Yan Song'\r\n    },\r\n    budget: 6125.00,\r\n    caption: 'We\\'re looking for experienced Developers and Product Designers to come aboard and help us build succesful businesses through software.',\r\n    currency: '$',\r\n    isLiked: true,\r\n    likes: 7,\r\n    location: 'Europe',\r\n    image: '/static/mock-images/projects/project_1.png',\r\n    rating: 5,\r\n    membersCount: 2,\r\n    title: 'Mella Full Screen Slider',\r\n    type: 'Full-Time',\r\n    updatedAt: subMinutes(now, 24).getTime()\r\n  },\r\n  {\r\n    id: '5e8dcf076c50b9d8e756a5a2',\r\n    author: {\r\n      id: '5e887d0b3d090c1b8f162003',\r\n      avatar: '/static/mock-images/avatars/avatar-omar_darobe.png',\r\n      name: 'Omar Darobe'\r\n    },\r\n    budget: 4205.00,\r\n    caption: 'We\\'re looking for experienced Developers and Product Designers to come aboard and help us build succesful businesses through software.',\r\n    currency: '$',\r\n    isLiked: true,\r\n    likes: 12,\r\n    location: 'Europe',\r\n    image: '/static/mock-images/projects/project_2.png',\r\n    rating: 4.5,\r\n    membersCount: 3,\r\n    title: 'Overview Design',\r\n    type: 'Full-Time',\r\n    updatedAt: subHours(now, 1).getTime()\r\n  },\r\n  {\r\n    id: '5e8dcf105a6732b3ed82cf7a',\r\n    author: {\r\n      id: '5e88792be2d4cfb4bf0971d9',\r\n      avatar: '/static/mock-images/avatars/avatar-siegbert_gottfried.png',\r\n      name: 'Siegbert Gottfried'\r\n    },\r\n    budget: 2394.00,\r\n    caption: 'We\\'re looking for experienced Developers and Product Designers to come aboard and help us build succesful businesses through software.',\r\n    currency: '$',\r\n    isLiked: true,\r\n    likes: 18,\r\n    location: 'Europe',\r\n    image: '/static/mock-images/projects/project_3.png',\r\n    rating: 4.7,\r\n    membersCount: 8,\r\n    title: 'Ten80 Web Design',\r\n    type: 'Full-Time',\r\n    updatedAt: subHours(now, 16).getTime()\r\n  }\r\n];\r\n\r\nconst GridList2 = () => (\r\n  <Box\r\n    sx={{\r\n      backgroundColor: 'background.default',\r\n      minHeight: '100%',\r\n      p: 3\r\n    }}\r\n  >\r\n    <Grid\r\n      container\r\n      spacing={3}\r\n    >\r\n      {projects.map((project) => (\r\n        <Grid\r\n          item\r\n          key={project.id}\r\n          md={4}\r\n          xs={12}\r\n        >\r\n          <Card>\r\n            <Box sx={{ p: 2 }}>\r\n              <CardMedia\r\n                image={project.image}\r\n                sx={{\r\n                  backgroundColor: 'background.default',\r\n                  height: 200\r\n                }}\r\n              />\r\n              <Box\r\n                sx={{\r\n                  alignItems: 'center',\r\n                  display: 'flex',\r\n                  mt: 2\r\n                }}\r\n              >\r\n                <Avatar src={project.author.avatar} />\r\n                <Box sx={{ ml: 2 }}>\r\n                  <Link\r\n                    color=\"textPrimary\"\r\n                    variant=\"h6\"\r\n                  >\r\n                    {project.title}\r\n                  </Link>\r\n                  <Typography\r\n                    color=\"textSecondary\"\r\n                    variant=\"body2\"\r\n                  >\r\n                    by\r\n                    {' '}\r\n                    <Link\r\n                      color=\"textPrimary\"\r\n                      variant=\"subtitle2\"\r\n                    >\r\n                      {project.author.name}\r\n                    </Link>\r\n                    {' '}\r\n                    | Updated\r\n                    {' '}\r\n                    {formatDistanceToNowStrict(project.updatedAt)}\r\n                    {' '}\r\n                    ago\r\n                  </Typography>\r\n                </Box>\r\n              </Box>\r\n            </Box>\r\n            <Box\r\n              sx={{\r\n                pb: 2,\r\n                px: 3\r\n              }}\r\n            >\r\n              <Typography\r\n                color=\"textSecondary\"\r\n                variant=\"body2\"\r\n              >\r\n                {project.caption}\r\n              </Typography>\r\n            </Box>\r\n            <Box\r\n              sx={{\r\n                px: 3,\r\n                py: 2\r\n              }}\r\n            >\r\n              <Grid\r\n                alignItems=\"center\"\r\n                container\r\n                justifyContent=\"space-between\"\r\n                spacing={3}\r\n              >\r\n                <Grid item>\r\n                  <Typography\r\n                    color=\"textPrimary\"\r\n                    variant=\"subtitle2\"\r\n                  >\r\n                    {numeral(project.budget)\r\n                      .format(`${project.currency}0,0.00`)}\r\n                  </Typography>\r\n                  <Typography\r\n                    color=\"textSecondary\"\r\n                    variant=\"body2\"\r\n                  >\r\n                    Budget\r\n                  </Typography>\r\n                </Grid>\r\n                <Grid item>\r\n                  <Typography\r\n                    color=\"textPrimary\"\r\n                    variant=\"subtitle2\"\r\n                  >\r\n                    {project.location}\r\n                  </Typography>\r\n                  <Typography\r\n                    color=\"textSecondary\"\r\n                    variant=\"body2\"\r\n                  >\r\n                    Location\r\n                  </Typography>\r\n                </Grid>\r\n                <Grid item>\r\n                  <Typography\r\n                    color=\"textPrimary\"\r\n                    variant=\"subtitle2\"\r\n                  >\r\n                    {project.type}\r\n                  </Typography>\r\n                  <Typography\r\n                    color=\"textSecondary\"\r\n                    variant=\"body2\"\r\n                  >\r\n                    Type\r\n                  </Typography>\r\n                </Grid>\r\n              </Grid>\r\n            </Box>\r\n            <Divider />\r\n            <Box\r\n              sx={{\r\n                alignItems: 'center',\r\n                display: 'flex',\r\n                pl: 2,\r\n                pr: 3,\r\n                py: 2\r\n              }}\r\n            >\r\n              <Box\r\n                sx={{\r\n                  alignItems: 'center',\r\n                  display: 'flex'\r\n                }}\r\n              >\r\n                <Tooltip title=\"Unlike\">\r\n                  <IconButton sx={{ color: red['600'] }}>\r\n                    <FavoriteIcon fontSize=\"small\" />\r\n                  </IconButton>\r\n                </Tooltip>\r\n                <Typography\r\n                  color=\"textSecondary\"\r\n                  variant=\"subtitle2\"\r\n                >\r\n                  {project.likes}\r\n                </Typography>\r\n              </Box>\r\n              <Box\r\n                sx={{\r\n                  alignItems: 'center',\r\n                  display: 'flex',\r\n                  ml: 2\r\n                }}\r\n              >\r\n                <UsersIcon fontSize=\"small\" />\r\n                <Typography\r\n                  color=\"textSecondary\"\r\n                  sx={{ ml: 1 }}\r\n                  variant=\"subtitle2\"\r\n                >\r\n                  {project.membersCount}\r\n                </Typography>\r\n              </Box>\r\n              <Box sx={{ flexGrow: 1 }} />\r\n              <Rating\r\n                readOnly\r\n                size=\"small\"\r\n                value={project.rating}\r\n              />\r\n            </Box>\r\n          </Card>\r\n        </Grid>\r\n      ))}\r\n    </Grid>\r\n  </Box>\r\n);\r\n\r\nexport default GridList2;\r\n","import { useRef, useState } from 'react';\r\nimport {\r\n  Box,\r\n  Button,\r\n  Card,\r\n  CardActions,\r\n  CardContent,\r\n  CardMedia,\r\n  Divider,\r\n  Grid,\r\n  IconButton,\r\n  ListItemIcon,\r\n  ListItemText,\r\n  Menu,\r\n  MenuItem,\r\n  Tooltip,\r\n  Typography\r\n} from '@material-ui/core';\r\nimport blueGrey from '@material-ui/core/colors/blueGrey';\r\nimport ArchiveIcon from '../../../icons/Archive';\r\nimport DocumentTextIcon from '../../../icons/DocumentText';\r\nimport DotsHorizontalIcon from '../../../icons/DotsHorizontal';\r\nimport DownloadIcon from '../../../icons/Download';\r\nimport PencilAltIcon from '../../../icons/PencilAlt';\r\nimport TrashIcon from '../../../icons/Trash';\r\nimport bytesToSize from '../../../utils/bytesToSize';\r\n\r\nconst files = [\r\n  {\r\n    id: '5e8dd0721b9e0fab56d7238b',\r\n    mimeType: 'image/png',\r\n    name: 'example-project1.jpg',\r\n    size: 1024 * 1024 * 3,\r\n    url: '/static/mock-images/projects/project_4.png'\r\n  },\r\n  {\r\n    id: '5e8dd0784431995a30eb2586',\r\n    mimeType: 'application/zip',\r\n    name: 'docs.zip',\r\n    size: 1024 * 1024 * 25,\r\n    url: '#'\r\n  },\r\n  {\r\n    id: '5e8dd07cbb62749296ecee1c',\r\n    mimeType: 'image/png',\r\n    name: 'example-project2.jpg',\r\n    size: 1024 * 1024 * 2,\r\n    url: '/static/mock-images/projects/project_1.png'\r\n  }\r\n];\r\n\r\nconst GridList3 = () => {\r\n  const moreRef = useRef(null);\r\n  const [openMenu, setOpenMenu] = useState(false);\r\n\r\n  const handleMenuOpen = () => {\r\n    setOpenMenu(true);\r\n  };\r\n\r\n  const handleMenuClose = () => {\r\n    setOpenMenu(false);\r\n  };\r\n\r\n  return (\r\n    <Box\r\n      sx={{\r\n        backgroundColor: 'background.default',\r\n        display: 'flex',\r\n        justifyContent: 'center',\r\n        minHeight: '100%',\r\n        p: 3\r\n      }}\r\n    >\r\n      <Grid\r\n        container\r\n        spacing={3}\r\n      >\r\n        {files.map((file) => (\r\n          <Grid\r\n            item\r\n            key={file.id}\r\n            md={4}\r\n            xs={12}\r\n          >\r\n            <Card>\r\n              {file.mimeType.includes('image/')\r\n                ? (\r\n                  <CardMedia\r\n                    image={file.url}\r\n                    sx={{ height: 140 }}\r\n                  />\r\n                )\r\n                : (\r\n                  <Box\r\n                    sx={{\r\n                      alignItems: 'center',\r\n                      backgroundColor: blueGrey['50'],\r\n                      color: '#000000',\r\n                      display: 'flex',\r\n                      height: 140,\r\n                      justifyContent: 'center'\r\n                    }}\r\n                  >\r\n                    <DocumentTextIcon fontSize=\"large\" />\r\n                  </Box>\r\n                )}\r\n              <CardContent\r\n                sx={{\r\n                  display: 'flex',\r\n                  justifyContent: 'space-between'\r\n                }}\r\n              >\r\n                <div>\r\n                  <Typography\r\n                    color=\"textPrimary\"\r\n                    variant=\"subtitle2\"\r\n                  >\r\n                    {file.name}\r\n                  </Typography>\r\n                  <Typography\r\n                    color=\"textSecondary\"\r\n                    variant=\"caption\"\r\n                  >\r\n                    {bytesToSize(file.size)}\r\n                  </Typography>\r\n                </div>\r\n                <div>\r\n                  <Tooltip title=\"More options\">\r\n                    <IconButton\r\n                      edge=\"end\"\r\n                      onClick={handleMenuOpen}\r\n                      ref={moreRef}\r\n                      size=\"small\"\r\n                    >\r\n                      <DotsHorizontalIcon fontSize=\"small\" />\r\n                    </IconButton>\r\n                  </Tooltip>\r\n                </div>\r\n              </CardContent>\r\n              <Divider />\r\n              <CardActions>\r\n                <Button\r\n                  color=\"primary\"\r\n                  fullWidth\r\n                  startIcon={<DownloadIcon fontSize=\"small\" />}\r\n                  variant=\"text\"\r\n                >\r\n                  Download\r\n                </Button>\r\n              </CardActions>\r\n              <Menu\r\n                anchorEl={moreRef.current}\r\n                anchorOrigin={{\r\n                  horizontal: 'left',\r\n                  vertical: 'top'\r\n                }}\r\n                elevation={1}\r\n                onClose={handleMenuClose}\r\n                open={openMenu}\r\n                PaperProps={{\r\n                  sx: {\r\n                    maxWidth: '100%',\r\n                    width: 250\r\n                  }\r\n                }}\r\n                transformOrigin={{\r\n                  horizontal: 'left',\r\n                  vertical: 'top'\r\n                }}\r\n              >\r\n                <MenuItem divider>\r\n                  <ListItemIcon>\r\n                    <PencilAltIcon fontSize=\"small\" />\r\n                  </ListItemIcon>\r\n                  <ListItemText primary=\"Rename\" />\r\n                </MenuItem>\r\n                <MenuItem divider>\r\n                  <ListItemIcon>\r\n                    <TrashIcon fontSize=\"small\" />\r\n                  </ListItemIcon>\r\n                  <ListItemText primary=\"Delete\" />\r\n                </MenuItem>\r\n                <MenuItem>\r\n                  <ListItemIcon>\r\n                    <ArchiveIcon fontSize=\"small\" />\r\n                  </ListItemIcon>\r\n                  <ListItemText primary=\"Archive\" />\r\n                </MenuItem>\r\n              </Menu>\r\n            </Card>\r\n          </Grid>\r\n        ))}\r\n      </Grid>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default GridList3;\r\n","import {\r\n  Avatar,\r\n  Box,\r\n  Card,\r\n  CardContent,\r\n  CardMedia,\r\n  Grid,\r\n  Chip,\r\n  Divider,\r\n  Link,\r\n  Typography\r\n} from '@material-ui/core';\r\n\r\nconst applicants = [\r\n  {\r\n    id: '5e887a62195cc5aef7e8ca5d',\r\n    avatar: '/static/mock-images/avatars/avatar-marcus_finn.png',\r\n    commonConnections: 12,\r\n    cover: '/static/mock-images/covers/cover_2.jpg',\r\n    name: 'Marcus Finn',\r\n    skills: [\r\n      'User Experience',\r\n      'FrontEnd development',\r\n      'HTML5',\r\n      'VueJS',\r\n      'ReactJS'\r\n    ]\r\n  },\r\n  {\r\n    id: '5e887ac47eed253091be10cb',\r\n    avatar: '/static/mock-images/avatars/avatar-carson_darrin.png',\r\n    commonConnections: 5,\r\n    cover: '/static/mock-images/covers/cover_3.jpg',\r\n    name: 'Carson Darrin',\r\n    skills: [\r\n      'User Interface',\r\n      'FullStack development',\r\n      'Angular',\r\n      'ExpressJS'\r\n    ]\r\n  },\r\n  {\r\n    id: '5e86809283e28b96d2d38537',\r\n    avatar: '/static/mock-images/avatars/avatar-jane_rotanson.png',\r\n    commonConnections: 17,\r\n    cover: '/static/mock-images/covers/cover_1.jpg',\r\n    name: 'Jane Rotanson',\r\n    skills: [\r\n      'BackEnd development',\r\n      'Firebase',\r\n      'MongoDB',\r\n      'ExpressJS'\r\n    ]\r\n  }\r\n];\r\n\r\nconst GridList4 = () => (\r\n  <Box\r\n    sx={{\r\n      backgroundColor: 'background.default',\r\n      minHeight: '100%',\r\n      p: 3\r\n    }}\r\n  >\r\n    <Grid\r\n      container\r\n      spacing={3}\r\n    >\r\n      {applicants.map((applicant) => (\r\n        <Grid\r\n          item\r\n          key={applicant.id}\r\n          md={4}\r\n          xs={12}\r\n        >\r\n          <Card>\r\n            <CardMedia\r\n              image={applicant.cover}\r\n              sx={{ height: 200 }}\r\n            />\r\n            <CardContent sx={{ pt: 0 }}>\r\n              <Box\r\n                sx={{\r\n                  display: 'flex',\r\n                  justifyContent: 'center',\r\n                  mb: 2,\r\n                  mt: '-50px'\r\n                }}\r\n              >\r\n                <Avatar\r\n                  alt=\"Applicant\"\r\n                  src={applicant.avatar}\r\n                  sx={{\r\n                    border: '3px solid #FFFFFF',\r\n                    height: 100,\r\n                    width: 100\r\n                  }}\r\n                />\r\n              </Box>\r\n              <Link\r\n                align=\"center\"\r\n                color=\"textPrimary\"\r\n                display=\"block\"\r\n                underline=\"none\"\r\n                variant=\"h6\"\r\n              >\r\n                {applicant.name}\r\n              </Link>\r\n              <Typography\r\n                align=\"center\"\r\n                variant=\"body2\"\r\n                color=\"textSecondary\"\r\n              >\r\n                {applicant.commonConnections}\r\n                {' '}\r\n                contacts in common\r\n              </Typography>\r\n              <Divider sx={{ my: 2 }} />\r\n              <Box sx={{ m: -0.5 }}>\r\n                {applicant.skills.map((skill) => (\r\n                  <Chip\r\n                    key={skill}\r\n                    label={skill}\r\n                    sx={{ m: 0.5 }}\r\n                    variant=\"outlined\"\r\n                  />\r\n                ))}\r\n              </Box>\r\n            </CardContent>\r\n          </Card>\r\n        </Grid>\r\n      ))}\r\n    </Grid>\r\n  </Box>\r\n);\r\n\r\nexport default GridList4;\r\n","import { subHours, formatDistanceToNowStrict } from 'date-fns';\r\nimport {\r\n  Avatar,\r\n  Box,\r\n  Card,\r\n  CardActionArea,\r\n  CardHeader,\r\n  CardMedia,\r\n  Grid,\r\n  IconButton,\r\n  Link,\r\n  Tooltip,\r\n  Typography\r\n} from '@material-ui/core';\r\nimport red from '@material-ui/core/colors/red';\r\nimport FavoriteIcon from '@material-ui/icons/Favorite';\r\nimport ClockIcon from '../../../icons/Clock';\r\nimport ShareIcon from '../../../icons/Share';\r\n\r\nconst now = new Date();\r\n\r\nconst posts = [\r\n  {\r\n    id: '5e887faca2b7a1ddce01221a',\r\n    author: {\r\n      id: '5e86809283e28b96d2d38537',\r\n      avatar: '/static/mock-images/avatars/avatar-jane_rotanson.png',\r\n      name: 'Jane Rotanson'\r\n    },\r\n    createdAt: subHours(now, 4).getTime(),\r\n    likes: 24,\r\n    media: '/static/mock-images/posts/post_1.png',\r\n    message: 'Hey guys! What\\'s your favorite framework?'\r\n  },\r\n  {\r\n    id: '5e887faf03e78a5359765636',\r\n    author: {\r\n      id: '5e86809283e28b96d2d38537',\r\n      avatar: '/static/mock-images/avatars/avatar-jane_rotanson.png',\r\n      name: 'Jane Rotanson'\r\n    },\r\n    createdAt: subHours(now, 7).getTime(),\r\n    likes: 65,\r\n    media: '/static/mock-images/posts/post_2.jpg',\r\n    message: 'Just made this overview screen for a project, what-cha thinkin?'\r\n  }\r\n];\r\n\r\nconst GridList5 = () => (\r\n  <Box\r\n    sx={{\r\n      backgroundColor: 'background.default',\r\n      minHeight: '100%',\r\n      p: 3\r\n    }}\r\n  >\r\n    <Grid\r\n      container\r\n      spacing={3}\r\n    >\r\n      {posts.map((post) => (\r\n        <Grid\r\n          item\r\n          key={post.id}\r\n          md={6}\r\n          xs={12}\r\n        >\r\n          <Card>\r\n            <CardHeader\r\n              avatar={(\r\n                <Avatar src={post.author.avatar} />\r\n              )}\r\n              disableTypography\r\n              subheader={(\r\n                <Box\r\n                  sx={{\r\n                    alignItems: 'center',\r\n                    display: 'flex',\r\n                    mt: 1\r\n                  }}\r\n                >\r\n                  <ClockIcon\r\n                    fontSize=\"small\"\r\n                    sx={{ color: 'text.secondary' }}\r\n                  />\r\n                  <Typography\r\n                    color=\"textSecondary\"\r\n                    sx={{ ml: '6px' }}\r\n                    variant=\"caption\"\r\n                  >\r\n                    {formatDistanceToNowStrict(post.createdAt)}\r\n                    {' '}\r\n                    ago\r\n                  </Typography>\r\n                </Box>\r\n              )}\r\n              title={(\r\n                <Link\r\n                  color=\"textPrimary\"\r\n                  variant=\"subtitle2\"\r\n                >\r\n                  {post.author.name}\r\n                </Link>\r\n              )}\r\n            />\r\n            <Box\r\n              sx={{\r\n                pb: 2,\r\n                px: 3\r\n              }}\r\n            >\r\n              <Typography\r\n                color=\"textPrimary\"\r\n                variant=\"body1\"\r\n              >\r\n                {post.message}\r\n              </Typography>\r\n              <Box sx={{ mt: 2 }}>\r\n                <CardActionArea>\r\n                  <CardMedia\r\n                    image={post.media}\r\n                    sx={{\r\n                      backgroundPosition: 'top',\r\n                      height: 350\r\n                    }}\r\n                  />\r\n                </CardActionArea>\r\n              </Box>\r\n              <Box\r\n                sx={{\r\n                  alignItems: 'center',\r\n                  display: 'flex',\r\n                  mt: 2\r\n                }}\r\n              >\r\n                <Tooltip title=\"Unlike\">\r\n                  <IconButton sx={{ color: red['600'] }}>\r\n                    <FavoriteIcon fontSize=\"small\" />\r\n                  </IconButton>\r\n                </Tooltip>\r\n                <Typography\r\n                  color=\"textSecondary\"\r\n                  variant=\"subtitle2\"\r\n                >\r\n                  {post.likes}\r\n                </Typography>\r\n                <Box sx={{ flexGrow: 1 }} />\r\n                <IconButton>\r\n                  <ShareIcon fontSize=\"small\" />\r\n                </IconButton>\r\n              </Box>\r\n            </Box>\r\n          </Card>\r\n        </Grid>\r\n      ))}\r\n    </Grid>\r\n  </Box>\r\n);\r\n\r\nexport default GridList5;\r\n","import { Avatar, Box, Button, Grid, IconButton, Link, Paper, Typography } from '@material-ui/core';\r\nimport DotsHorizontalIcon from '../../../icons/DotsHorizontal';\r\n\r\nconst connections = [\r\n  {\r\n    id: '5e887ac47eed253091be10cb',\r\n    avatar: '/static/mock-images/avatars/avatar-carson_darrin.png',\r\n    commonConnections: 10,\r\n    name: 'Carson Darrin',\r\n    status: 'Rejected'\r\n  },\r\n  {\r\n    id: '5e887b209c28ac3dd97f6db5',\r\n    avatar: '/static/mock-images/avatars/avatar-fran_perez.png',\r\n    commonConnections: 8,\r\n    name: 'Fran Perez',\r\n    status: 'pending'\r\n  },\r\n  {\r\n    id: '5e86805e2bafd54f66cc95c3',\r\n    avatar: '/static/mock-images/avatars/avatar-miron_vitold.png',\r\n    commonConnections: 5,\r\n    name: 'Miron Vitold',\r\n    status: 'Not connected'\r\n  }\r\n];\r\n\r\nconst GridList6 = () => (\r\n  <Box\r\n    sx={{\r\n      backgroundColor: 'background.default',\r\n      minHeight: '100%',\r\n      p: 3\r\n    }}\r\n  >\r\n    <Grid\r\n      container\r\n      spacing={3}\r\n    >\r\n      {connections.map((connection) => (\r\n        <Grid\r\n          item\r\n          key={connection.id}\r\n          xs={12}\r\n        >\r\n          <Paper variant=\"outlined\">\r\n            <Box\r\n              sx={{\r\n                alignItems: 'center',\r\n                display: 'flex',\r\n                p: 2\r\n              }}\r\n            >\r\n              <Avatar\r\n                src={connection.avatar}\r\n                sx={{\r\n                  height: 60,\r\n                  width: 60\r\n                }}\r\n              />\r\n              <Box\r\n                sx={{\r\n                  flexGrow: 1,\r\n                  mx: 2\r\n                }}\r\n              >\r\n                <Link\r\n                  color=\"textPrimary\"\r\n                  variant=\"h5\"\r\n                >\r\n                  {connection.name}\r\n                </Link>\r\n                <Typography\r\n                  color=\"textSecondary\"\r\n                  gutterBottom\r\n                  variant=\"body2\"\r\n                >\r\n                  {connection.commonConnections}\r\n                  {' '}\r\n                  connections in common\r\n                </Typography>\r\n                <Button\r\n                  color=\"primary\"\r\n                  size=\"small\"\r\n                  variant=\"outlined\"\r\n                >\r\n                  {connection.status}\r\n                </Button>\r\n              </Box>\r\n              <IconButton>\r\n                <DotsHorizontalIcon fontSize=\"small\" />\r\n              </IconButton>\r\n            </Box>\r\n          </Paper>\r\n        </Grid>\r\n      ))}\r\n    </Grid>\r\n  </Box>\r\n);\r\n\r\nexport default GridList6;\r\n","import { useEffect } from 'react';\r\nimport { Helmet } from 'react-helmet-async';\r\nimport { Box, Container } from '@material-ui/core';\r\nimport GridList1 from '../../components/widgets/grid-lists/GridList1';\r\nimport GridList2 from '../../components/widgets/grid-lists/GridList2';\r\nimport GridList3 from '../../components/widgets/grid-lists/GridList3';\r\nimport GridList4 from '../../components/widgets/grid-lists/GridList4';\r\nimport GridList5 from '../../components/widgets/grid-lists/GridList5';\r\nimport GridList6 from '../../components/widgets/grid-lists/GridList6';\r\nimport WidgetPreviewer from '../../components/WidgetPreviewer';\r\nimport gtm from '../../lib/gtm';\r\n\r\nconst BrowseGridLists = () => {\r\n  useEffect(() => {\r\n    gtm.push({ event: 'page_view' });\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      <Helmet>\r\n        <title>Browse: Grid Lists | Material Kit Pro</title>\r\n      </Helmet>\r\n      <Box\r\n        sx={{\r\n          backgroundColor: 'background.paper',\r\n          minHeight: '100%',\r\n          py: 8\r\n        }}\r\n      >\r\n        <Container maxWidth=\"lg\">\r\n          <Box>\r\n            <WidgetPreviewer\r\n              element={<GridList1 />}\r\n              name=\"Grid list with image\"\r\n            />\r\n            <WidgetPreviewer\r\n              element={<GridList2 />}\r\n              name=\"Mixed grid list\"\r\n            />\r\n            <WidgetPreviewer\r\n              element={<GridList3 />}\r\n              name=\"Grid list with bottom button\"\r\n            />\r\n            <WidgetPreviewer\r\n              element={<GridList4 />}\r\n              name=\"Grid list with avatar and cover picture \"\r\n            />\r\n            <WidgetPreviewer\r\n              element={<GridList5 />}\r\n              name=\"Grid list with picture and bottom buttons\"\r\n            />\r\n            <WidgetPreviewer\r\n              element={<GridList6 />}\r\n              name=\"Grid list with picture and bottom buttons\"\r\n            />\r\n          </Box>\r\n        </Container>\r\n      </Box>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default BrowseGridLists;\r\n","import createSvgIcon from '@material-ui/core/utils/createSvgIcon';\r\n\r\nconst DotsHorizontal = createSvgIcon(\r\n  <svg\r\n    xmlns=\"http://www.w3.org/2000/svg\"\r\n    viewBox=\"0 0 20 20\"\r\n    fill=\"currentColor\"\r\n  >\r\n    <path d=\"M6 10a2 2 0 11-4 0 2 2 0 014 0zM12 10a2 2 0 11-4 0 2 2 0 014 0zM16 12a2 2 0 100-4 2 2 0 000 4z\" />\r\n  </svg>, 'DotsHorizontal'\r\n);\r\n\r\nexport default DotsHorizontal;\r\n","import createSvgIcon from '@material-ui/core/utils/createSvgIcon';\r\n\r\nconst PencilAlt = createSvgIcon(\r\n  <svg\r\n    xmlns=\"http://www.w3.org/2000/svg\"\r\n    viewBox=\"0 0 20 20\"\r\n    fill=\"currentColor\"\r\n  >\r\n    <path d=\"M17.414 2.586a2 2 0 00-2.828 0L7 10.172V13h2.828l7.586-7.586a2 2 0 000-2.828z\" />\r\n    <path\r\n      fillRule=\"evenodd\"\r\n      d=\"M2 6a2 2 0 012-2h4a1 1 0 010 2H4v10h10v-4a1 1 0 112 0v4a2 2 0 01-2 2H4a2 2 0 01-2-2V6z\"\r\n      clipRule=\"evenodd\"\r\n    />\r\n  </svg>, 'PencilAlt'\r\n);\r\n\r\nexport default PencilAlt;\r\n","import createSvgIcon from '@material-ui/core/utils/createSvgIcon';\r\n\r\nconst Download = createSvgIcon(\r\n  <svg\r\n    xmlns=\"http://www.w3.org/2000/svg\"\r\n    viewBox=\"0 0 20 20\"\r\n    fill=\"currentColor\"\r\n  >\r\n    <path\r\n      fillRule=\"evenodd\"\r\n      d=\"M3 17a1 1 0 011-1h12a1 1 0 110 2H4a1 1 0 01-1-1zm3.293-7.707a1 1 0 011.414 0L9 10.586V3a1 1 0 112 0v7.586l1.293-1.293a1 1 0 111.414 1.414l-3 3a1 1 0 01-1.414 0l-3-3a1 1 0 010-1.414z\"\r\n      clipRule=\"evenodd\"\r\n    />\r\n  </svg>, 'Download'\r\n);\r\n\r\nexport default Download;\r\n","import createSvgIcon from '@material-ui/core/utils/createSvgIcon';\r\n\r\nconst Moon = createSvgIcon(\r\n  <svg\r\n    xmlns=\"http://www.w3.org/2000/svg\"\r\n    viewBox=\"0 0 20 20\"\r\n    fill=\"currentColor\"\r\n  >\r\n    <path d=\"M17.293 13.293A8 8 0 016.707 2.707a8.001 8.001 0 1010.586 10.586z\" />\r\n  </svg>, 'Moon'\r\n);\r\n\r\nexport default Moon;\r\n","import createSvgIcon from '@material-ui/core/utils/createSvgIcon';\r\n\r\nconst Sun = createSvgIcon(\r\n  <svg\r\n    xmlns=\"http://www.w3.org/2000/svg\"\r\n    viewBox=\"0 0 20 20\"\r\n    fill=\"currentColor\"\r\n  >\r\n    <path\r\n      fillRule=\"evenodd\"\r\n      d=\"M10 2a1 1 0 011 1v1a1 1 0 11-2 0V3a1 1 0 011-1zm4 8a4 4 0 11-8 0 4 4 0 018 0zm-.464 4.95l.707.707a1 1 0 001.414-1.414l-.707-.707a1 1 0 00-1.414 1.414zm2.12-10.607a1 1 0 010 1.414l-.706.707a1 1 0 11-1.414-1.414l.707-.707a1 1 0 011.414 0zM17 11a1 1 0 100-2h-1a1 1 0 100 2h1zm-7 4a1 1 0 011 1v1a1 1 0 11-2 0v-1a1 1 0 011-1zM5.05 6.464A1 1 0 106.465 5.05l-.708-.707a1 1 0 00-1.414 1.414l.707.707zm1.414 8.486l-.707.707a1 1 0 01-1.414-1.414l.707-.707a1 1 0 011.414 1.414zM4 11a1 1 0 100-2H3a1 1 0 000 2h1z\"\r\n      clipRule=\"evenodd\"\r\n    />\r\n  </svg>, 'Sun'\r\n);\r\n\r\nexport default Sun;\r\n","import { useEffect, useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Card, CardHeader, Divider, IconButton, ThemeProvider } from '@material-ui/core';\r\nimport { THEMES } from '../constants';\r\nimport useSettings from '../hooks/useSettings';\r\nimport MoonIcon from '../icons/Moon';\r\nimport SunIcon from '../icons/Sun';\r\nimport { createCustomTheme } from '../theme';\r\n\r\nconst WidgetPreviewer = (props) => {\r\n  const { element, name, ...other } = props;\r\n  const { settings } = useSettings();\r\n  const [selectedTheme, setSelectedTheme] = useState(settings.theme);\r\n\r\n  useEffect(() => {\r\n    setSelectedTheme(settings.theme);\r\n  }, [settings.theme]);\r\n\r\n  const handleSwitch = () => setSelectedTheme((prevSelectedTheme) => {\r\n    if (prevSelectedTheme === THEMES.LIGHT) {\r\n      if (settings.theme === THEMES.LIGHT) {\r\n        return THEMES.DARK;\r\n      }\r\n\r\n      return settings.theme;\r\n    }\r\n\r\n    return THEMES.LIGHT;\r\n  });\r\n\r\n  const theme = createCustomTheme({\r\n    ...settings,\r\n    theme: selectedTheme\r\n  });\r\n\r\n  return (\r\n    <Card\r\n      variant=\"outlined\"\r\n      sx={{ mb: 8 }}\r\n      {...other}\r\n    >\r\n      <CardHeader\r\n        action={(\r\n          <IconButton onClick={handleSwitch}>\r\n            {selectedTheme === 'LIGHT'\r\n              ? <MoonIcon fontSize=\"small\" />\r\n              : <SunIcon fontSize=\"small\" />}\r\n          </IconButton>\r\n        )}\r\n        title={name}\r\n      />\r\n      <Divider />\r\n      <ThemeProvider theme={theme}>\r\n        {element}\r\n      </ThemeProvider>\r\n    </Card>\r\n  );\r\n};\r\n\r\nWidgetPreviewer.propTypes = {\r\n  element: PropTypes.node.isRequired,\r\n  name: PropTypes.string.isRequired\r\n};\r\n\r\nexport default WidgetPreviewer;\r\n","import createSvgIcon from '@material-ui/core/utils/createSvgIcon';\r\n\r\nconst Trash = createSvgIcon(\r\n  <svg\r\n    xmlns=\"http://www.w3.org/2000/svg\"\r\n    viewBox=\"0 0 20 20\"\r\n    fill=\"currentColor\"\r\n  >\r\n    <path\r\n      fillRule=\"evenodd\"\r\n      d=\"M9 2a1 1 0 00-.894.553L7.382 4H4a1 1 0 000 2v10a2 2 0 002 2h8a2 2 0 002-2V6a1 1 0 100-2h-3.382l-.724-1.447A1 1 0 0011 2H9zM7 8a1 1 0 012 0v6a1 1 0 11-2 0V8zm5-1a1 1 0 00-1 1v6a1 1 0 102 0V8a1 1 0 00-1-1z\"\r\n      clipRule=\"evenodd\"\r\n    />\r\n  </svg>, 'Trash'\r\n);\r\n\r\nexport default Trash;\r\n","import createSvgIcon from '@material-ui/core/utils/createSvgIcon';\r\n\r\nconst Archive = createSvgIcon(\r\n  <svg\r\n    xmlns=\"http://www.w3.org/2000/svg\"\r\n    viewBox=\"0 0 20 20\"\r\n    fill=\"currentColor\"\r\n  >\r\n    <path d=\"M4 3a2 2 0 100 4h12a2 2 0 100-4H4z\" />\r\n    <path\r\n      fillRule=\"evenodd\"\r\n      d=\"M3 8h14v7a2 2 0 01-2 2H5a2 2 0 01-2-2V8zm5 3a1 1 0 011-1h2a1 1 0 110 2H9a1 1 0 01-1-1z\"\r\n      clipRule=\"evenodd\"\r\n    />\r\n  </svg>, 'Archive'\r\n);\r\n\r\nexport default Archive;\r\n","import createSvgIcon from '@material-ui/core/utils/createSvgIcon';\r\n\r\nconst DocumentText = createSvgIcon(\r\n  <svg\r\n    xmlns=\"http://www.w3.org/2000/svg\"\r\n    viewBox=\"0 0 20 20\"\r\n    fill=\"currentColor\"\r\n  >\r\n    <path\r\n      fillRule=\"evenodd\"\r\n      d=\"M4 4a2 2 0 012-2h4.586A2 2 0 0112 2.586L15.414 6A2 2 0 0116 7.414V16a2 2 0 01-2 2H6a2 2 0 01-2-2V4zm2 6a1 1 0 011-1h6a1 1 0 110 2H7a1 1 0 01-1-1zm1 3a1 1 0 100 2h6a1 1 0 100-2H7z\"\r\n      clipRule=\"evenodd\"\r\n    />\r\n  </svg>, 'DocumentText'\r\n);\r\n\r\nexport default DocumentText;\r\n","/* eslint-disable no-restricted-properties */\r\nconst bytesToSize = (bytes, decimals = 2) => {\r\n  if (bytes === 0) {\r\n    return '0 Bytes';\r\n  }\r\n\r\n  const k = 1024;\r\n  const dm = decimals < 0 ? 0 : decimals;\r\n  const sizes = ['Bytes', 'KB', 'MB', 'GB', 'TB', 'PB', 'EB', 'ZB', 'YB'];\r\n  const i = Math.floor(Math.log(bytes) / Math.log(k));\r\n\r\n  return `${parseFloat((bytes / Math.pow(k, i)).toFixed(dm))} ${sizes[i]}`;\r\n};\r\n\r\nexport default bytesToSize;\r\n","import createSvgIcon from '@material-ui/core/utils/createSvgIcon';\r\n\r\nconst Share = createSvgIcon(\r\n  <svg\r\n    xmlns=\"http://www.w3.org/2000/svg\"\r\n    viewBox=\"0 0 20 20\"\r\n    fill=\"currentColor\"\r\n  >\r\n    <path d=\"M15 8a3 3 0 10-2.977-2.63l-4.94 2.47a3 3 0 100 4.319l4.94 2.47a3 3 0 10.895-1.789l-4.94-2.47a3.027 3.027 0 000-.74l4.94-2.47C13.456 7.68 14.19 8 15 8z\" />\r\n  </svg>, 'Share'\r\n);\r\n\r\nexport default Share;\r\n","import createSvgIcon from '@material-ui/core/utils/createSvgIcon';\r\n\r\nconst Clock = createSvgIcon(\r\n  <svg\r\n    xmlns=\"http://www.w3.org/2000/svg\"\r\n    viewBox=\"0 0 20 20\"\r\n    fill=\"currentColor\"\r\n  >\r\n    <path\r\n      fillRule=\"evenodd\"\r\n      d=\"M10 18a8 8 0 100-16 8 8 0 000 16zm1-12a1 1 0 10-2 0v4a1 1 0 00.293.707l2.828 2.829a1 1 0 101.415-1.415L11 9.586V6z\"\r\n      clipRule=\"evenodd\"\r\n    />\r\n  </svg>, 'Clock'\r\n);\r\n\r\nexport default Clock;\r\n"],"sourceRoot":""}