{"version":3,"sources":["icons/Eye.js","icons/EyeOff.js","components/dashboard/kanban/KanbanCardAction.js","components/dashboard/kanban/KanbanCheckItem.js","components/dashboard/kanban/KanbanCheckItemAdd.js","components/dashboard/kanban/KanbanChecklist.js","components/dashboard/kanban/KanbanComment.js","components/dashboard/kanban/KanbanCommentAdd.js","components/dashboard/kanban/KanbanCardModal.js","components/dashboard/kanban/KanbanCard.js","components/dashboard/kanban/KanbanCardAdd.js","components/dashboard/kanban/KanbanColumn.js","components/dashboard/kanban/KanbanColumnAdd.js","pages/dashboard/Kanban.js","icons/ArrowRight.js","icons/DotsHorizontal.js","icons/Trash.js","icons/Archive.js","icons/DocumentText.js","icons/Duplicate.js","icons/Check.js","icons/Template.js","icons/ChatAlt.js"],"names":["Eye","createSvgIcon","xmlns","viewBox","fill","d","fillRule","clipRule","EyeOff","KanbanCardAction","props","icon","children","other","Button","color","fullWidth","startIcon","sx","justifyContent","mt","variant","KanbanCheckItemRoot","experimentalStyled","theme","alignItems","borderRadius","shape","display","padding","spacing","backgroundColor","palette","background","default","visibility","KanbanCheckItem","cardId","checkItem","checklistId","editing","onEditCancel","onEditComplete","onEditInit","dispatch","useDispatch","useState","name","setName","handleStateChange","event","a","state","target","checked","updateCheckItem","id","toast","success","console","error","handleSave","handleDelete","deleteCheckItem","Checkbox","onChange","ml","mr","Box","flexGrow","TextField","value","onClick","size","Typography","cursor","minHeight","IconButton","Trash","fontSize","defaultProps","KanbanCheckItemAdd","isExpanded","setIsExpanded","addCheckItem","placeholder","KanbanChecklistRoot","KanbanChecklist","card","checklist","editingName","setEditingName","editingCheckItem","setEditingCheckItem","handleNameSave","updateChecklist","deleteChecklist","handleCheckItemEditCancel","handleCheckItemEditComplete","totalCheckItems","checkItems","length","completedCheckItems","filter","completePercentage","ClipboardList","Math","round","LinearProgress","map","checkItemId","KanbanComment","createdAt","memberId","message","member","useSelector","kanban","members","byId","memberSelector","mb","Avatar","src","avatar","Paper","p","component","format","KanbanCommentAdd","user","useAuth","setMessage","handleKeyUp","code","addComment","onKeyUp","KanbanCardModal","onClose","column","open","handleDetailsUpdate","debounce","update","updateCard","handleSubscribe","isSubscribed","handleUnsubscribe","deleteCard","handleAddChecklist","addChecklist","Dialog","maxWidth","Grid","container","item","sm","xs","defaultValue","label","description","multiline","rows","checklists","comments","comment","fontWeight","Check","disabled","Users","DocumentText","ArrowRight","Duplicate","Template","Divider","my","Archive","KanbanCard","forwardRef","ref","dragging","cards","memberIds","cardSelector","setOpen","outline","py","Card","raised","cover","CardMedia","image","height","CardContent","attachments","ChatAlt","AvatarGroup","max","KanbanCardAdd","columnId","handleAddConfirm","createCard","KanbanColumn","moreRef","useRef","columns","columnSelector","openMenu","setOpenMenu","isRenaming","setIsRenaming","handleRenameInit","handleRename","updateColumn","deleteColumn","handleClear","clearColumn","flexDirection","maxHeight","mx","overflowX","overflowY","width","px","ClickAwayListener","onClickAway","margin","onBlur","edge","DotsHorizontal","droppableId","type","provided","innerRef","cardIds","index","draggableId","_provided","snapshot","isDragging","style","draggableProps","dragHandleProps","Menu","anchorEl","current","anchorOrigin","horizontal","vertical","keepMounted","MenuItem","KanbanColumnAdd","createColumn","Kanban","useEffect","gtm","push","getBoard","handleDragEnd","source","destination","moveCard","overflow","Breadcrumbs","aria-label","separator","ChevronRight","Link","RouterLink","to","onDragEnd","flexShrink","allIds"],"mappings":"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","file":"static/js/37.5abd63a8.chunk.js","sourcesContent":["import createSvgIcon from '@material-ui/core/utils/createSvgIcon';\r\n\r\nconst Eye = createSvgIcon(\r\n  <svg\r\n    xmlns=\"http://www.w3.org/2000/svg\"\r\n    viewBox=\"0 0 20 20\"\r\n    fill=\"currentColor\"\r\n  >\r\n    <path d=\"M10 12a2 2 0 100-4 2 2 0 000 4z\" />\r\n    <path\r\n      fillRule=\"evenodd\"\r\n      d=\"M.458 10C1.732 5.943 5.522 3 10 3s8.268 2.943 9.542 7c-1.274 4.057-5.064 7-9.542 7S1.732 14.057.458 10zM14 10a4 4 0 11-8 0 4 4 0 018 0z\"\r\n      clipRule=\"evenodd\"\r\n    />\r\n  </svg>, 'Eye'\r\n);\r\n\r\nexport default Eye;\r\n","import createSvgIcon from '@material-ui/core/utils/createSvgIcon';\r\n\r\nconst EyeOff = createSvgIcon(\r\n  <svg\r\n    xmlns=\"http://www.w3.org/2000/svg\"\r\n    viewBox=\"0 0 20 20\"\r\n    fill=\"currentColor\"\r\n  >\r\n    <path\r\n      fillRule=\"evenodd\"\r\n      d=\"M3.707 2.293a1 1 0 00-1.414 1.414l14 14a1 1 0 001.414-1.414l-1.473-1.473A10.014 10.014 0 0019.542 10C18.268 5.943 14.478 3 10 3a9.958 9.958 0 00-4.512 1.074l-1.78-1.781zm4.261 4.26l1.514 1.515a2.003 2.003 0 012.45 2.45l1.514 1.514a4 4 0 00-5.478-5.478z\"\r\n      clipRule=\"evenodd\"\r\n    />\r\n    <path d=\"M12.454 16.697L9.75 13.992a4 4 0 01-3.742-3.741L2.335 6.578A9.98 9.98 0 00.458 10c1.274 4.057 5.065 7 9.542 7 .847 0 1.669-.105 2.454-.303z\" />\r\n  </svg>, 'EyeOff'\r\n);\r\n\r\nexport default EyeOff;\r\n","import PropTypes from 'prop-types';\r\nimport { Button } from '@material-ui/core';\r\n\r\nconst KanbanCardAction = (props) => {\r\n  const { icon, children, ...other } = props;\r\n\r\n  return (\r\n    <Button\r\n      color=\"primary\"\r\n      fullWidth\r\n      startIcon={icon}\r\n      sx={{\r\n        justifyContent: 'flex-start',\r\n        '& + &': {\r\n          mt: 2\r\n        }\r\n      }}\r\n      variant=\"contained\"\r\n      {...other}\r\n    >\r\n      {children}\r\n    </Button>\r\n  );\r\n};\r\n\r\nKanbanCardAction.propTypes = {\r\n  icon: PropTypes.element,\r\n  children: PropTypes.node\r\n};\r\n\r\nexport default KanbanCardAction;\r\n","import { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport toast from 'react-hot-toast';\r\nimport { Box, Button, Checkbox, IconButton, TextField, Typography } from '@material-ui/core';\r\nimport { experimentalStyled } from '@material-ui/core/styles';\r\nimport TrashIcon from '../../../icons/Trash';\r\nimport { deleteCheckItem, updateCheckItem } from '../../../slices/kanban';\r\nimport { useDispatch } from '../../../store';\r\n\r\nconst KanbanCheckItemRoot = experimentalStyled('div')(({ theme }) => ({\r\n  alignItems: 'flex-start',\r\n  borderRadius: theme.shape.borderRadius,\r\n  display: 'flex',\r\n  padding: theme.spacing(1),\r\n  '&:hover': {\r\n    backgroundColor: theme.palette.background.default,\r\n    '& button': {\r\n      visibility: 'visible'\r\n    }\r\n  }\r\n}));\r\n\r\nconst KanbanCheckItem = (props) => {\r\n  const {\r\n    cardId,\r\n    checkItem,\r\n    checklistId,\r\n    editing,\r\n    onEditCancel,\r\n    onEditComplete,\r\n    onEditInit,\r\n    ...other\r\n  } = props;\r\n  const dispatch = useDispatch();\r\n  const [name, setName] = useState(checkItem.name);\r\n\r\n  const handleStateChange = async (event) => {\r\n    try {\r\n      const state = event.target.checked ? 'complete' : 'incomplete';\r\n\r\n      await dispatch(updateCheckItem(cardId, checklistId, checkItem.id, { state }));\r\n      toast.success('Check item updated!');\r\n    } catch (err) {\r\n      console.error(err);\r\n      toast.error('Something went wrong!');\r\n    }\r\n  };\r\n\r\n  const handleNameChange = (event) => {\r\n    setName(event.target.value);\r\n  };\r\n\r\n  const handleSave = async () => {\r\n    try {\r\n      await dispatch(updateCheckItem(cardId, checklistId, checkItem.id, { name }));\r\n      toast.success('Check item updated!');\r\n\r\n      if (onEditComplete) {\r\n        onEditComplete();\r\n      }\r\n    } catch (err) {\r\n      console.error(err);\r\n      toast.error('Something went wrong!');\r\n    }\r\n  };\r\n\r\n  const handleCancel = () => {\r\n    setName(checkItem.name);\r\n\r\n    if (onEditCancel) {\r\n      onEditCancel();\r\n    }\r\n  };\r\n\r\n  const handleDelete = async () => {\r\n    try {\r\n      await dispatch(deleteCheckItem(cardId, checklistId, checkItem.id));\r\n      toast.success('Check item deleted!');\r\n    } catch (err) {\r\n      console.error(err);\r\n      toast.error('Something went wrong!');\r\n    }\r\n  };\r\n\r\n  return (\r\n    <KanbanCheckItemRoot {...other}>\r\n      <Checkbox\r\n        checked={checkItem.state === 'complete'}\r\n        color=\"primary\"\r\n        onChange={handleStateChange}\r\n        sx={{\r\n          ml: -1,\r\n          mr: 1\r\n        }}\r\n      />\r\n      {editing\r\n        ? (\r\n          <Box sx={{ flexGrow: 1 }}>\r\n            <TextField\r\n              fullWidth\r\n              onChange={handleNameChange}\r\n              value={name}\r\n              variant=\"outlined\"\r\n            />\r\n            <Box sx={{ mt: 1 }}>\r\n              <Button\r\n                color=\"primary\"\r\n                onClick={handleSave}\r\n                size=\"small\"\r\n                variant=\"contained\"\r\n              >\r\n                Save\r\n              </Button>\r\n              <Button\r\n                color=\"primary\"\r\n                onClick={handleCancel}\r\n                size=\"small\"\r\n                variant=\"text\"\r\n              >\r\n                Cancel\r\n              </Button>\r\n            </Box>\r\n          </Box>\r\n        )\r\n        : (\r\n          <Box\r\n            sx={{\r\n              alignItems: 'center',\r\n              display: 'flex',\r\n              flexGrow: 1\r\n            }}\r\n          >\r\n            <Typography\r\n              color=\"textPrimary\"\r\n              onClick={onEditInit}\r\n              sx={{\r\n                flexGrow: 1,\r\n                cursor: 'pointer',\r\n                minHeight: 32\r\n              }}\r\n              variant=\"body1\"\r\n            >\r\n              {checkItem.name}\r\n            </Typography>\r\n            <IconButton\r\n              onClick={handleDelete}\r\n              sx={{ visibility: 'hidden' }}\r\n            >\r\n              <TrashIcon fontSize=\"small\" />\r\n            </IconButton>\r\n          </Box>\r\n        )}\r\n    </KanbanCheckItemRoot>\r\n  );\r\n};\r\n\r\nKanbanCheckItem.propTypes = {\r\n  cardId: PropTypes.string.isRequired,\r\n  checkItem: PropTypes.object.isRequired,\r\n  checklistId: PropTypes.string.isRequired,\r\n  editing: PropTypes.bool,\r\n  onEditCancel: PropTypes.func,\r\n  onEditComplete: PropTypes.func,\r\n  onEditInit: PropTypes.func,\r\n  sx: PropTypes.object\r\n};\r\n\r\nKanbanCheckItem.defaultProps = {\r\n  editing: false\r\n};\r\n\r\nexport default KanbanCheckItem;\r\n","import { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport toast from 'react-hot-toast';\r\nimport { Box, Button, TextField } from '@material-ui/core';\r\nimport { addCheckItem } from '../../../slices/kanban';\r\nimport { useDispatch } from '../../../store';\r\n\r\nconst KanbanCheckItemAdd = (props) => {\r\n  const { cardId, checklistId, ...other } = props;\r\n  const dispatch = useDispatch();\r\n  const [name, setName] = useState('');\r\n  const [isExpanded, setIsExpanded] = useState(false);\r\n\r\n  const handleAdd = () => {\r\n    setIsExpanded(true);\r\n  };\r\n\r\n  const handleCancel = () => {\r\n    setIsExpanded(false);\r\n    setName('');\r\n  };\r\n\r\n  const handleChange = (event) => {\r\n    setName(event.target.value);\r\n  };\r\n\r\n  const handleSave = async () => {\r\n    try {\r\n      if (!name) {\r\n        return;\r\n      }\r\n\r\n      await dispatch(addCheckItem(cardId, checklistId, name));\r\n      setIsExpanded(false);\r\n      setName('');\r\n      toast.success('Check item added!');\r\n    } catch (err) {\r\n      console.error(err);\r\n      toast.error('Something went wrong!');\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div {...other}>\r\n      {isExpanded\r\n        ? (\r\n          <div>\r\n            <TextField\r\n              fullWidth\r\n              onChange={handleChange}\r\n              placeholder=\"Add an item\"\r\n              value={name}\r\n              variant=\"outlined\"\r\n            />\r\n            <Box\r\n              sx={{\r\n                display: 'flex',\r\n                justifyContent: 'flex-end',\r\n                mt: 2\r\n              }}\r\n            >\r\n              <Button\r\n                color=\"primary\"\r\n                onClick={handleCancel}\r\n                size=\"small\"\r\n                variant=\"text\"\r\n              >\r\n                Cancel\r\n              </Button>\r\n              <Button\r\n                color=\"primary\"\r\n                onClick={handleSave}\r\n                size=\"small\"\r\n                sx={{ ml: 2 }}\r\n                variant=\"contained\"\r\n              >\r\n                Save\r\n              </Button>\r\n            </Box>\r\n          </div>\r\n        )\r\n        : (\r\n          <Button\r\n            color=\"primary\"\r\n            onClick={handleAdd}\r\n            size=\"small\"\r\n            variant=\"outlined\"\r\n          >\r\n            Add Item\r\n          </Button>\r\n        )}\r\n    </div>\r\n  );\r\n};\r\n\r\nKanbanCheckItemAdd.propTypes = {\r\n  cardId: PropTypes.string.isRequired,\r\n  checklistId: PropTypes.string.isRequired\r\n};\r\n\r\nexport default KanbanCheckItemAdd;\r\n","import { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport toast from 'react-hot-toast';\r\nimport { Box, Button, LinearProgress, TextField, Typography } from '@material-ui/core';\r\nimport { experimentalStyled } from '@material-ui/core/styles';\r\nimport ClipboardListIcon from '../../../icons/ClipboardList';\r\nimport { deleteChecklist, updateChecklist } from '../../../slices/kanban';\r\nimport { useDispatch } from '../../../store';\r\nimport KanbanCheckItem from './KanbanCheckItem';\r\nimport KanbanCheckItemAdd from './KanbanCheckItemAdd';\r\n\r\nconst KanbanChecklistRoot = experimentalStyled('div')``;\r\n\r\nconst KanbanChecklist = (props) => {\r\n  const { card, checklist, ...other } = props;\r\n  const dispatch = useDispatch();\r\n  const [name, setName] = useState(checklist.name);\r\n  const [editingName, setEditingName] = useState(false);\r\n  const [editingCheckItem, setEditingCheckItem] = useState(null);\r\n\r\n  const handleNameEdit = () => {\r\n    setEditingName(true);\r\n  };\r\n\r\n  const handleNameChange = (event) => {\r\n    setName(event.target.value);\r\n  };\r\n\r\n  const handleNameSave = async () => {\r\n    try {\r\n      if (!name || name === checklist.name) {\r\n        setEditingName(false);\r\n        setName(checklist.name);\r\n        return;\r\n      }\r\n\r\n      setEditingName(false);\r\n      await dispatch(updateChecklist(card.id, checklist.id, { name }));\r\n      toast.success('Checklist updated!');\r\n    } catch (err) {\r\n      console.error(err);\r\n      toast.error('Something went wrong!');\r\n    }\r\n  };\r\n\r\n  const handleNameCancel = () => {\r\n    setEditingName(false);\r\n    setName(checklist.name);\r\n  };\r\n\r\n  const handleDelete = async () => {\r\n    try {\r\n      await dispatch(deleteChecklist(card.id, checklist.id));\r\n      toast.success('Checklist deleted!');\r\n    } catch (err) {\r\n      console.error(err);\r\n      toast.error('Something went wrong!');\r\n    }\r\n  };\r\n\r\n  const handleCheckItemEditInit = (checkItemId) => {\r\n    setEditingCheckItem(checkItemId);\r\n  };\r\n\r\n  const handleCheckItemEditCancel = () => {\r\n    setEditingCheckItem(null);\r\n  };\r\n\r\n  const handleCheckItemEditComplete = () => {\r\n    setEditingCheckItem(null);\r\n  };\r\n\r\n  const totalCheckItems = checklist.checkItems.length;\r\n  const completedCheckItems = (checklist\r\n    .checkItems\r\n    .filter((checkItem) => checkItem.state === 'complete')).length;\r\n  const completePercentage = totalCheckItems === 0\r\n    ? 100\r\n    : (completedCheckItems / totalCheckItems) * 100;\r\n\r\n  return (\r\n    <KanbanChecklistRoot {...other}>\r\n      <Box\r\n        sx={{\r\n          alignItems: 'center',\r\n          display: 'flex'\r\n        }}\r\n      >\r\n        <Box sx={{ mr: 3 }}>\r\n          <ClipboardListIcon fontSize=\"small\" />\r\n        </Box>\r\n        {editingName\r\n          ? (\r\n            <Box sx={{ flexGrow: 1 }}>\r\n              <TextField\r\n                fullWidth\r\n                onChange={handleNameChange}\r\n                value={name}\r\n                variant=\"outlined\"\r\n              />\r\n              <Box sx={{ mt: 1 }}>\r\n                <Button\r\n                  color=\"primary\"\r\n                  onClick={handleNameSave}\r\n                  size=\"small\"\r\n                  variant=\"contained\"\r\n                >\r\n                  Save\r\n                </Button>\r\n                <Button\r\n                  color=\"primary\"\r\n                  onClick={handleNameCancel}\r\n                  size=\"small\"\r\n                  variant=\"text\"\r\n                >\r\n                  Cancel\r\n                </Button>\r\n              </Box>\r\n            </Box>\r\n          )\r\n          : (\r\n            <Box\r\n              sx={{\r\n                alignItems: 'center',\r\n                display: 'flex',\r\n                flexGrow: 1\r\n              }}\r\n            >\r\n              <Typography\r\n                color=\"textPrimary\"\r\n                onClick={handleNameEdit}\r\n                variant=\"h6\"\r\n              >\r\n                {checklist.name}\r\n              </Typography>\r\n              <Box sx={{ flexGrow: 1 }} />\r\n              <Button\r\n                color=\"primary\"\r\n                onClick={handleDelete}\r\n                size=\"small\"\r\n                variant=\"text\"\r\n              >\r\n                Delete\r\n              </Button>\r\n            </Box>\r\n          )}\r\n      </Box>\r\n      <Box\r\n        sx={{\r\n          alignItems: 'center',\r\n          display: 'flex',\r\n          mt: 1\r\n        }}\r\n      >\r\n        <Typography\r\n          color=\"textSecondary\"\r\n          variant=\"caption\"\r\n        >\r\n          {Math.round(completePercentage)}\r\n          %\r\n        </Typography>\r\n        <Box\r\n          sx={{\r\n            flexGrow: 1,\r\n            ml: 2\r\n          }}\r\n        >\r\n          <LinearProgress\r\n            color=\"primary\"\r\n            value={completePercentage}\r\n            variant=\"determinate\"\r\n          />\r\n        </Box>\r\n      </Box>\r\n      {checklist.checkItems.map((checkItem) => (\r\n        <KanbanCheckItem\r\n          cardId={card.id}\r\n          checkItem={checkItem}\r\n          checklistId={checklist.id}\r\n          editing={editingCheckItem === checkItem.id}\r\n          key={checkItem.id}\r\n          onEditCancel={handleCheckItemEditCancel}\r\n          onEditComplete={handleCheckItemEditComplete}\r\n          onEditInit={() => handleCheckItemEditInit(checkItem.id)}\r\n        />\r\n      ))}\r\n      <Box\r\n        sx={{\r\n          ml: 6,\r\n          mt: 1\r\n        }}\r\n      >\r\n        <KanbanCheckItemAdd\r\n          cardId={card.id}\r\n          checklistId={checklist.id}\r\n        />\r\n      </Box>\r\n    </KanbanChecklistRoot>\r\n  );\r\n};\r\n\r\nKanbanChecklist.propTypes = {\r\n  card: PropTypes.object.isRequired,\r\n  checklist: PropTypes.object.isRequired,\r\n  sx: PropTypes.object\r\n};\r\n\r\nexport default KanbanChecklist;\r\n","import PropTypes from 'prop-types';\r\nimport { format } from 'date-fns';\r\nimport { Avatar, Box, Paper, Typography } from '@material-ui/core';\r\nimport { useSelector } from '../../../store';\r\n\r\nconst memberSelector = (state, memberId) => {\r\n  const { members } = state.kanban;\r\n\r\n  return members.byId[memberId];\r\n};\r\n\r\nconst KanbanComment = (props) => {\r\n  const { createdAt, memberId, message, ...other } = props;\r\n  const member = useSelector((state) => memberSelector(state, memberId));\r\n\r\n  return (\r\n    <Box\r\n      sx={{\r\n        display: 'flex',\r\n        mb: 2\r\n      }}\r\n      {...other}\r\n    >\r\n      <Avatar src={member.avatar} />\r\n      <Box\r\n        sx={{\r\n          ml: 2,\r\n          flexGrow: 1\r\n        }}\r\n      >\r\n        <Typography\r\n          color=\"textPrimary\"\r\n          variant=\"subtitle2\"\r\n        >\r\n          {member.name}\r\n        </Typography>\r\n        <Paper\r\n          sx={{\r\n            backgroundColor: 'background.default',\r\n            mt: 1,\r\n            p: 2\r\n          }}\r\n          variant=\"outlined\"\r\n        >\r\n          <Typography\r\n            color=\"textPrimary\"\r\n            variant=\"body2\"\r\n          >\r\n            {message}\r\n          </Typography>\r\n        </Paper>\r\n        <Typography\r\n          color=\"textSecondary\"\r\n          component=\"p\"\r\n          sx={{ mt: 1 }}\r\n          variant=\"caption\"\r\n        >\r\n          {format(createdAt, 'MMM dd, yyyy \\'at\\' hh:mm a')}\r\n        </Typography>\r\n      </Box>\r\n    </Box>\r\n  );\r\n};\r\n\r\nKanbanComment.propTypes = {\r\n  createdAt: PropTypes.number.isRequired,\r\n  memberId: PropTypes.string.isRequired,\r\n  message: PropTypes.string.isRequired\r\n};\r\n\r\nexport default KanbanComment;\r\n","import { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport toast from 'react-hot-toast';\r\nimport { Avatar, Box, TextField } from '@material-ui/core';\r\nimport useAuth from '../../../hooks/useAuth';\r\nimport { addComment } from '../../../slices/kanban';\r\nimport { useDispatch } from '../../../store';\r\n\r\nconst KanbanCommentAdd = (props) => {\r\n  const { cardId, ...other } = props;\r\n  const dispatch = useDispatch();\r\n  const { user } = useAuth();\r\n  const [message, setMessage] = useState('');\r\n\r\n  const handleChange = (event) => {\r\n    setMessage(event.target.value);\r\n  };\r\n\r\n  const handleKeyUp = async (event) => {\r\n    try {\r\n      if (event.code === 'ENTER' && message) {\r\n        await dispatch(addComment(cardId, message));\r\n        setMessage('');\r\n        toast.success('Comment added!');\r\n      }\r\n    } catch (err) {\r\n      console.error(err);\r\n      toast.error('Something went wrong!');\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Box\r\n      sx={{\r\n        alignItems: 'center',\r\n        display: 'flex'\r\n      }}\r\n      {...other}\r\n    >\r\n      <Avatar\r\n        src={user.avatar}\r\n        sx={{ mr: 2 }}\r\n      />\r\n      <TextField\r\n        fullWidth\r\n        onChange={handleChange}\r\n        onKeyUp={handleKeyUp}\r\n        placeholder=\"Write a comment...\"\r\n        size=\"small\"\r\n        value={message}\r\n        variant=\"outlined\"\r\n      />\r\n    </Box>\r\n  );\r\n};\r\n\r\nKanbanCommentAdd.propTypes = {\r\n  cardId: PropTypes.string.isRequired\r\n};\r\n\r\nexport default KanbanCommentAdd;\r\n","import PropTypes from 'prop-types';\r\nimport toast from 'react-hot-toast';\r\nimport debounce from 'lodash/debounce';\r\nimport { Box, Dialog, Divider, Grid, TextField, Typography } from '@material-ui/core';\r\nimport LabelIcon from '@material-ui/icons/Label';\r\nimport ArchiveIcon from '../../../icons/Archive';\r\nimport ArrowRightIcon from '../../../icons/ArrowRight';\r\nimport CheckIcon from '../../../icons/Check';\r\nimport DocumentTextIcon from '../../../icons/DocumentText';\r\nimport DuplicateIcon from '../../../icons/Duplicate';\r\nimport EyeIcon from '../../../icons/Eye';\r\nimport EyeOffIcon from '../../../icons/EyeOff';\r\nimport TemplateIcon from '../../../icons/Template';\r\nimport UsersIcon from '../../../icons/Users';\r\nimport { addChecklist, deleteCard, updateCard } from '../../../slices/kanban';\r\nimport { useDispatch } from '../../../store';\r\nimport KanbanCardAction from './KanbanCardAction';\r\nimport KanbanChecklist from './KanbanChecklist';\r\nimport KanbanComment from './KanbanComment';\r\nimport KanbanCommentAdd from './KanbanCommentAdd';\r\n\r\nconst KanbanCardModal = (props) => {\r\n  const { card, column, onClose, open, ...other } = props;\r\n  const dispatch = useDispatch();\r\n\r\n  const handleDetailsUpdate = debounce(async (update) => {\r\n    try {\r\n      await dispatch(updateCard(card.id, update));\r\n      toast.success('Card updated!');\r\n    } catch (err) {\r\n      console.error(err);\r\n      toast.error('Something went wrong!');\r\n    }\r\n  }, 1000);\r\n\r\n  const handleSubscribe = async () => {\r\n    try {\r\n      await dispatch(updateCard(card.id, { isSubscribed: true }));\r\n      toast.success('Unsubscribed!');\r\n    } catch (err) {\r\n      console.error(err);\r\n      toast.error('Something went wrong!');\r\n    }\r\n  };\r\n\r\n  const handleUnsubscribe = async () => {\r\n    try {\r\n      await dispatch(updateCard(card.id, { isSubscribed: false }));\r\n      toast.success('Subscribed!');\r\n    } catch (err) {\r\n      console.error(err);\r\n      toast.error('Something went wrong!');\r\n    }\r\n  };\r\n\r\n  const handleDelete = async () => {\r\n    try {\r\n      await dispatch(deleteCard(card.id));\r\n      toast.success('Card archived!');\r\n    } catch (err) {\r\n      console.error(err);\r\n      toast.error('Something went wrong!');\r\n    }\r\n  };\r\n\r\n  const handleAddChecklist = async () => {\r\n    try {\r\n      await dispatch(addChecklist(card.id, 'Untitled Checklist'));\r\n      toast.success('Checklist added!');\r\n    } catch (err) {\r\n      console.error(err);\r\n      toast.error('Something went wrong!');\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Dialog\r\n      fullWidth\r\n      maxWidth=\"md\"\r\n      onClose={onClose}\r\n      open={open}\r\n      {...other}\r\n    >\r\n      <Box sx={{ p: 3 }}>\r\n        <Grid\r\n          container\r\n          spacing={5}\r\n        >\r\n          <Grid\r\n            item\r\n            sm={8}\r\n            xs={12}\r\n          >\r\n            <TextField\r\n              defaultValue={card.name}\r\n              fullWidth\r\n              label=\"Title\"\r\n              onChange={(event) => handleDetailsUpdate({ name: event.target.value })}\r\n              variant=\"outlined\"\r\n            />\r\n            <Box sx={{ mt: 3 }}>\r\n              <TextField\r\n                defaultValue={card.description}\r\n                fullWidth\r\n                multiline\r\n                onChange={(event) => handleDetailsUpdate({ description: event.target.value })}\r\n                placeholder=\"Leave a message\"\r\n                label=\"Description\"\r\n                rows={6}\r\n                variant=\"outlined\"\r\n              />\r\n            </Box>\r\n            {card.checklists.length > 0 && (\r\n              <Box sx={{ mt: 5 }}>\r\n                {card.checklists.map((checklist) => (\r\n                  <KanbanChecklist\r\n                    card={card}\r\n                    checklist={checklist}\r\n                    key={checklist.id}\r\n                    sx={{ mb: 3 }}\r\n                  />\r\n                ))}\r\n              </Box>\r\n            )}\r\n            <Box sx={{ mt: 3 }}>\r\n              <Typography\r\n                color=\"textPrimary\"\r\n                variant=\"h6\"\r\n              >\r\n                Activity\r\n              </Typography>\r\n              <Box sx={{ mt: 2 }}>\r\n                <KanbanCommentAdd cardId={card.id} />\r\n                {card.comments.length > 0 && (\r\n                  <Box sx={{ mt: 3 }}>\r\n                    {card.comments.map((comment) => (\r\n                      <KanbanComment\r\n                        createdAt={comment.createdAt}\r\n                        key={comment.id}\r\n                        memberId={comment.memberId}\r\n                        message={comment.message}\r\n                      />\r\n                    ))}\r\n                  </Box>\r\n                )}\r\n              </Box>\r\n            </Box>\r\n          </Grid>\r\n          <Grid\r\n            item\r\n            xs={12}\r\n            sm={4}\r\n          >\r\n            <Typography\r\n              color=\"textPrimary\"\r\n              component=\"h4\"\r\n              sx={{\r\n                fontWeight: 600,\r\n                mb: 2\r\n              }}\r\n              variant=\"overline\"\r\n            >\r\n              Add to card\r\n            </Typography>\r\n            <KanbanCardAction\r\n              icon={<CheckIcon fontSize=\"small\" />}\r\n              onClick={handleAddChecklist}\r\n            >\r\n              Checklist\r\n            </KanbanCardAction>\r\n            <KanbanCardAction\r\n              disabled\r\n              icon={<UsersIcon fontSize=\"small\" />}\r\n            >\r\n              Members\r\n            </KanbanCardAction>\r\n            <KanbanCardAction\r\n              disabled\r\n              icon={<LabelIcon fontSize=\"small\" />}\r\n            >\r\n              Labels\r\n            </KanbanCardAction>\r\n            <KanbanCardAction\r\n              disabled\r\n              icon={<DocumentTextIcon fontSize=\"small\" />}\r\n            >\r\n              Attachments\r\n            </KanbanCardAction>\r\n            <Box sx={{ mt: 3 }}>\r\n              <Typography\r\n                color=\"textPrimary\"\r\n                component=\"h4\"\r\n                sx={{\r\n                  fontWeight: 600,\r\n                  mb: 2\r\n                }}\r\n                variant=\"overline\"\r\n              >\r\n                Actions\r\n              </Typography>\r\n              <KanbanCardAction\r\n                disabled\r\n                icon={<ArrowRightIcon fontSize=\"small\" />}\r\n              >\r\n                Move\r\n              </KanbanCardAction>\r\n              <KanbanCardAction\r\n                disabled\r\n                icon={<DuplicateIcon fontSize=\"small\" />}\r\n              >\r\n                Copy\r\n              </KanbanCardAction>\r\n              <KanbanCardAction\r\n                disabled\r\n                icon={<TemplateIcon fontSize=\"small\" />}\r\n              >\r\n                Make Template\r\n              </KanbanCardAction>\r\n              <Divider sx={{ my: 2 }} />\r\n              {card.isSubscribed\r\n                ? (\r\n                  <KanbanCardAction\r\n                    icon={<EyeOffIcon fontSize=\"small\" />}\r\n                    onClick={handleUnsubscribe}\r\n                  >\r\n                    Unwatch\r\n                  </KanbanCardAction>\r\n                )\r\n                : (\r\n                  <KanbanCardAction\r\n                    icon={<EyeIcon fontSize=\"small\" />}\r\n                    onClick={handleSubscribe}\r\n                  >\r\n                    Watch\r\n                  </KanbanCardAction>\r\n                )}\r\n              <KanbanCardAction\r\n                icon={<ArchiveIcon fontSize=\"small\" />}\r\n                onClick={handleDelete}\r\n              >\r\n                Archive\r\n              </KanbanCardAction>\r\n            </Box>\r\n          </Grid>\r\n        </Grid>\r\n      </Box>\r\n    </Dialog>\r\n  );\r\n};\r\n\r\nKanbanCardModal.propTypes = {\r\n  card: PropTypes.object.isRequired,\r\n  column: PropTypes.object.isRequired,\r\n  onClose: PropTypes.func,\r\n  open: PropTypes.bool\r\n};\r\n\r\nKanbanCardModal.defaultProps = {\r\n  open: false\r\n};\r\n\r\nexport default KanbanCardModal;\r\n","import { forwardRef, useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport {\r\n  Avatar,\r\n  AvatarGroup,\r\n  Box,\r\n  Card,\r\n  CardContent,\r\n  CardMedia,\r\n  Typography\r\n} from '@material-ui/core';\r\nimport CheckIcon from '../../../icons/Check';\r\nimport ChatAltIcon from '../../../icons/ChatAlt';\r\nimport DocumentTextIcon from '../../../icons/DocumentText';\r\nimport EyeIcon from '../../../icons/Eye';\r\nimport { useSelector } from '../../../store';\r\nimport KanbanCardModal from './KanbanCardModal';\r\n\r\nconst cardSelector = (state, cardId) => {\r\n  const { cards, members } = state.kanban;\r\n  const card = cards.byId[cardId];\r\n\r\n  return {\r\n    ...card,\r\n    members: card.memberIds.map((memberId) => members.byId[memberId])\r\n  };\r\n};\r\n\r\nconst KanbanCard = forwardRef((props, ref) => {\r\n  const { cardId, dragging, column, ...other } = props;\r\n  const card = useSelector((state) => cardSelector(state, cardId));\r\n  const [open, setOpen] = useState(false);\r\n\r\n  const handleOpen = () => {\r\n    setOpen(true);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n  return (\r\n    <Box\r\n      ref={ref}\r\n      sx={{\r\n        outline: 'none',\r\n        py: 1\r\n      }}\r\n      {...other}\r\n    >\r\n      <Card\r\n        onClick={handleOpen}\r\n        raised={dragging}\r\n        sx={{\r\n          ...(dragging && {\r\n            backgroundColor: 'background.paper'\r\n          }),\r\n          '&:hover': {\r\n            backgroundColor: 'background.default'\r\n          }\r\n        }}\r\n        variant={dragging ? 'elevation' : 'outlined'}\r\n      >\r\n        {card.cover && (\r\n          <CardMedia\r\n            image={card.cover}\r\n            sx={{ height: 200 }}\r\n          />\r\n        )}\r\n        <CardContent>\r\n          <Typography\r\n            color=\"textPrimary\"\r\n            variant=\"subtitle2\"\r\n          >\r\n            {card.name}\r\n          </Typography>\r\n          <Box\r\n            sx={{\r\n              alignItems: 'center',\r\n              display: 'flex',\r\n              mt: 2,\r\n              '& svg:not(:first-of-type)': {\r\n                ml: 2\r\n              }\r\n            }}\r\n          >\r\n            {card.isSubscribed && <EyeIcon fontSize=\"small\" />}\r\n            {card.attachments.length > 0 && <DocumentTextIcon fontSize=\"small\" />}\r\n            {card.checklists.length > 0 && <CheckIcon fontSize=\"small\" />}\r\n            {card.comments.length > 0 && <ChatAltIcon fontSize=\"small\" />}\r\n            <Box sx={{ flexGrow: 1 }} />\r\n            {card.members.length > 0 && (\r\n              <AvatarGroup max={5}>\r\n                {card.members.map((member) => (\r\n                  <Avatar\r\n                    key={member.id}\r\n                    src={member.avatar}\r\n                  />\r\n                ))}\r\n              </AvatarGroup>\r\n            )}\r\n          </Box>\r\n        </CardContent>\r\n      </Card>\r\n      <KanbanCardModal\r\n        card={card}\r\n        column={column}\r\n        onClose={handleClose}\r\n        open={open}\r\n      />\r\n    </Box>\r\n  );\r\n});\r\n\r\nKanbanCard.propTypes = {\r\n  cardId: PropTypes.string.isRequired,\r\n  dragging: PropTypes.bool,\r\n  index: PropTypes.number,\r\n  column: PropTypes.object.isRequired,\r\n  style: PropTypes.object\r\n};\r\n\r\nKanbanCard.defaultProps = {\r\n  dragging: false\r\n};\r\n\r\nexport default KanbanCard;\r\n","import { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport toast from 'react-hot-toast';\r\nimport { Box, Button, TextField } from '@material-ui/core';\r\nimport { createCard } from '../../../slices/kanban';\r\nimport { useDispatch } from '../../../store';\r\n\r\nconst KanbanCardAdd = (props) => {\r\n  const { columnId, ...other } = props;\r\n  const dispatch = useDispatch();\r\n  const [isExpanded, setIsExpanded] = useState(false);\r\n  const [name, setName] = useState('');\r\n\r\n  const handleChange = (event) => {\r\n    setName(event.target.value);\r\n  };\r\n\r\n  const handleAddInit = () => {\r\n    setIsExpanded(true);\r\n  };\r\n\r\n  const handleAddCancel = () => {\r\n    setIsExpanded(false);\r\n    setName('');\r\n  };\r\n\r\n  const handleAddConfirm = async () => {\r\n    try {\r\n      await dispatch(createCard(columnId, name || 'Untitled Card'));\r\n      setIsExpanded(false);\r\n      setName('');\r\n      toast.success('Card created!');\r\n    } catch (err) {\r\n      console.error(err);\r\n      toast.error('Something went wrong!');\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div {...other}>\r\n      {isExpanded\r\n        ? (\r\n          <>\r\n            <TextField\r\n              fullWidth\r\n              label=\"Title\"\r\n              name=\"cardName\"\r\n              onChange={handleChange}\r\n              value={name}\r\n              variant=\"outlined\"\r\n            />\r\n            <Box\r\n              sx={{\r\n                display: 'flex',\r\n                justifyContent: 'space-between',\r\n                mt: 2\r\n              }}\r\n            >\r\n              <Button\r\n                color=\"primary\"\r\n                onClick={handleAddCancel}\r\n                variant=\"text\"\r\n              >\r\n                Cancel\r\n              </Button>\r\n              <Button\r\n                color=\"primary\"\r\n                onClick={handleAddConfirm}\r\n                variant=\"contained\"\r\n              >\r\n                Add\r\n              </Button>\r\n            </Box>\r\n          </>\r\n        )\r\n        : (\r\n          <Box\r\n            sx={{\r\n              display: 'flex',\r\n              justifyContent: 'center'\r\n            }}\r\n          >\r\n            <Button\r\n              color=\"primary\"\r\n              onClick={handleAddInit}\r\n              variant=\"text\"\r\n            >\r\n              Add Card\r\n            </Button>\r\n          </Box>\r\n        )}\r\n    </div>\r\n  );\r\n};\r\n\r\nKanbanCardAdd.propTypes = {\r\n  columnId: PropTypes.string.isRequired\r\n};\r\n\r\nexport default KanbanCardAdd;\r\n","import { useRef, useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport toast from 'react-hot-toast';\r\nimport { Droppable, Draggable } from 'react-beautiful-dnd';\r\nimport {\r\n  Box,\r\n  ClickAwayListener,\r\n  Divider,\r\n  IconButton,\r\n  Menu,\r\n  MenuItem,\r\n  Paper,\r\n  TextField,\r\n  Typography\r\n} from '@material-ui/core';\r\nimport DotsHorizontalIcon from '../../../icons/DotsHorizontal';\r\nimport { clearColumn, deleteColumn, updateColumn } from '../../../slices/kanban';\r\nimport { useDispatch, useSelector } from '../../../store';\r\nimport KanbanCard from './KanbanCard';\r\nimport KanbanCardAdd from './KanbanCardAdd';\r\n\r\nconst columnSelector = (state, columnId) => {\r\n  const { columns } = state.kanban;\r\n\r\n  return columns.byId[columnId];\r\n};\r\n\r\nconst KanbanColumn = (props) => {\r\n  const { columnId, ...other } = props;\r\n  const dispatch = useDispatch();\r\n  const moreRef = useRef(null);\r\n  const column = useSelector((state) => columnSelector(state, columnId));\r\n  const [openMenu, setOpenMenu] = useState(false);\r\n  const [name, setName] = useState(column.name);\r\n  const [isRenaming, setIsRenaming] = useState(false);\r\n\r\n  const handleMenuOpen = () => {\r\n    setOpenMenu(true);\r\n  };\r\n\r\n  const handleMenuClose = () => {\r\n    setOpenMenu(false);\r\n  };\r\n\r\n  const handleChange = (event) => {\r\n    setName(event.target.value);\r\n  };\r\n\r\n  const handleRenameInit = () => {\r\n    setIsRenaming(true);\r\n    setOpenMenu(false);\r\n  };\r\n\r\n  const handleRename = async () => {\r\n    try {\r\n      if (!name) {\r\n        setName(column.name);\r\n        setIsRenaming(false);\r\n        return;\r\n      }\r\n\r\n      const update = { name };\r\n\r\n      setIsRenaming(false);\r\n      await dispatch(updateColumn(column.id, update));\r\n      toast.success('Column updated!');\r\n    } catch (err) {\r\n      console.error(err);\r\n      toast.error('Something went wrong!');\r\n    }\r\n  };\r\n\r\n  const handleDelete = async () => {\r\n    try {\r\n      setOpenMenu(false);\r\n      await dispatch(deleteColumn(column.id));\r\n      toast.success('Column deleted!');\r\n    } catch (err) {\r\n      console.error(err);\r\n      toast.error('Something went wrong!');\r\n    }\r\n  };\r\n\r\n  const handleClear = async () => {\r\n    try {\r\n      setOpenMenu(false);\r\n      await dispatch(clearColumn(column.id));\r\n      toast.success('Column cleared!');\r\n    } catch (err) {\r\n      console.error(err);\r\n      toast.error('Something went wrong!');\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div {...other}>\r\n      <Paper\r\n        sx={{\r\n          display: 'flex',\r\n          flexDirection: 'column',\r\n          maxHeight: '100%',\r\n          mx: 1,\r\n          overflowX: 'hidden',\r\n          overflowY: 'hidden',\r\n          width: {\r\n            xs: 300,\r\n            sm: 380\r\n          }\r\n        }}\r\n      >\r\n        <Box\r\n          sx={{\r\n            alignItems: 'center',\r\n            display: 'flex',\r\n            px: 2,\r\n            py: 1\r\n          }}\r\n        >\r\n          {isRenaming\r\n            ? (\r\n              <ClickAwayListener onClickAway={handleRename}>\r\n                <TextField\r\n                  margin=\"dense\"\r\n                  onBlur={handleRename}\r\n                  onChange={handleChange}\r\n                  value={name}\r\n                  variant=\"outlined\"\r\n                />\r\n              </ClickAwayListener>\r\n            )\r\n            : (\r\n              <Typography\r\n                color=\"inherit\"\r\n                onClick={handleRenameInit}\r\n                variant=\"h6\"\r\n              >\r\n                {column.name}\r\n              </Typography>\r\n            )}\r\n          <Box sx={{ flexGrow: 1 }} />\r\n          <IconButton\r\n            color=\"inherit\"\r\n            edge=\"end\"\r\n            onClick={handleMenuOpen}\r\n            ref={moreRef}\r\n          >\r\n            <DotsHorizontalIcon fontSize=\"small\" />\r\n          </IconButton>\r\n        </Box>\r\n        <Divider />\r\n        <Droppable\r\n          droppableId={column.id}\r\n          type=\"card\"\r\n        >\r\n          {(provided) => (\r\n            <Box\r\n              ref={provided.innerRef}\r\n              sx={{\r\n                flexGrow: 1,\r\n                minHeight: 80,\r\n                overflowY: 'auto',\r\n                px: 2,\r\n                py: 1\r\n              }}\r\n            >\r\n              {column.cardIds.map((cardId, index) => (\r\n                <Draggable\r\n                  draggableId={cardId}\r\n                  index={index}\r\n                  key={cardId}\r\n                >\r\n                  {(_provided, snapshot) => (\r\n                    <KanbanCard\r\n                      cardId={cardId}\r\n                      dragging={snapshot.isDragging}\r\n                      index={index}\r\n                      key={cardId}\r\n                      column={column}\r\n                      ref={_provided.innerRef}\r\n                      style={{ ..._provided.draggableProps.style }}\r\n                      {..._provided.draggableProps}\r\n                      {..._provided.dragHandleProps}\r\n                    />\r\n                  )}\r\n                </Draggable>\r\n              ))}\r\n              {provided.placeholder}\r\n            </Box>\r\n          )}\r\n        </Droppable>\r\n        <Divider />\r\n        <Box sx={{ p: 2 }}>\r\n          <KanbanCardAdd columnId={column.id} />\r\n        </Box>\r\n        <Menu\r\n          anchorEl={moreRef.current}\r\n          anchorOrigin={{\r\n            horizontal: 'center',\r\n            vertical: 'bottom'\r\n          }}\r\n          keepMounted\r\n          onClose={handleMenuClose}\r\n          open={openMenu}\r\n        >\r\n          <MenuItem onClick={handleRenameInit}>\r\n            Rename\r\n          </MenuItem>\r\n          <MenuItem onClick={handleClear}>\r\n            Clear\r\n          </MenuItem>\r\n          <MenuItem onClick={handleDelete}>\r\n            Delete\r\n          </MenuItem>\r\n        </Menu>\r\n      </Paper>\r\n    </div>\r\n  );\r\n};\r\n\r\nKanbanColumn.propTypes = {\r\n  columnId: PropTypes.string.isRequired\r\n};\r\n\r\nexport default KanbanColumn;\r\n","import { useState } from 'react';\r\nimport toast from 'react-hot-toast';\r\nimport { Box, Button, Card, TextField } from '@material-ui/core';\r\nimport { createColumn } from '../../../slices/kanban';\r\nimport { useDispatch } from '../../../store';\r\n\r\nconst KanbanColumnAdd = (props) => {\r\n  const dispatch = useDispatch();\r\n  const [isExpanded, setIsExpanded] = useState(false);\r\n  const [name, setName] = useState('');\r\n\r\n  const handleChange = (event) => {\r\n    setName(event.target.value);\r\n  };\r\n\r\n  const handleAddInit = () => {\r\n    setIsExpanded(true);\r\n  };\r\n\r\n  const handleAddCancel = () => {\r\n    setIsExpanded(false);\r\n    setName('');\r\n  };\r\n\r\n  const handleAddConfirm = async () => {\r\n    try {\r\n      await dispatch(createColumn(name || 'Untitled column'));\r\n      setIsExpanded(false);\r\n      setName('');\r\n      toast.success('Column created!');\r\n    } catch (err) {\r\n      console.error(err);\r\n      toast.error('Something went wrong!');\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div {...props}>\r\n      <Card\r\n        sx={{\r\n          mx: 1,\r\n          width: {\r\n            sm: 380,\r\n            xs: 300\r\n          }\r\n        }}\r\n      >\r\n        <Box sx={{ p: 2 }}>\r\n          {isExpanded\r\n            ? (\r\n              <>\r\n                <TextField\r\n                  fullWidth\r\n                  label=\"Name\"\r\n                  name=\"listName\"\r\n                  onChange={handleChange}\r\n                  value={name}\r\n                  variant=\"outlined\"\r\n                />\r\n                <Box\r\n                  sx={{\r\n                    display: 'flex',\r\n                    justifyContent: 'space-between',\r\n                    mt: 2\r\n                  }}\r\n                >\r\n                  <Button\r\n                    color=\"primary\"\r\n                    onClick={handleAddCancel}\r\n                    variant=\"text\"\r\n                  >\r\n                    Cancel\r\n                  </Button>\r\n                  <Button\r\n                    color=\"primary\"\r\n                    onClick={handleAddConfirm}\r\n                    variant=\"contained\"\r\n                  >\r\n                    Add\r\n                  </Button>\r\n                </Box>\r\n              </>\r\n            )\r\n            : (\r\n              <Box\r\n                sx={{\r\n                  display: 'flex',\r\n                  justifyContent: 'center'\r\n                }}\r\n              >\r\n                <Button\r\n                  color=\"primary\"\r\n                  onClick={handleAddInit}\r\n                  variant=\"text\"\r\n                >\r\n                  Add Column\r\n                </Button>\r\n              </Box>\r\n            )}\r\n        </Box>\r\n      </Card>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default KanbanColumnAdd;\r\n","import { useEffect } from 'react';\r\nimport { Link as RouterLink } from 'react-router-dom';\r\nimport { Helmet } from 'react-helmet-async';\r\nimport { DragDropContext } from 'react-beautiful-dnd';\r\nimport toast from 'react-hot-toast';\r\nimport { Box, Breadcrumbs, Link, Typography } from '@material-ui/core';\r\nimport { KanbanColumn, KanbanColumnAdd } from '../../components/dashboard/kanban';\r\nimport ChevronRightIcon from '../../icons/ChevronRight';\r\nimport gtm from '../../lib/gtm';\r\nimport { getBoard, moveCard } from '../../slices/kanban';\r\nimport { useDispatch, useSelector } from '../../store';\r\n\r\nconst Kanban = () => {\r\n  const dispatch = useDispatch();\r\n  const { columns } = useSelector((state) => state.kanban);\r\n\r\n  useEffect(() => {\r\n    gtm.push({ event: 'page_view' });\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    dispatch(getBoard());\r\n  }, []);\r\n\r\n  const handleDragEnd = async ({ source, destination, draggableId }) => {\r\n    try {\r\n      // Dropped outside the column\r\n      if (!destination) {\r\n        return;\r\n      }\r\n\r\n      // Card has not been moved\r\n      if (source.droppableId === destination.droppableId\r\n        && source.index === destination.index) {\r\n        return;\r\n      }\r\n\r\n      if (source.droppableId === destination.droppableId) {\r\n        // Moved to the same column on different position\r\n        await dispatch(moveCard(draggableId, destination.index));\r\n      } else {\r\n        // Moved to another column\r\n        await dispatch(moveCard(draggableId, destination.index, destination.droppableId));\r\n      }\r\n\r\n      toast.success('Card moved!');\r\n    } catch (err) {\r\n      console.error(err);\r\n      toast.error('Something went wrong!');\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Helmet>\r\n        <title>Dashboard: Kanban | Material Kit Pro</title>\r\n      </Helmet>\r\n      <Box\r\n        sx={{\r\n          backgroundColor: 'background.default',\r\n          display: 'flex',\r\n          flexDirection: 'column',\r\n          height: '100%',\r\n          overflow: 'hidden'\r\n        }}\r\n      >\r\n        <Box sx={{ p: 3 }}>\r\n          <Typography\r\n            color=\"textPrimary\"\r\n            variant=\"h5\"\r\n          >\r\n            Kanban\r\n          </Typography>\r\n          <Breadcrumbs\r\n            aria-label=\"breadcrumb\"\r\n            separator={<ChevronRightIcon fontSize=\"small\" />}\r\n            sx={{ mt: 1 }}\r\n          >\r\n            <Link\r\n              color=\"textPrimary\"\r\n              component={RouterLink}\r\n              to=\"/dashboard\"\r\n              variant=\"subtitle2\"\r\n            >\r\n              Dashboard\r\n            </Link>\r\n            <Typography\r\n              color=\"textSecondary\"\r\n              variant=\"subtitle2\"\r\n            >\r\n              Kanban\r\n            </Typography>\r\n          </Breadcrumbs>\r\n        </Box>\r\n        <DragDropContext onDragEnd={handleDragEnd}>\r\n          <Box\r\n            sx={{\r\n              display: 'flex',\r\n              flexGrow: 1,\r\n              flexShrink: 1,\r\n              overflowX: 'auto',\r\n              overflowY: 'hidden'\r\n            }}\r\n          >\r\n            <Box\r\n              sx={{\r\n                display: 'flex',\r\n                px: 1,\r\n                py: 3\r\n              }}\r\n            >\r\n              {columns.allIds.map((columnId) => (\r\n                <KanbanColumn\r\n                  columnId={columnId}\r\n                  key={columnId}\r\n                />\r\n              ))}\r\n              <KanbanColumnAdd />\r\n            </Box>\r\n          </Box>\r\n        </DragDropContext>\r\n      </Box>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Kanban;\r\n","import createSvgIcon from '@material-ui/core/utils/createSvgIcon';\r\n\r\nconst ArrowRight = createSvgIcon(\r\n  <svg\r\n    xmlns=\"http://www.w3.org/2000/svg\"\r\n    viewBox=\"0 0 20 20\"\r\n    fill=\"currentColor\"\r\n  >\r\n    <path\r\n      fillRule=\"evenodd\"\r\n      d=\"M10.293 3.293a1 1 0 011.414 0l6 6a1 1 0 010 1.414l-6 6a1 1 0 01-1.414-1.414L14.586 11H3a1 1 0 110-2h11.586l-4.293-4.293a1 1 0 010-1.414z\"\r\n      clipRule=\"evenodd\"\r\n    />\r\n  </svg>, 'ArrowRight'\r\n);\r\n\r\nexport default ArrowRight;\r\n","import createSvgIcon from '@material-ui/core/utils/createSvgIcon';\r\n\r\nconst DotsHorizontal = createSvgIcon(\r\n  <svg\r\n    xmlns=\"http://www.w3.org/2000/svg\"\r\n    viewBox=\"0 0 20 20\"\r\n    fill=\"currentColor\"\r\n  >\r\n    <path d=\"M6 10a2 2 0 11-4 0 2 2 0 014 0zM12 10a2 2 0 11-4 0 2 2 0 014 0zM16 12a2 2 0 100-4 2 2 0 000 4z\" />\r\n  </svg>, 'DotsHorizontal'\r\n);\r\n\r\nexport default DotsHorizontal;\r\n","import createSvgIcon from '@material-ui/core/utils/createSvgIcon';\r\n\r\nconst Trash = createSvgIcon(\r\n  <svg\r\n    xmlns=\"http://www.w3.org/2000/svg\"\r\n    viewBox=\"0 0 20 20\"\r\n    fill=\"currentColor\"\r\n  >\r\n    <path\r\n      fillRule=\"evenodd\"\r\n      d=\"M9 2a1 1 0 00-.894.553L7.382 4H4a1 1 0 000 2v10a2 2 0 002 2h8a2 2 0 002-2V6a1 1 0 100-2h-3.382l-.724-1.447A1 1 0 0011 2H9zM7 8a1 1 0 012 0v6a1 1 0 11-2 0V8zm5-1a1 1 0 00-1 1v6a1 1 0 102 0V8a1 1 0 00-1-1z\"\r\n      clipRule=\"evenodd\"\r\n    />\r\n  </svg>, 'Trash'\r\n);\r\n\r\nexport default Trash;\r\n","import createSvgIcon from '@material-ui/core/utils/createSvgIcon';\r\n\r\nconst Archive = createSvgIcon(\r\n  <svg\r\n    xmlns=\"http://www.w3.org/2000/svg\"\r\n    viewBox=\"0 0 20 20\"\r\n    fill=\"currentColor\"\r\n  >\r\n    <path d=\"M4 3a2 2 0 100 4h12a2 2 0 100-4H4z\" />\r\n    <path\r\n      fillRule=\"evenodd\"\r\n      d=\"M3 8h14v7a2 2 0 01-2 2H5a2 2 0 01-2-2V8zm5 3a1 1 0 011-1h2a1 1 0 110 2H9a1 1 0 01-1-1z\"\r\n      clipRule=\"evenodd\"\r\n    />\r\n  </svg>, 'Archive'\r\n);\r\n\r\nexport default Archive;\r\n","import createSvgIcon from '@material-ui/core/utils/createSvgIcon';\r\n\r\nconst DocumentText = createSvgIcon(\r\n  <svg\r\n    xmlns=\"http://www.w3.org/2000/svg\"\r\n    viewBox=\"0 0 20 20\"\r\n    fill=\"currentColor\"\r\n  >\r\n    <path\r\n      fillRule=\"evenodd\"\r\n      d=\"M4 4a2 2 0 012-2h4.586A2 2 0 0112 2.586L15.414 6A2 2 0 0116 7.414V16a2 2 0 01-2 2H6a2 2 0 01-2-2V4zm2 6a1 1 0 011-1h6a1 1 0 110 2H7a1 1 0 01-1-1zm1 3a1 1 0 100 2h6a1 1 0 100-2H7z\"\r\n      clipRule=\"evenodd\"\r\n    />\r\n  </svg>, 'DocumentText'\r\n);\r\n\r\nexport default DocumentText;\r\n","import createSvgIcon from '@material-ui/core/utils/createSvgIcon';\r\n\r\nconst Duplicate = createSvgIcon(\r\n  <svg\r\n    xmlns=\"http://www.w3.org/2000/svg\"\r\n    viewBox=\"0 0 20 20\"\r\n    fill=\"currentColor\"\r\n  >\r\n    <path d=\"M7 9a2 2 0 012-2h6a2 2 0 012 2v6a2 2 0 01-2 2H9a2 2 0 01-2-2V9z\" />\r\n    <path d=\"M5 3a2 2 0 00-2 2v6a2 2 0 002 2V5h8a2 2 0 00-2-2H5z\" />\r\n  </svg>, 'Duplicate'\r\n);\r\n\r\nexport default Duplicate;\r\n","import createSvgIcon from '@material-ui/core/utils/createSvgIcon';\r\n\r\nconst Check = createSvgIcon(\r\n  <svg\r\n    xmlns=\"http://www.w3.org/2000/svg\"\r\n    viewBox=\"0 0 20 20\"\r\n    fill=\"currentColor\"\r\n  >\r\n    <path\r\n      fillRule=\"evenodd\"\r\n      d=\"M16.707 5.293a1 1 0 010 1.414l-8 8a1 1 0 01-1.414 0l-4-4a1 1 0 011.414-1.414L8 12.586l7.293-7.293a1 1 0 011.414 0z\"\r\n      clipRule=\"evenodd\"\r\n    />\r\n  </svg>, 'Check'\r\n);\r\n\r\nexport default Check;\r\n","import createSvgIcon from '@material-ui/core/utils/createSvgIcon';\r\n\r\nconst Template = createSvgIcon(\r\n  <svg\r\n    xmlns=\"http://www.w3.org/2000/svg\"\r\n    viewBox=\"0 0 20 20\"\r\n    fill=\"currentColor\"\r\n  >\r\n    <path d=\"M3 4a1 1 0 011-1h12a1 1 0 011 1v2a1 1 0 01-1 1H4a1 1 0 01-1-1V4zM3 10a1 1 0 011-1h6a1 1 0 011 1v6a1 1 0 01-1 1H4a1 1 0 01-1-1v-6zM14 9a1 1 0 00-1 1v6a1 1 0 001 1h2a1 1 0 001-1v-6a1 1 0 00-1-1h-2z\" />\r\n  </svg>, 'Template'\r\n);\r\n\r\nexport default Template;\r\n","import createSvgIcon from '@material-ui/core/utils/createSvgIcon';\r\n\r\nconst ChatAlt = createSvgIcon(\r\n  <svg\r\n    xmlns=\"http://www.w3.org/2000/svg\"\r\n    viewBox=\"0 0 20 20\"\r\n    fill=\"currentColor\"\r\n  >\r\n    <path\r\n      fillRule=\"evenodd\"\r\n      d=\"M18 5v8a2 2 0 01-2 2h-5l-5 4v-4H4a2 2 0 01-2-2V5a2 2 0 012-2h12a2 2 0 012 2zM7 8H5v2h2V8zm2 0h2v2H9V8zm6 0h-2v2h2V8z\"\r\n      clipRule=\"evenodd\"\r\n    />\r\n  </svg>, 'ChatAlt'\r\n);\r\n\r\nexport default ChatAlt;\r\n"],"sourceRoot":""}