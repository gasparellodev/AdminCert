{"version":3,"sources":["components/widgets/charts/Chart1.js","components/widgets/charts/Chart2.js","components/widgets/charts/Chart3.js","components/widgets/charts/Chart4.js","components/widgets/charts/Chart5.js","components/widgets/charts/Chart6.js","components/widgets/charts/Chart7.js","components/widgets/charts/Chart8.js","components/widgets/charts/Chart9.js","components/widgets/charts/Chart10.js","components/widgets/charts/Chart11.js","components/widgets/charts/Chart12.js","pages/browse/BrowseCharts.js","icons/ArrowRight.js","icons/DotsHorizontal.js","icons/Moon.js","icons/Sun.js","components/WidgetPreviewer.js","icons/InformationCircle.js"],"names":["Chart1","theme","useTheme","chartOptions","chart","background","toolbar","show","colors","dataLabels","enabled","grid","borderColor","palette","divider","yaxis","lines","legend","labels","text","secondary","plotOptions","bar","columnWidth","stroke","width","mode","xaxis","axisBorder","color","axisTicks","categories","style","Box","sx","backgroundColor","p","Card","CardHeader","title","CardContent","height","options","series","data","name","type","Chart2","stacked","horizontalAlign","position","markers","hover","size","undefined","sizeOffset","radius","shape","strokeColors","strokeWidth","curve","dashArray","lineCap","opposite","Chart3","radialBar","primary","fontFamily","typography","value","hollow","track","default","Container","maxWidth","Typography","align","component","variant","Chart4","fill","gradient","opacityFrom","opacityTo","shadeIntensity","stops","strokeDashArray","offsetY","formatter","offsetX","chartSeries","action","IconButton","DotsHorizontal","fontSize","Divider","Scrollbar","minWidth","Chart5","mounted","useMounted","useState","setData","getData","useCallback","current","prevData","newData","shift","push","setTimeout","min","max","random","Math","ceil","floor","pop","useEffect","setInterval","map","i","states","active","filter","disableTypography","alignItems","display","justifyContent","length","List","pathname","views","page","ListItem","ListItemText","primaryTypographyProps","Button","endIcon","ArrowRight","Chart6","alpha","px","dataPoints","Chart7","selectedSeries","setSelectedSeries","item","includes","Tooltip","InformationCircle","flexWrap","mr","Checkbox","checked","some","visibleItem","onChange","event","target","handleChange","borderRadius","ml","Chart8","light","warning","success","info","Chart9","opacity","paper","label","Chart10","flexGrow","numeral","format","category","IncrementalSales","horizontal","barHeight","distributed","tooltip","y","Chart12","subheader","Date","BrowseCharts","gtm","minHeight","py","mt","WidgetPreviewer","element","Chart11","createSvgIcon","xmlns","viewBox","fillRule","d","clipRule","Moon","Sun","props","other","settings","useSettings","selectedTheme","setSelectedTheme","createCustomTheme","mb","onClick","prevSelectedTheme","THEMES","LIGHT","DARK","ThemeProvider"],"mappings":"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","file":"static/js/46.00b5465e.chunk.js","sourcesContent":["import Chart from 'react-apexcharts';\nimport { Box, Card, CardContent, CardHeader } from '@material-ui/core';\nimport { useTheme } from '@material-ui/core/styles';\n\nconst Chart1 = () => {\n  const theme = useTheme();\n\n  const chartOptions = {\n    chart: {\n      background: 'transparent',\n      toolbar: {\n        show: false\n      }\n    },\n    colors: ['#13affe', '#fbab49'],\n    dataLabels: {\n      enabled: false\n    },\n    grid: {\n      borderColor: theme.palette.divider,\n      yaxis: {\n        lines: {\n          show: false\n        }\n      }\n    },\n    legend: {\n      labels: {\n        colors: theme.palette.text.secondary\n      },\n      show: true\n    },\n    plotOptions: {\n      bar: {\n        columnWidth: '40%'\n      }\n    },\n    stroke: {\n      colors: ['transparent'],\n      show: true,\n      width: 2\n    },\n    theme: {\n      mode: theme.palette.mode\n    },\n    xaxis: {\n      axisBorder: {\n        show: true,\n        color: theme.palette.divider\n      },\n      axisTicks: {\n        show: true,\n        color: theme.palette.divider\n      },\n      categories: ['Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat', 'Sun'],\n      labels: {\n        style: {\n          colors: theme.palette.text.secondary\n        }\n      }\n    },\n    yaxis: {\n      axisBorder: {\n        color: theme.palette.divider,\n        show: true\n      },\n      axisTicks: {\n        color: theme.palette.divider,\n        show: true\n      },\n      labels: {\n        style: {\n          colors: theme.palette.text.secondary\n        }\n      }\n    }\n  };\n\n  const chartSeries = [\n    {\n      data: [30, 40, 25, 50, 49, 21, 70, 51],\n      name: 'This week'\n    },\n    {\n      data: [23, 12, 54, 61, 32, 56, 81, 19],\n      name: 'Last week'\n    }\n  ];\n\n  return (\n    <Box\n      sx={{\n        backgroundColor: 'background.default',\n        p: 3\n      }}\n    >\n      <Card>\n        <CardHeader title=\"Sales\" />\n        <CardContent>\n          <Chart\n            height={300}\n            options={chartOptions}\n            series={chartSeries}\n            type=\"bar\"\n          />\n        </CardContent>\n      </Card>\n    </Box>\n  );\n};\n\nexport default Chart1;\n","import Chart from 'react-apexcharts';\nimport { Box, Card, CardContent, CardHeader } from '@material-ui/core';\nimport { useTheme } from '@material-ui/core/styles';\n\nconst Chart2 = () => {\n  const theme = useTheme();\n\n  const chartOptions = {\n    chart: {\n      background: 'transparent',\n      stacked: false,\n      toolbar: {\n        show: false\n      }\n    },\n    colors: ['#1f87e6', '#ff5c7c'],\n    dataLabels: {\n      enabled: false\n    },\n    grid: {\n      borderColor: theme.palette.divider,\n      yaxis: {\n        lines: {\n          show: false\n        }\n      }\n    },\n    legend: {\n      horizontalAlign: 'right',\n      labels: {\n        colors: theme.palette.text.secondary\n      },\n      position: 'top',\n      show: true\n    },\n    markers: {\n      hover: {\n        size: undefined,\n        sizeOffset: 2\n      },\n      radius: 2,\n      shape: 'circle',\n      size: 4,\n      strokeColors: ['#1f87e6', '#27c6db'],\n      strokeWidth: 0\n    },\n    stroke: {\n      curve: 'smooth',\n      dashArray: [0, 3],\n      lineCap: 'butt',\n      width: 3\n    },\n    theme: {\n      mode: theme.palette.mode\n    },\n    xaxis: {\n      axisBorder: {\n        color: theme.palette.divider\n      },\n      axisTicks: {\n        color: theme.palette.divider,\n        show: true\n      },\n      categories: [\n        '01 Jan',\n        '02 Jan',\n        '03 Jan',\n        '04 Jan',\n        '05 Jan',\n        '06 Jan',\n        '07 Jan',\n        '08 Jan',\n        '09 Jan',\n        '10 Jan',\n        '11 Jan',\n        '12 Jan'\n      ],\n      labels: {\n        style: {\n          colors: theme.palette.text.secondary\n        }\n      }\n    },\n    yaxis: [\n      {\n        axisBorder: {\n          color: theme.palette.divider,\n          show: true\n        },\n        axisTicks: {\n          color: theme.palette.divider,\n          show: true\n        },\n        labels: {\n          style: {\n            colors: theme.palette.text.secondary\n          }\n        }\n      },\n      {\n        axisTicks: {\n          color: theme.palette.divider,\n          show: true\n        },\n        axisBorder: {\n          color: theme.palette.divider,\n          show: true\n        },\n        labels: {\n          style: {\n            colors: theme.palette.text.secondary\n          }\n        },\n        opposite: true\n      }\n    ]\n  };\n\n  const chartSeries = [\n    {\n      data: [\n        3350,\n        1840,\n        2254,\n        5780,\n        9349,\n        5241,\n        2770,\n        2051,\n        3764,\n        2385,\n        5912,\n        8323\n      ],\n      name: 'Page Views'\n    },\n    {\n      data: [35, 41, 62, 42, 13, 18, 29, 37, 36, 51, 32, 35],\n      name: 'Session Duration'\n    }\n  ];\n\n  return (\n    <Box\n      sx={{\n        backgroundColor: 'background.default',\n        p: 3\n      }}\n    >\n      <Card>\n        <CardHeader title=\"Widget25\" />\n        <CardContent>\n          <Chart\n            height=\"300\"\n            options={chartOptions}\n            series={chartSeries}\n            type=\"line\"\n          />\n        </CardContent>\n      </Card>\n    </Box>\n  );\n};\n\nexport default Chart2;\n","import Chart from 'react-apexcharts';\nimport { Box, Card, CardContent, Container, Typography } from '@material-ui/core';\nimport { useTheme } from '@material-ui/core/styles';\n\nconst Chart3 = () => {\n  const theme = useTheme();\n\n  const chartOptions = {\n    chart: {\n      background: 'transparent',\n      stacked: false,\n      toolbar: {\n        show: false\n      }\n    },\n    colors: ['#27c6db'],\n    labels: ['System Health'],\n    plotOptions: {\n      radialBar: {\n        dataLabels: {\n          name: {\n            color: theme.palette.text.primary,\n            fontFamily: theme.typography.fontFamily\n          },\n          value: {\n            color: theme.palette.text.secondary\n          }\n        },\n        hollow: {\n          size: '60%'\n        },\n        track: {\n          background: theme.palette.background.default\n        }\n      }\n    },\n    theme: {\n      mode: theme.palette.mode\n    }\n  };\n\n  const chartSeries = [83];\n\n  return (\n    <Box\n      sx={{\n        backgroundColor: 'background.default',\n        p: 3\n      }}\n    >\n      <Container maxWidth=\"sm\">\n        <Card>\n          <CardContent>\n            <Chart\n              height=\"300\"\n              options={chartOptions}\n              series={chartSeries}\n              type=\"radialBar\"\n            />\n            <Typography\n              align=\"center\"\n              color=\"textSecondary\"\n              component=\"p\"\n              variant=\"caption\"\n            >\n              This shouldn&apos;t be bellow 80%\n            </Typography>\n          </CardContent>\n        </Card>\n      </Container>\n    </Box>\n  );\n};\n\nexport default Chart3;\n","import Chart from 'react-apexcharts';\nimport { Box, Card, CardContent, CardHeader, Divider, IconButton } from '@material-ui/core';\nimport { useTheme } from '@material-ui/core/styles';\nimport Scrollbar from '../../Scrollbar';\nimport DotsHorizontalIcon from '../../../icons/DotsHorizontal';\n\nconst data = {\n  series: [{ data: [10, 5, 11, 20, 13, 28, 18, 4, 13, 12, 13, 5] }],\n  categories: [\n    'Jan',\n    'Feb',\n    'Mar',\n    'Apr',\n    'May',\n    'Jun',\n    'Jul',\n    'Aug',\n    'Sep',\n    'Oct',\n    'Nov',\n    'Dec'\n  ]\n};\n\nconst Chart4 = () => {\n  const theme = useTheme();\n\n  const chartOptions = {\n    chart: {\n      background: 'transparent',\n      stacked: false,\n      toolbar: {\n        show: false\n      }\n    },\n    colors: ['#00ab57'],\n    dataLabels: {\n      enabled: false\n    },\n    fill: {\n      gradient: {\n        opacityFrom: 0.4,\n        opacityTo: 0.1,\n        shadeIntensity: 1,\n        stops: [0, 100],\n        type: 'vertical'\n      },\n      type: 'gradient'\n    },\n    grid: {\n      borderColor: theme.palette.divider,\n      strokeDashArray: 2\n    },\n    markers: {\n      size: 6,\n      strokeColors: theme.palette.background.default,\n      strokeWidth: 3\n    },\n    stroke: {\n      curve: 'smooth'\n    },\n    theme: {\n      mode: theme.palette.mode\n    },\n    xaxis: {\n      axisBorder: {\n        color: theme.palette.divider,\n        show: true\n      },\n      axisTicks: {\n        color: theme.palette.divider,\n        show: true\n      },\n      categories: data.categories,\n      labels: {\n        offsetY: 5,\n        style: {\n          colors: theme.palette.text.secondary\n        }\n      }\n    },\n    yaxis: {\n      labels: {\n        formatter: (value) => (value > 0 ? `${value}K` : value),\n        offsetX: -10,\n        style: {\n          colors: theme.palette.text.secondary\n        }\n      }\n    }\n  };\n\n  const chartSeries = data.series;\n\n  return (\n    <Box\n      sx={{\n        backgroundColor: 'background.default',\n        p: 3\n      }}\n    >\n      <Card>\n        <CardHeader\n          action={(\n            <IconButton>\n              <DotsHorizontalIcon fontSize=\"small\" />\n            </IconButton>\n          )}\n          title=\"Performance Over Time\"\n        />\n        <Divider />\n        <CardContent>\n          <Scrollbar>\n            <Box\n              sx={{\n                height: 375,\n                minWidth: 500,\n                position: 'relative'\n              }}\n            >\n              <Chart\n                height=\"350\"\n                options={chartOptions}\n                series={chartSeries}\n                type=\"area\"\n              />\n            </Box>\n          </Scrollbar>\n        </CardContent>\n      </Card>\n    </Box>\n  );\n};\n\nexport default Chart4;\n","import { useState, useEffect, useCallback } from 'react';\nimport Chart from 'react-apexcharts';\nimport {\n  Box,\n  Button,\n  Card,\n  CardHeader,\n  Container,\n  List,\n  ListItem,\n  ListItemText,\n  Typography\n} from '@material-ui/core';\nimport { useTheme } from '@material-ui/core/styles';\nimport useMounted from '../../../hooks/useMounted';\nimport ArrowRightIcon from '../../../icons/ArrowRight';\n\nconst getRandomInt = (min, max) => {\n  min = Math.ceil(min);\n  max = Math.floor(max);\n\n  return Math.floor(Math.random() * (max - min + 1)) + min;\n};\n\nconst Chart5 = () => {\n  const mounted = useMounted();\n  const theme = useTheme();\n  const [data, setData] = useState([\n    163,\n    166,\n    161,\n    159,\n    99,\n    163,\n    173,\n    166,\n    167,\n    183,\n    176,\n    172\n  ]);\n\n  const getData = useCallback(() => {\n    if (mounted.current) {\n      setData((prevData) => {\n        const newData = [...prevData];\n\n        newData.shift();\n        newData.push(0);\n\n        return newData;\n      });\n    }\n\n    setTimeout(() => {\n      if (mounted.current) {\n        setData((prevData) => {\n          const newData = [...prevData];\n          const random = getRandomInt(100, 200);\n\n          newData.pop();\n          newData.push(random);\n\n          return newData;\n        });\n      }\n    }, 500);\n  }, [mounted]);\n\n  useEffect(() => {\n    setInterval(() => getData(), 2000);\n  }, [getData]);\n\n  const labels = data.map((value, i) => i);\n\n  const pages = [\n    {\n      pathname: '/projects',\n      views: '24'\n    },\n    {\n      pathname: '/chat',\n      views: '21'\n    },\n    {\n      pathname: '/cart',\n      views: '15'\n    },\n    {\n      pathname: '/checkout',\n      views: '8'\n    }\n  ];\n\n  const chartOptions = {\n    chart: {\n      background: 'transparent',\n      stacked: false,\n      toolbar: {\n        show: false\n      }\n    },\n    colors: ['#688dff'],\n    dataLabels: {\n      enabled: false\n    },\n    grid: {\n      show: false\n    },\n    legend: {\n      show: false\n    },\n    plotOptions: {\n      bar: {\n        columnWidth: '40'\n      }\n    },\n    states: {\n      active: {\n        filter: {\n          type: 'none'\n        }\n      },\n      hover: {\n        filter: {\n          type: 'none'\n        }\n      }\n    },\n    stroke: {\n      colors: ['transparent'],\n      show: true,\n      width: 2\n    },\n    theme: {\n      mode: theme.palette.mode\n    },\n    xaxis: {\n      axisBorder: {\n        show: false\n      },\n      axisTicks: {\n        show: false\n      },\n      categories: labels,\n      labels: {\n        show: false\n      }\n    },\n    yaxis: {\n      labels: {\n        show: false\n      }\n    }\n  };\n\n  const chartSeries = [{ data }];\n\n  return (\n    <Box\n      sx={{\n        backgroundColor: 'background.default',\n        p: 3\n      }}\n    >\n      <Container maxWidth=\"sm\">\n        <Card>\n          <CardHeader\n            disableTypography\n            title={(\n              <Box\n                sx={{\n                  alignItems: 'center',\n                  display: 'flex',\n                  justifyContent: 'space-between'\n                }}\n              >\n                <div>\n                  <Typography\n                    color=\"textPrimary\"\n                    variant=\"h6\"\n                  >\n                    Active users\n                  </Typography>\n                  <Typography\n                    color=\"textSecondary\"\n                    variant=\"body2\"\n                  >\n                    Page views per second\n                  </Typography>\n                </div>\n                <Typography\n                  color=\"textPrimary\"\n                  variant=\"h6\"\n                >\n                  {data[data.length - 1] === 0\n                    ? data[data.length - 2]\n                    : data[data.length - 1]}\n                </Typography>\n              </Box>\n            )}\n          />\n          <Chart\n            height=\"200\"\n            options={chartOptions}\n            series={chartSeries}\n            type=\"bar\"\n          />\n          <List>\n            {pages.map((page) => (\n              <ListItem\n                divider\n                key={page.pathname}\n              >\n                <ListItemText\n                  primary={page.pathname}\n                  primaryTypographyProps={{\n                    color: 'textSecondary',\n                    variant: 'body2'\n                  }}\n                />\n                <Typography\n                  color=\"textPrimary\"\n                  variant=\"subtitle2\"\n                >\n                  {page.views}\n                </Typography>\n              </ListItem>\n            ))}\n          </List>\n          <Box\n            sx={{\n              display: 'flex',\n              justifyContent: 'flex-end',\n              p: 2\n            }}\n          >\n            <Button\n              color=\"primary\"\n              endIcon={<ArrowRightIcon fontSize=\"small\" />}\n              size=\"small\"\n              variant=\"text\"\n            >\n              See All\n            </Button>\n          </Box>\n        </Card>\n      </Container>\n    </Box>\n  );\n};\n\nexport default Chart5;\n","import Chart from 'react-apexcharts';\nimport { Box, Card, CardHeader, IconButton } from '@material-ui/core';\nimport { alpha, useTheme } from '@material-ui/core/styles';\nimport Scrollbar from '../../Scrollbar';\nimport DotsHorizontalIcon from '../../../icons/DotsHorizontal';\n\nconst data = {\n  series: [\n    { data: [18, 16, 5, 8, 3, 14, 14, 16, 17, 19, 18, 20] },\n    { data: [12, 11, 4, 6, 2, 9, 9, 10, 11, 12, 13, 13] }\n  ],\n  categories: [\n    'Jan',\n    'Feb',\n    'Mar',\n    'Apr',\n    'May',\n    'Jun',\n    'Jul',\n    'Aug',\n    'Sep',\n    'Oct',\n    'Nov',\n    'Dec'\n  ]\n};\n\nconst Chart6 = () => {\n  const theme = useTheme();\n\n  const chartOptions = {\n    chart: {\n      background: 'transparent',\n      stacked: false,\n      toolbar: {\n        show: false\n      }\n    },\n    colors: ['#00ab57', alpha('#00ab57', 0.25)],\n    dataLabels: {\n      enabled: false\n    },\n    grid: {\n      borderColor: theme.palette.divider,\n      strokeDashArray: 2\n    },\n    states: {\n      active: {\n        filter: {\n          type: 'none'\n        }\n      },\n      hover: {\n        filter: {\n          type: 'none'\n        }\n      }\n    },\n    legend: {\n      show: false\n    },\n    plotOptions: {\n      bar: {\n        columnWidth: '20px'\n      }\n    },\n    stroke: {\n      colors: ['transparent'],\n      show: true,\n      width: 2\n    },\n    theme: {\n      mode: theme.palette.mode\n    },\n    xaxis: {\n      axisBorder: {\n        color: theme.palette.divider,\n        show: true\n      },\n      axisTicks: {\n        color: theme.palette.divider,\n        show: true\n      },\n      categories: data.categories,\n      labels: {\n        offsetY: 5,\n        style: {\n          colors: theme.palette.text.secondary\n        }\n      }\n    },\n    yaxis: {\n      labels: {\n        formatter: (value) => (value > 0 ? `${value}K` : value),\n        offsetX: -10,\n        style: {\n          colors: theme.palette.text.secondary\n        }\n      }\n    }\n  };\n\n  const chartSeries = data.series;\n\n  return (\n    <Box\n      sx={{\n        backgroundColor: 'background.default',\n        p: 3\n      }}\n    >\n      <Card>\n        <CardHeader\n          action={(\n            <IconButton>\n              <DotsHorizontalIcon fontSize=\"small\" />\n            </IconButton>\n          )}\n          title=\"Financial Stats\"\n        />\n        <Scrollbar>\n          <Box\n            sx={{\n              minWidth: 700,\n              px: 2\n            }}\n          >\n            <Chart\n              height=\"375\"\n              options={chartOptions}\n              series={chartSeries}\n              type=\"bar\"\n            />\n          </Box>\n        </Scrollbar>\n      </Card>\n    </Box>\n  );\n};\n\nexport default Chart6;\n","import { useState } from 'react';\nimport Chart from 'react-apexcharts';\nimport {\n  Box,\n  Card,\n  CardContent,\n  CardHeader,\n  Checkbox,\n  Tooltip,\n  Typography\n} from '@material-ui/core';\nimport { useTheme } from '@material-ui/core/styles';\nimport InformationCircleIcon from '../../../icons/InformationCircle';\n\nconst data = {\n  series: [\n    {\n      color: '#4CAF50',\n      data: [\n        3350,\n        1840,\n        2254,\n        5780,\n        9349,\n        5241,\n        2770,\n        2051,\n        3764,\n        2385,\n        5912,\n        8323\n      ],\n      name: 'Organic'\n    },\n    {\n      color: '#FF9800',\n      data: [35, 41, 62, 42, 13, 18, 29, 37, 36, 51, 32, 35],\n      name: 'Referral'\n    },\n    {\n      color: '#F44336',\n      data: [100, 122, 50, 300, 250, 400, 312, 200, 10, 60, 90, 400],\n      name: 'Social Media'\n    }\n  ],\n  xaxis: {\n    dataPoints: [\n      '01 Jan',\n      '02 Jan',\n      '03 Jan',\n      '04 Jan',\n      '05 Jan',\n      '06 Jan',\n      '07 Jan',\n      '08 Jan',\n      '09 Jan',\n      '10 Jan',\n      '11 Jan',\n      '12 Jan'\n    ]\n  }\n};\n\nconst Chart7 = () => {\n  const theme = useTheme();\n  const [selectedSeries, setSelectedSeries] = useState([\n    'Organic',\n    'Referral',\n    'Social Media'\n  ]);\n\n  const handleChange = (event, name) => {\n    if (!event.target.checked) {\n      setSelectedSeries(selectedSeries.filter((item) => item !== name));\n    } else {\n      setSelectedSeries([...selectedSeries, name]);\n    }\n  };\n\n  const chartSeries = data.series.filter((item) => selectedSeries.includes(item.name));\n\n  const chartOptions = {\n    chart: {\n      background: 'transparent',\n      stacked: false,\n      toolbar: {\n        show: false\n      }\n    },\n    colors: chartSeries.map((item) => item.color),\n    dataLabels: {\n      enabled: false\n    },\n    grid: {\n      borderColor: theme.palette.divider,\n      yaxis: {\n        lines: {\n          show: false\n        }\n      }\n    },\n    legend: {\n      show: false\n    },\n    markers: {\n      hover: {\n        size: undefined,\n        sizeOffset: 2\n      },\n      radius: 2,\n      shape: 'circle',\n      size: 4,\n      strokeWidth: 0\n    },\n    stroke: {\n      curve: 'smooth',\n      lineCap: 'butt',\n      width: 3\n    },\n    theme: {\n      mode: theme.palette.mode\n    },\n    xaxis: {\n      axisBorder: {\n        color: theme.palette.divider\n      },\n      axisTicks: {\n        color: theme.palette.divider,\n        show: true\n      },\n      categories: data.xaxis.dataPoints,\n      labels: {\n        style: {\n          colors: theme.palette.text.secondary\n        }\n      }\n    },\n    yaxis: [\n      {\n        axisBorder: {\n          color: theme.palette.divider,\n          show: true\n        },\n        axisTicks: {\n          color: theme.palette.divider,\n          show: true\n        },\n        labels: {\n          style: {\n            colors: theme.palette.text.secondary\n          }\n        }\n      },\n      {\n        axisTicks: {\n          color: theme.palette.divider,\n          show: true\n        },\n        axisBorder: {\n          color: theme.palette.divider,\n          show: true\n        },\n        labels: {\n          style: {\n            colors: theme.palette.text.secondary\n          }\n        },\n        opposite: true\n      }\n    ]\n  };\n\n  return (\n    <Box\n      sx={{\n        backgroundColor: 'background.default',\n        p: 3\n      }}\n    >\n      <Card>\n        <CardHeader\n          disableTypography\n          title={(\n            <Box\n              sx={{\n                alignItems: 'center',\n                display: 'flex',\n                justifyContent: 'space-between'\n              }}\n            >\n              <Typography\n                color=\"textPrimary\"\n                variant=\"h6\"\n              >\n                Traffic Sources\n              </Typography>\n              <Tooltip title=\"Chart 7 Source by channel\">\n                <InformationCircleIcon fontSize=\"small\" />\n              </Tooltip>\n            </Box>\n          )}\n        />\n        <CardContent>\n          <Box\n            sx={{\n              alignItems: 'center',\n              display: 'flex',\n              flexWrap: 'wrap'\n            }}\n          >\n            {data.series.map((item) => (\n              <Box\n                key={item.name}\n                sx={{\n                  alignItems: 'center',\n                  display: 'flex',\n                  mr: 2\n                }}\n              >\n                <Checkbox\n                  checked={selectedSeries.some((visibleItem) => visibleItem === item.name)}\n                  color=\"primary\"\n                  onChange={(event) => handleChange(event, item.name)}\n                />\n                <Box\n                  sx={{\n                    backgroundColor: item.color,\n                    borderRadius: '50%',\n                    height: 8,\n                    ml: 1,\n                    mr: 2,\n                    width: 8\n                  }}\n                />\n                <Typography\n                  color=\"textPrimary\"\n                  variant=\"subtitle2\"\n                >\n                  {item.name}\n                </Typography>\n              </Box>\n            ))}\n          </Box>\n          <Chart\n            height=\"350\"\n            options={chartOptions}\n            series={chartSeries}\n            type=\"line\"\n          />\n        </CardContent>\n      </Card>\n    </Box>\n  );\n};\n\nexport default Chart7;\n","import Chart from 'react-apexcharts';\nimport {\n  Box,\n  Button,\n  Card,\n  CardContent,\n  CardHeader,\n  Container,\n  Tooltip,\n  Typography\n} from '@material-ui/core';\nimport { useTheme } from '@material-ui/core/styles';\nimport ArrowRightIcon from '../../../icons/ArrowRight';\nimport InformationCircleIcon from '../../../icons/InformationCircle';\n\nconst Chart8 = () => {\n  const theme = useTheme();\n\n  const chartOptions = {\n    chart: {\n      background: 'transparent',\n      stacked: false,\n      toolbar: {\n        show: false\n      }\n    },\n    colors: [\n      theme.palette.primary.light,\n      theme.palette.warning.light,\n      theme.palette.success.light,\n      theme.palette.info.light,\n      '#455a64'\n    ],\n    dataLabels: {\n      enabled: false\n    },\n    labels: ['Linkedin', 'Facebook', 'Instagram', 'Twitter', 'Other'],\n    legend: {\n      labels: {\n        colors: theme.palette.text.secondary\n      },\n      show: true\n    },\n    stroke: {\n      width: 0\n    },\n    theme: {\n      mode: theme.palette.mode\n    }\n  };\n\n  const chartSeries = [10, 10, 20, 10, 70];\n\n  return (\n    <Box\n      sx={{\n        backgroundColor: 'background.default',\n        p: 3\n      }}\n    >\n      <Container maxWidth=\"sm\">\n        <Card>\n          <CardHeader\n            disableTypography\n            title={(\n              <Box\n                sx={{\n                  alignItems: 'center',\n                  display: 'flex',\n                  justifyContent: 'space-between'\n                }}\n              >\n                <Typography\n                  color=\"textPrimary\"\n                  variant=\"h6\"\n                >\n                  Social Media Sources\n                </Typography>\n                <Tooltip title=\"Traffic by Social Media platforms\">\n                  <InformationCircleIcon fontSize=\"small\" />\n                </Tooltip>\n              </Box>\n            )}\n          />\n          <CardContent>\n            <Chart\n              height={300}\n              options={chartOptions}\n              series={chartSeries}\n              type=\"donut\"\n            />\n            <Box\n              sx={{\n                display: 'flex',\n                justifyContent: 'flex-end'\n              }}\n            >\n              <Button\n                color=\"primary\"\n                endIcon={<ArrowRightIcon fontSize=\"small\" />}\n                variant=\"text\"\n              >\n                See all\n              </Button>\n            </Box>\n          </CardContent>\n        </Card>\n      </Container>\n    </Box>\n  );\n};\n\nexport default Chart8;\n","import Chart from 'react-apexcharts';\nimport { Box, Card, CardContent, CardHeader } from '@material-ui/core';\nimport { useTheme } from '@material-ui/core/styles';\n\nconst Chart9 = () => {\n  const theme = useTheme();\n\n  const chartOptions = {\n    chart: {\n      background: 'transparent',\n      stacked: false,\n      toolbar: {\n        show: false\n      }\n    },\n    colors: ['#ffb547', '#7783DB'],\n    dataLabels: {\n      enabled: false\n    },\n    fill: {\n      type: 'solid',\n      opacity: 0\n    },\n    grid: {\n      borderColor: theme.palette.divider\n    },\n    markers: {\n      strokeColors: theme.palette.background.paper,\n      size: 6\n    },\n    stroke: {\n      curve: 'straight',\n      width: 2\n    },\n    theme: {\n      mode: theme.palette.mode\n    },\n    xaxis: {\n      axisBorder: {\n        color: theme.palette.divider,\n        show: true\n      },\n      axisTicks: {\n        color: theme.palette.divider,\n        show: true\n      },\n      categories: [\n        'Jan',\n        'Feb',\n        'Mar',\n        'Apr',\n        'May',\n        'Jun',\n        'Jul',\n        'Aug',\n        'Sep',\n        'Oct',\n        'Nov',\n        'Dec'\n      ]\n    }\n  };\n\n  const chartSeries = [\n    {\n      name: 'New Customers',\n      data: [31, 40, 28, 51, 42, 109, 100, 120, 80, 42, 90, 140]\n    },\n    {\n      name: 'Up/Cross-Selling',\n      data: [11, 32, 45, 32, 34, 52, 41, 80, 96, 140, 30, 100]\n    }\n  ];\n\n  return (\n    <Box\n      sx={{\n        backgroundColor: 'background.default',\n        p: 3\n      }}\n    >\n      <Card>\n        <CardHeader title=\"Sales Revenue\" />\n        <CardContent>\n          <Chart\n            height=\"360\"\n            options={chartOptions}\n            series={chartSeries}\n            type=\"area\"\n          />\n        </CardContent>\n      </Card>\n    </Box>\n  );\n};\n\nexport default Chart9;\n","import Chart from 'react-apexcharts';\nimport numeral from 'numeral';\nimport { Box, Card, CardContent, CardHeader, Container, Typography } from '@material-ui/core';\nimport { useTheme } from '@material-ui/core/styles';\n\nconst data = {\n  series: [\n    {\n      color: '#FFB547',\n      data: 14859,\n      label: 'Strategy'\n    },\n    {\n      color: '#7BC67E',\n      data: 35690,\n      label: 'Outsourcing'\n    },\n    {\n      color: '#7783DB',\n      data: 45120,\n      label: 'Marketing'\n    }\n  ]\n};\n\nconst Chart10 = () => {\n  const theme = useTheme();\n\n  const chartOptions = {\n    chart: {\n      background: 'transparent',\n      stacked: false,\n      toolbar: {\n        show: false\n      }\n    },\n    colors: data.series.map((item) => item.color),\n    dataLabels: {\n      enabled: false\n    },\n    labels: data.series.map((item) => item.label),\n    legend: {\n      show: false\n    },\n    stroke: {\n      colors: [theme.palette.background.paper],\n      width: 1\n    },\n    theme: {\n      mode: theme.palette.mode\n    }\n  };\n\n  const chartSeries = data.series.map((item) => item.data);\n\n  return (\n    <Box\n      sx={{\n        backgroundColor: 'background.default',\n        p: 3\n      }}\n    >\n      <Container maxWidth=\"md\">\n        <Card>\n          <CardHeader title=\"Cost Breakdown\" />\n          <CardContent>\n            <Chart\n              height=\"260\"\n              options={chartOptions}\n              series={chartSeries}\n              type=\"pie\"\n            />\n            {data.series.map((item) => (\n              <Box\n                key={item.label}\n                sx={{\n                  alignItems: 'center',\n                  display: 'flex',\n                  p: 1\n                }}\n              >\n                <Box\n                  sx={{\n                    backgroundColor: item.color,\n                    borderRadius: '50%',\n                    height: 8,\n                    width: 8\n                  }}\n                />\n                <Typography\n                  color=\"textPrimary\"\n                  sx={{ ml: 2 }}\n                  variant=\"subtitle2\"\n                >\n                  {item.label}\n                </Typography>\n                <Box sx={{ flexGrow: 1 }} />\n                <Typography\n                  color=\"textSecondary\"\n                  variant=\"subtitle2\"\n                >\n                  {numeral(item.data).format('$0,0.00')}\n                </Typography>\n              </Box>\n            ))}\n          </CardContent>\n        </Card>\n      </Container>\n    </Box>\n  );\n};\n\nexport default Chart10;\n","import numeral from 'numeral';\nimport Chart from 'react-apexcharts';\nimport { Box, Card, CardContent, CardHeader, Container, Typography } from '@material-ui/core';\nimport { useTheme } from '@material-ui/core/styles';\n\nconst data = {\n  series: [\n    {\n      color: '#7783DB',\n      category: 'Email',\n      data: 37530\n    },\n    {\n      color: '#7BC67E',\n      category: 'GDN',\n      data: 52717\n    },\n    {\n      color: '#FFB547',\n      category: 'Instagram',\n      data: 62935\n    },\n    {\n      color: '#F06191',\n      category: 'Facebook',\n      data: 90590\n    },\n    {\n      color: '#64B6F7',\n      category: 'Google Ads Search',\n      data: 13219\n    }\n  ]\n};\n\nconst IncrementalSales = () => {\n  const theme = useTheme();\n\n  const chartOptions = {\n    chart: {\n      background: 'transparent',\n      stacked: false,\n      toolbar: {\n        show: false\n      }\n    },\n    colors: data.series.map((item) => item.color),\n    dataLabels: {\n      enabled: false\n    },\n    grid: {\n      borderColor: theme.palette.divider,\n      yaxis: {\n        lines: {\n          show: false\n        }\n      }\n    },\n    legend: {\n      show: false\n    },\n    plotOptions: {\n      bar: {\n        horizontal: true,\n        barHeight: '45',\n        distributed: true\n      }\n    },\n    theme: {\n      mode: theme.palette.mode\n    },\n    tooltip: {\n      y: {\n        formatter: (value) => numeral(value).format('$0,0.00')\n      }\n    },\n    xaxis: {\n      axisBorder: {\n        color: theme.palette.divider,\n        show: true\n      },\n      axisTicks: {\n        color: theme.palette.divider,\n        show: true\n      },\n      categories: data.series.map((item) => item.category)\n    },\n    yaxis: {\n      labels: {\n        show: false\n      }\n    }\n  };\n\n  const chartSeries = [\n    {\n      data: data.series.map((item) => item.data),\n      name: 'Sales'\n    }\n  ];\n\n  return (\n    <Box\n      sx={{\n        backgroundColor: 'background.default',\n        p: 3\n      }}\n    >\n      <Container maxWidth=\"md\">\n        <Card>\n          <CardHeader title=\"Incremental Sales\" />\n          <CardContent>\n            {data.series.map((item) => (\n              <Box\n                key={item.category}\n                sx={{\n                  alignItems: 'center',\n                  display: 'flex',\n                  p: 1\n                }}\n              >\n                <Box\n                  sx={{\n                    backgroundColor: item.color,\n                    borderRadius: '50%',\n                    height: 8,\n                    width: 8\n                  }}\n                />\n                <Typography\n                  color=\"textPrimary\"\n                  sx={{ ml: 2 }}\n                  variant=\"subtitle2\"\n                >\n                  {item.category}\n                </Typography>\n              </Box>\n            ))}\n            <Chart\n              height=\"350\"\n              options={chartOptions}\n              series={chartSeries}\n              type=\"bar\"\n            />\n          </CardContent>\n        </Card>\n      </Container>\n    </Box>\n  );\n};\n\nexport default IncrementalSales;\n","import Chart from 'react-apexcharts';\nimport { format } from 'date-fns';\nimport { Box, Card, CardHeader, Typography } from '@material-ui/core';\nimport { useTheme } from '@material-ui/core/styles';\nimport Scrollbar from '../../Scrollbar';\n\nconst data = {\n  series: [\n    {\n      data: [12, 24, 36, 48, 60, 72, 84]\n    },\n    {\n      data: [12, 24, 36, 48, 60, 72, 84]\n    },\n    {\n      data: [12, 24, 36, 48, 60, 72, 84]\n    }\n  ],\n  categories: [\n    'Capital One',\n    'Ally Bank',\n    'ING',\n    'Ridgewood',\n    'BT Transilvania',\n    'CEC',\n    'CBC'\n  ]\n};\n\nconst Chart12 = () => {\n  const theme = useTheme();\n\n  const chartOptions = {\n    chart: {\n      background: 'transparent',\n      stacked: true,\n      toolbar: {\n        show: false\n      }\n    },\n    colors: ['#3C4693', '#5664D2', '#7783DB'],\n    dataLabels: {\n      enabled: false\n    },\n    grid: {\n      borderColor: theme.palette.divider,\n      xaxis: {\n        lines: {\n          show: true\n        }\n      },\n      yaxis: {\n        lines: {\n          show: true\n        }\n      }\n    },\n    states: {\n      active: {\n        filter: {\n          type: 'none'\n        }\n      },\n      hover: {\n        filter: {\n          type: 'none'\n        }\n      }\n    },\n    legend: {\n      show: false\n    },\n    stroke: {\n      colors: ['transparent'],\n      show: true,\n      width: 2\n    },\n    theme: {\n      mode: theme.palette.mode\n    },\n    xaxis: {\n      axisBorder: {\n        show: false\n      },\n      axisTicks: {\n        show: false\n      },\n      categories: data.categories,\n      labels: {\n        style: {\n          colors: theme.palette.text.secondary\n        }\n      }\n    },\n    yaxis: {\n      labels: {\n        offsetX: -12,\n        style: {\n          colors: theme.palette.text.secondary\n        }\n      }\n    }\n  };\n\n  const chartSeries = data.series;\n\n  return (\n    <Box\n      sx={{\n        backgroundColor: 'background.default',\n        p: 3\n      }}\n    >\n      <Card>\n        <CardHeader\n          subheader={(\n            <Typography\n              color=\"textSecondary\"\n              variant=\"body2\"\n            >\n              {format(new Date(), 'MMM yyyy')}\n            </Typography>\n          )}\n          title=\"Total Transactions\"\n        />\n        <Scrollbar>\n          <Box\n            sx={{\n              height: 336,\n              minWidth: 500,\n              px: 2\n            }}\n          >\n            <Chart\n              height=\"300\"\n              options={chartOptions}\n              series={chartSeries}\n              type=\"bar\"\n            />\n          </Box>\n        </Scrollbar>\n      </Card>\n    </Box>\n  );\n};\n\nexport default Chart12;\n","import { useEffect } from 'react';\nimport { Helmet } from 'react-helmet-async';\nimport { Box, Container } from '@material-ui/core';\nimport Chart1 from '../../components/widgets/charts/Chart1';\nimport Chart2 from '../../components/widgets/charts/Chart2';\nimport Chart3 from '../../components/widgets/charts/Chart3';\nimport Chart4 from '../../components/widgets/charts/Chart4';\nimport Chart5 from '../../components/widgets/charts/Chart5';\nimport Chart6 from '../../components/widgets/charts/Chart6';\nimport Chart7 from '../../components/widgets/charts/Chart7';\nimport Chart8 from '../../components/widgets/charts/Chart8';\nimport Chart9 from '../../components/widgets/charts/Chart9';\nimport Chart10 from '../../components/widgets/charts/Chart10';\nimport Chart11 from '../../components/widgets/charts/Chart11';\nimport Chart12 from '../../components/widgets/charts/Chart12';\nimport WidgetPreviewer from '../../components/WidgetPreviewer';\nimport gtm from '../../lib/gtm';\n\nconst BrowseCharts = () => {\n  useEffect(() => {\n    gtm.push({ event: 'page_view' });\n  }, []);\n\n  return (\n    <>\n      <Helmet>\n        <title>Browse: Charts | Material Kit Pro</title>\n      </Helmet>\n      <Box\n        sx={{\n          backgroundColor: 'background.paper',\n          minHeight: '100%',\n          py: 8\n        }}\n      >\n        <Container maxWidth=\"lg\">\n          <Box sx={{ mt: 3 }}>\n            <WidgetPreviewer\n              element={<Chart1 />}\n              name=\"Chart 1\"\n            />\n            <WidgetPreviewer\n              element={<Chart2 />}\n              name=\"Chart 2\"\n            />\n            <WidgetPreviewer\n              element={<Chart3 />}\n              name=\"Chart 3\"\n            />\n            <WidgetPreviewer\n              element={<Chart4 />}\n              name=\"Chart 4\"\n            />\n            <WidgetPreviewer\n              element={<Chart5 />}\n              name=\"Chart 5\"\n            />\n            <WidgetPreviewer\n              element={<Chart6 />}\n              name=\"Chart 6\"\n            />\n            <WidgetPreviewer\n              element={<Chart7 />}\n              name=\"Chart 7\"\n            />\n            <WidgetPreviewer\n              element={<Chart8 />}\n              name=\"Chart 8\"\n            />\n            <WidgetPreviewer\n              element={<Chart9 />}\n              name=\"Chart 9\"\n            />\n            <WidgetPreviewer\n              element={<Chart10 />}\n              name=\"Chart 10\"\n            />\n            <WidgetPreviewer\n              element={<Chart11 />}\n              name=\"Chart 11\"\n            />\n            <WidgetPreviewer\n              element={<Chart12 />}\n              name=\"Chart 12\"\n            />\n          </Box>\n        </Container>\n      </Box>\n    </>\n  );\n};\n\nexport default BrowseCharts;\n","import createSvgIcon from '@material-ui/core/utils/createSvgIcon';\n\nconst ArrowRight = createSvgIcon(\n  <svg\n    xmlns=\"http://www.w3.org/2000/svg\"\n    viewBox=\"0 0 20 20\"\n    fill=\"currentColor\"\n  >\n    <path\n      fillRule=\"evenodd\"\n      d=\"M10.293 3.293a1 1 0 011.414 0l6 6a1 1 0 010 1.414l-6 6a1 1 0 01-1.414-1.414L14.586 11H3a1 1 0 110-2h11.586l-4.293-4.293a1 1 0 010-1.414z\"\n      clipRule=\"evenodd\"\n    />\n  </svg>, 'ArrowRight'\n);\n\nexport default ArrowRight;\n","import createSvgIcon from '@material-ui/core/utils/createSvgIcon';\n\nconst DotsHorizontal = createSvgIcon(\n  <svg\n    xmlns=\"http://www.w3.org/2000/svg\"\n    viewBox=\"0 0 20 20\"\n    fill=\"currentColor\"\n  >\n    <path d=\"M6 10a2 2 0 11-4 0 2 2 0 014 0zM12 10a2 2 0 11-4 0 2 2 0 014 0zM16 12a2 2 0 100-4 2 2 0 000 4z\" />\n  </svg>, 'DotsHorizontal'\n);\n\nexport default DotsHorizontal;\n","import createSvgIcon from '@material-ui/core/utils/createSvgIcon';\n\nconst Moon = createSvgIcon(\n  <svg\n    xmlns=\"http://www.w3.org/2000/svg\"\n    viewBox=\"0 0 20 20\"\n    fill=\"currentColor\"\n  >\n    <path d=\"M17.293 13.293A8 8 0 016.707 2.707a8.001 8.001 0 1010.586 10.586z\" />\n  </svg>, 'Moon'\n);\n\nexport default Moon;\n","import createSvgIcon from '@material-ui/core/utils/createSvgIcon';\n\nconst Sun = createSvgIcon(\n  <svg\n    xmlns=\"http://www.w3.org/2000/svg\"\n    viewBox=\"0 0 20 20\"\n    fill=\"currentColor\"\n  >\n    <path\n      fillRule=\"evenodd\"\n      d=\"M10 2a1 1 0 011 1v1a1 1 0 11-2 0V3a1 1 0 011-1zm4 8a4 4 0 11-8 0 4 4 0 018 0zm-.464 4.95l.707.707a1 1 0 001.414-1.414l-.707-.707a1 1 0 00-1.414 1.414zm2.12-10.607a1 1 0 010 1.414l-.706.707a1 1 0 11-1.414-1.414l.707-.707a1 1 0 011.414 0zM17 11a1 1 0 100-2h-1a1 1 0 100 2h1zm-7 4a1 1 0 011 1v1a1 1 0 11-2 0v-1a1 1 0 011-1zM5.05 6.464A1 1 0 106.465 5.05l-.708-.707a1 1 0 00-1.414 1.414l.707.707zm1.414 8.486l-.707.707a1 1 0 01-1.414-1.414l.707-.707a1 1 0 011.414 1.414zM4 11a1 1 0 100-2H3a1 1 0 000 2h1z\"\n      clipRule=\"evenodd\"\n    />\n  </svg>, 'Sun'\n);\n\nexport default Sun;\n","import { useEffect, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { Card, CardHeader, Divider, IconButton, ThemeProvider } from '@material-ui/core';\nimport { THEMES } from '../constants';\nimport useSettings from '../hooks/useSettings';\nimport MoonIcon from '../icons/Moon';\nimport SunIcon from '../icons/Sun';\nimport { createCustomTheme } from '../theme';\n\nconst WidgetPreviewer = (props) => {\n  const { element, name, ...other } = props;\n  const { settings } = useSettings();\n  const [selectedTheme, setSelectedTheme] = useState(settings.theme);\n\n  useEffect(() => {\n    setSelectedTheme(settings.theme);\n  }, [settings.theme]);\n\n  const handleSwitch = () => setSelectedTheme((prevSelectedTheme) => {\n    if (prevSelectedTheme === THEMES.LIGHT) {\n      if (settings.theme === THEMES.LIGHT) {\n        return THEMES.DARK;\n      }\n\n      return settings.theme;\n    }\n\n    return THEMES.LIGHT;\n  });\n\n  const theme = createCustomTheme({\n    ...settings,\n    theme: selectedTheme\n  });\n\n  return (\n    <Card\n      variant=\"outlined\"\n      sx={{ mb: 8 }}\n      {...other}\n    >\n      <CardHeader\n        action={(\n          <IconButton onClick={handleSwitch}>\n            {selectedTheme === 'LIGHT'\n              ? <MoonIcon fontSize=\"small\" />\n              : <SunIcon fontSize=\"small\" />}\n          </IconButton>\n        )}\n        title={name}\n      />\n      <Divider />\n      <ThemeProvider theme={theme}>\n        {element}\n      </ThemeProvider>\n    </Card>\n  );\n};\n\nWidgetPreviewer.propTypes = {\n  element: PropTypes.node.isRequired,\n  name: PropTypes.string.isRequired\n};\n\nexport default WidgetPreviewer;\n","import createSvgIcon from '@material-ui/core/utils/createSvgIcon';\n\nconst InformationCircle = createSvgIcon(\n  <svg\n    xmlns=\"http://www.w3.org/2000/svg\"\n    viewBox=\"0 0 20 20\"\n    fill=\"currentColor\"\n  >\n    <path\n      fillRule=\"evenodd\"\n      d=\"M18 10a8 8 0 11-16 0 8 8 0 0116 0zm-7-4a1 1 0 11-2 0 1 1 0 012 0zM9 9a1 1 0 000 2v3a1 1 0 001 1h1a1 1 0 100-2v-3a1 1 0 00-1-1H9z\"\n      clipRule=\"evenodd\"\n    />\n  </svg>, 'InformationCircle'\n);\n\nexport default InformationCircle;\n"],"sourceRoot":""}