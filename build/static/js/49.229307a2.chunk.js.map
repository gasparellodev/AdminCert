{"version":3,"sources":["components/widgets/charts/Chart1.js","components/widgets/charts/Chart2.js","components/widgets/charts/Chart3.js","components/widgets/charts/Chart4.js","components/widgets/charts/Chart5.js","components/widgets/charts/Chart6.js","components/widgets/charts/Chart7.js","components/widgets/charts/Chart8.js","components/widgets/charts/Chart9.js","components/widgets/charts/Chart10.js","components/widgets/charts/Chart11.js","components/widgets/charts/Chart12.js","pages/browse/BrowseCharts.js","icons/ArrowRight.js","icons/DotsHorizontal.js","icons/Moon.js","icons/Sun.js","components/WidgetPreviewer.js","icons/InformationCircle.js"],"names":["Chart1","theme","useTheme","chartOptions","chart","background","toolbar","show","colors","dataLabels","enabled","grid","borderColor","palette","divider","yaxis","lines","legend","labels","text","secondary","plotOptions","bar","columnWidth","stroke","width","mode","xaxis","axisBorder","color","axisTicks","categories","style","Box","sx","backgroundColor","p","Card","CardHeader","title","CardContent","height","options","series","data","name","type","Chart2","stacked","horizontalAlign","position","markers","hover","size","undefined","sizeOffset","radius","shape","strokeColors","strokeWidth","curve","dashArray","lineCap","opposite","Chart3","radialBar","primary","fontFamily","typography","value","hollow","track","default","Container","maxWidth","Typography","align","component","variant","Chart4","fill","gradient","opacityFrom","opacityTo","shadeIntensity","stops","strokeDashArray","offsetY","formatter","offsetX","chartSeries","action","IconButton","DotsHorizontal","fontSize","Divider","Scrollbar","minWidth","Chart5","mounted","useMounted","useState","setData","getData","useCallback","current","prevData","newData","shift","push","setTimeout","min","max","random","Math","ceil","floor","pop","useEffect","setInterval","map","i","states","active","filter","disableTypography","alignItems","display","justifyContent","length","List","pathname","views","page","ListItem","ListItemText","primaryTypographyProps","Button","endIcon","ArrowRight","Chart6","alpha","px","dataPoints","Chart7","selectedSeries","setSelectedSeries","item","includes","Tooltip","InformationCircle","flexWrap","mr","Checkbox","checked","some","visibleItem","onChange","event","target","handleChange","borderRadius","ml","Chart8","light","warning","success","info","Chart9","opacity","paper","label","Chart10","flexGrow","numeral","format","category","IncrementalSales","horizontal","barHeight","distributed","tooltip","y","Chart12","subheader","Date","BrowseCharts","gtm","minHeight","py","mt","WidgetPreviewer","element","Chart11","createSvgIcon","xmlns","viewBox","fillRule","d","clipRule","Moon","Sun","props","other","settings","useSettings","selectedTheme","setSelectedTheme","createCustomTheme","mb","onClick","prevSelectedTheme","THEMES","LIGHT","DARK","ThemeProvider"],"mappings":"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","file":"static/js/49.229307a2.chunk.js","sourcesContent":["import Chart from 'react-apexcharts';\r\nimport { Box, Card, CardContent, CardHeader } from '@material-ui/core';\r\nimport { useTheme } from '@material-ui/core/styles';\r\n\r\nconst Chart1 = () => {\r\n  const theme = useTheme();\r\n\r\n  const chartOptions = {\r\n    chart: {\r\n      background: 'transparent',\r\n      toolbar: {\r\n        show: false\r\n      }\r\n    },\r\n    colors: ['#13affe', '#fbab49'],\r\n    dataLabels: {\r\n      enabled: false\r\n    },\r\n    grid: {\r\n      borderColor: theme.palette.divider,\r\n      yaxis: {\r\n        lines: {\r\n          show: false\r\n        }\r\n      }\r\n    },\r\n    legend: {\r\n      labels: {\r\n        colors: theme.palette.text.secondary\r\n      },\r\n      show: true\r\n    },\r\n    plotOptions: {\r\n      bar: {\r\n        columnWidth: '40%'\r\n      }\r\n    },\r\n    stroke: {\r\n      colors: ['transparent'],\r\n      show: true,\r\n      width: 2\r\n    },\r\n    theme: {\r\n      mode: theme.palette.mode\r\n    },\r\n    xaxis: {\r\n      axisBorder: {\r\n        show: true,\r\n        color: theme.palette.divider\r\n      },\r\n      axisTicks: {\r\n        show: true,\r\n        color: theme.palette.divider\r\n      },\r\n      categories: ['Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat', 'Sun'],\r\n      labels: {\r\n        style: {\r\n          colors: theme.palette.text.secondary\r\n        }\r\n      }\r\n    },\r\n    yaxis: {\r\n      axisBorder: {\r\n        color: theme.palette.divider,\r\n        show: true\r\n      },\r\n      axisTicks: {\r\n        color: theme.palette.divider,\r\n        show: true\r\n      },\r\n      labels: {\r\n        style: {\r\n          colors: theme.palette.text.secondary\r\n        }\r\n      }\r\n    }\r\n  };\r\n\r\n  const chartSeries = [\r\n    {\r\n      data: [30, 40, 25, 50, 49, 21, 70, 51],\r\n      name: 'This week'\r\n    },\r\n    {\r\n      data: [23, 12, 54, 61, 32, 56, 81, 19],\r\n      name: 'Last week'\r\n    }\r\n  ];\r\n\r\n  return (\r\n    <Box\r\n      sx={{\r\n        backgroundColor: 'background.default',\r\n        p: 3\r\n      }}\r\n    >\r\n      <Card>\r\n        <CardHeader title=\"Sales\" />\r\n        <CardContent>\r\n          <Chart\r\n            height={300}\r\n            options={chartOptions}\r\n            series={chartSeries}\r\n            type=\"bar\"\r\n          />\r\n        </CardContent>\r\n      </Card>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default Chart1;\r\n","import Chart from 'react-apexcharts';\r\nimport { Box, Card, CardContent, CardHeader } from '@material-ui/core';\r\nimport { useTheme } from '@material-ui/core/styles';\r\n\r\nconst Chart2 = () => {\r\n  const theme = useTheme();\r\n\r\n  const chartOptions = {\r\n    chart: {\r\n      background: 'transparent',\r\n      stacked: false,\r\n      toolbar: {\r\n        show: false\r\n      }\r\n    },\r\n    colors: ['#1f87e6', '#ff5c7c'],\r\n    dataLabels: {\r\n      enabled: false\r\n    },\r\n    grid: {\r\n      borderColor: theme.palette.divider,\r\n      yaxis: {\r\n        lines: {\r\n          show: false\r\n        }\r\n      }\r\n    },\r\n    legend: {\r\n      horizontalAlign: 'right',\r\n      labels: {\r\n        colors: theme.palette.text.secondary\r\n      },\r\n      position: 'top',\r\n      show: true\r\n    },\r\n    markers: {\r\n      hover: {\r\n        size: undefined,\r\n        sizeOffset: 2\r\n      },\r\n      radius: 2,\r\n      shape: 'circle',\r\n      size: 4,\r\n      strokeColors: ['#1f87e6', '#27c6db'],\r\n      strokeWidth: 0\r\n    },\r\n    stroke: {\r\n      curve: 'smooth',\r\n      dashArray: [0, 3],\r\n      lineCap: 'butt',\r\n      width: 3\r\n    },\r\n    theme: {\r\n      mode: theme.palette.mode\r\n    },\r\n    xaxis: {\r\n      axisBorder: {\r\n        color: theme.palette.divider\r\n      },\r\n      axisTicks: {\r\n        color: theme.palette.divider,\r\n        show: true\r\n      },\r\n      categories: [\r\n        '01 Jan',\r\n        '02 Jan',\r\n        '03 Jan',\r\n        '04 Jan',\r\n        '05 Jan',\r\n        '06 Jan',\r\n        '07 Jan',\r\n        '08 Jan',\r\n        '09 Jan',\r\n        '10 Jan',\r\n        '11 Jan',\r\n        '12 Jan'\r\n      ],\r\n      labels: {\r\n        style: {\r\n          colors: theme.palette.text.secondary\r\n        }\r\n      }\r\n    },\r\n    yaxis: [\r\n      {\r\n        axisBorder: {\r\n          color: theme.palette.divider,\r\n          show: true\r\n        },\r\n        axisTicks: {\r\n          color: theme.palette.divider,\r\n          show: true\r\n        },\r\n        labels: {\r\n          style: {\r\n            colors: theme.palette.text.secondary\r\n          }\r\n        }\r\n      },\r\n      {\r\n        axisTicks: {\r\n          color: theme.palette.divider,\r\n          show: true\r\n        },\r\n        axisBorder: {\r\n          color: theme.palette.divider,\r\n          show: true\r\n        },\r\n        labels: {\r\n          style: {\r\n            colors: theme.palette.text.secondary\r\n          }\r\n        },\r\n        opposite: true\r\n      }\r\n    ]\r\n  };\r\n\r\n  const chartSeries = [\r\n    {\r\n      data: [\r\n        3350,\r\n        1840,\r\n        2254,\r\n        5780,\r\n        9349,\r\n        5241,\r\n        2770,\r\n        2051,\r\n        3764,\r\n        2385,\r\n        5912,\r\n        8323\r\n      ],\r\n      name: 'Page Views'\r\n    },\r\n    {\r\n      data: [35, 41, 62, 42, 13, 18, 29, 37, 36, 51, 32, 35],\r\n      name: 'Session Duration'\r\n    }\r\n  ];\r\n\r\n  return (\r\n    <Box\r\n      sx={{\r\n        backgroundColor: 'background.default',\r\n        p: 3\r\n      }}\r\n    >\r\n      <Card>\r\n        <CardHeader title=\"Widget25\" />\r\n        <CardContent>\r\n          <Chart\r\n            height=\"300\"\r\n            options={chartOptions}\r\n            series={chartSeries}\r\n            type=\"line\"\r\n          />\r\n        </CardContent>\r\n      </Card>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default Chart2;\r\n","import Chart from 'react-apexcharts';\r\nimport { Box, Card, CardContent, Container, Typography } from '@material-ui/core';\r\nimport { useTheme } from '@material-ui/core/styles';\r\n\r\nconst Chart3 = () => {\r\n  const theme = useTheme();\r\n\r\n  const chartOptions = {\r\n    chart: {\r\n      background: 'transparent',\r\n      stacked: false,\r\n      toolbar: {\r\n        show: false\r\n      }\r\n    },\r\n    colors: ['#27c6db'],\r\n    labels: ['System Health'],\r\n    plotOptions: {\r\n      radialBar: {\r\n        dataLabels: {\r\n          name: {\r\n            color: theme.palette.text.primary,\r\n            fontFamily: theme.typography.fontFamily\r\n          },\r\n          value: {\r\n            color: theme.palette.text.secondary\r\n          }\r\n        },\r\n        hollow: {\r\n          size: '60%'\r\n        },\r\n        track: {\r\n          background: theme.palette.background.default\r\n        }\r\n      }\r\n    },\r\n    theme: {\r\n      mode: theme.palette.mode\r\n    }\r\n  };\r\n\r\n  const chartSeries = [83];\r\n\r\n  return (\r\n    <Box\r\n      sx={{\r\n        backgroundColor: 'background.default',\r\n        p: 3\r\n      }}\r\n    >\r\n      <Container maxWidth=\"sm\">\r\n        <Card>\r\n          <CardContent>\r\n            <Chart\r\n              height=\"300\"\r\n              options={chartOptions}\r\n              series={chartSeries}\r\n              type=\"radialBar\"\r\n            />\r\n            <Typography\r\n              align=\"center\"\r\n              color=\"textSecondary\"\r\n              component=\"p\"\r\n              variant=\"caption\"\r\n            >\r\n              This shouldn&apos;t be bellow 80%\r\n            </Typography>\r\n          </CardContent>\r\n        </Card>\r\n      </Container>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default Chart3;\r\n","import Chart from 'react-apexcharts';\r\nimport { Box, Card, CardContent, CardHeader, Divider, IconButton } from '@material-ui/core';\r\nimport { useTheme } from '@material-ui/core/styles';\r\nimport Scrollbar from '../../Scrollbar';\r\nimport DotsHorizontalIcon from '../../../icons/DotsHorizontal';\r\n\r\nconst data = {\r\n  series: [{ data: [10, 5, 11, 20, 13, 28, 18, 4, 13, 12, 13, 5] }],\r\n  categories: [\r\n    'Jan',\r\n    'Feb',\r\n    'Mar',\r\n    'Apr',\r\n    'May',\r\n    'Jun',\r\n    'Jul',\r\n    'Aug',\r\n    'Sep',\r\n    'Oct',\r\n    'Nov',\r\n    'Dec'\r\n  ]\r\n};\r\n\r\nconst Chart4 = () => {\r\n  const theme = useTheme();\r\n\r\n  const chartOptions = {\r\n    chart: {\r\n      background: 'transparent',\r\n      stacked: false,\r\n      toolbar: {\r\n        show: false\r\n      }\r\n    },\r\n    colors: ['#00ab57'],\r\n    dataLabels: {\r\n      enabled: false\r\n    },\r\n    fill: {\r\n      gradient: {\r\n        opacityFrom: 0.4,\r\n        opacityTo: 0.1,\r\n        shadeIntensity: 1,\r\n        stops: [0, 100],\r\n        type: 'vertical'\r\n      },\r\n      type: 'gradient'\r\n    },\r\n    grid: {\r\n      borderColor: theme.palette.divider,\r\n      strokeDashArray: 2\r\n    },\r\n    markers: {\r\n      size: 6,\r\n      strokeColors: theme.palette.background.default,\r\n      strokeWidth: 3\r\n    },\r\n    stroke: {\r\n      curve: 'smooth'\r\n    },\r\n    theme: {\r\n      mode: theme.palette.mode\r\n    },\r\n    xaxis: {\r\n      axisBorder: {\r\n        color: theme.palette.divider,\r\n        show: true\r\n      },\r\n      axisTicks: {\r\n        color: theme.palette.divider,\r\n        show: true\r\n      },\r\n      categories: data.categories,\r\n      labels: {\r\n        offsetY: 5,\r\n        style: {\r\n          colors: theme.palette.text.secondary\r\n        }\r\n      }\r\n    },\r\n    yaxis: {\r\n      labels: {\r\n        formatter: (value) => (value > 0 ? `${value}K` : value),\r\n        offsetX: -10,\r\n        style: {\r\n          colors: theme.palette.text.secondary\r\n        }\r\n      }\r\n    }\r\n  };\r\n\r\n  const chartSeries = data.series;\r\n\r\n  return (\r\n    <Box\r\n      sx={{\r\n        backgroundColor: 'background.default',\r\n        p: 3\r\n      }}\r\n    >\r\n      <Card>\r\n        <CardHeader\r\n          action={(\r\n            <IconButton>\r\n              <DotsHorizontalIcon fontSize=\"small\" />\r\n            </IconButton>\r\n          )}\r\n          title=\"Performance Over Time\"\r\n        />\r\n        <Divider />\r\n        <CardContent>\r\n          <Scrollbar>\r\n            <Box\r\n              sx={{\r\n                height: 375,\r\n                minWidth: 500,\r\n                position: 'relative'\r\n              }}\r\n            >\r\n              <Chart\r\n                height=\"350\"\r\n                options={chartOptions}\r\n                series={chartSeries}\r\n                type=\"area\"\r\n              />\r\n            </Box>\r\n          </Scrollbar>\r\n        </CardContent>\r\n      </Card>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default Chart4;\r\n","import { useState, useEffect, useCallback } from 'react';\r\nimport Chart from 'react-apexcharts';\r\nimport {\r\n  Box,\r\n  Button,\r\n  Card,\r\n  CardHeader,\r\n  Container,\r\n  List,\r\n  ListItem,\r\n  ListItemText,\r\n  Typography\r\n} from '@material-ui/core';\r\nimport { useTheme } from '@material-ui/core/styles';\r\nimport useMounted from '../../../hooks/useMounted';\r\nimport ArrowRightIcon from '../../../icons/ArrowRight';\r\n\r\nconst getRandomInt = (min, max) => {\r\n  min = Math.ceil(min);\r\n  max = Math.floor(max);\r\n\r\n  return Math.floor(Math.random() * (max - min + 1)) + min;\r\n};\r\n\r\nconst Chart5 = () => {\r\n  const mounted = useMounted();\r\n  const theme = useTheme();\r\n  const [data, setData] = useState([\r\n    163,\r\n    166,\r\n    161,\r\n    159,\r\n    99,\r\n    163,\r\n    173,\r\n    166,\r\n    167,\r\n    183,\r\n    176,\r\n    172\r\n  ]);\r\n\r\n  const getData = useCallback(() => {\r\n    if (mounted.current) {\r\n      setData((prevData) => {\r\n        const newData = [...prevData];\r\n\r\n        newData.shift();\r\n        newData.push(0);\r\n\r\n        return newData;\r\n      });\r\n    }\r\n\r\n    setTimeout(() => {\r\n      if (mounted.current) {\r\n        setData((prevData) => {\r\n          const newData = [...prevData];\r\n          const random = getRandomInt(100, 200);\r\n\r\n          newData.pop();\r\n          newData.push(random);\r\n\r\n          return newData;\r\n        });\r\n      }\r\n    }, 500);\r\n  }, [mounted]);\r\n\r\n  useEffect(() => {\r\n    setInterval(() => getData(), 2000);\r\n  }, [getData]);\r\n\r\n  const labels = data.map((value, i) => i);\r\n\r\n  const pages = [\r\n    {\r\n      pathname: '/projects',\r\n      views: '24'\r\n    },\r\n    {\r\n      pathname: '/chat',\r\n      views: '21'\r\n    },\r\n    {\r\n      pathname: '/cart',\r\n      views: '15'\r\n    },\r\n    {\r\n      pathname: '/checkout',\r\n      views: '8'\r\n    }\r\n  ];\r\n\r\n  const chartOptions = {\r\n    chart: {\r\n      background: 'transparent',\r\n      stacked: false,\r\n      toolbar: {\r\n        show: false\r\n      }\r\n    },\r\n    colors: ['#688dff'],\r\n    dataLabels: {\r\n      enabled: false\r\n    },\r\n    grid: {\r\n      show: false\r\n    },\r\n    legend: {\r\n      show: false\r\n    },\r\n    plotOptions: {\r\n      bar: {\r\n        columnWidth: '40'\r\n      }\r\n    },\r\n    states: {\r\n      active: {\r\n        filter: {\r\n          type: 'none'\r\n        }\r\n      },\r\n      hover: {\r\n        filter: {\r\n          type: 'none'\r\n        }\r\n      }\r\n    },\r\n    stroke: {\r\n      colors: ['transparent'],\r\n      show: true,\r\n      width: 2\r\n    },\r\n    theme: {\r\n      mode: theme.palette.mode\r\n    },\r\n    xaxis: {\r\n      axisBorder: {\r\n        show: false\r\n      },\r\n      axisTicks: {\r\n        show: false\r\n      },\r\n      categories: labels,\r\n      labels: {\r\n        show: false\r\n      }\r\n    },\r\n    yaxis: {\r\n      labels: {\r\n        show: false\r\n      }\r\n    }\r\n  };\r\n\r\n  const chartSeries = [{ data }];\r\n\r\n  return (\r\n    <Box\r\n      sx={{\r\n        backgroundColor: 'background.default',\r\n        p: 3\r\n      }}\r\n    >\r\n      <Container maxWidth=\"sm\">\r\n        <Card>\r\n          <CardHeader\r\n            disableTypography\r\n            title={(\r\n              <Box\r\n                sx={{\r\n                  alignItems: 'center',\r\n                  display: 'flex',\r\n                  justifyContent: 'space-between'\r\n                }}\r\n              >\r\n                <div>\r\n                  <Typography\r\n                    color=\"textPrimary\"\r\n                    variant=\"h6\"\r\n                  >\r\n                    Active users\r\n                  </Typography>\r\n                  <Typography\r\n                    color=\"textSecondary\"\r\n                    variant=\"body2\"\r\n                  >\r\n                    Page views per second\r\n                  </Typography>\r\n                </div>\r\n                <Typography\r\n                  color=\"textPrimary\"\r\n                  variant=\"h6\"\r\n                >\r\n                  {data[data.length - 1] === 0\r\n                    ? data[data.length - 2]\r\n                    : data[data.length - 1]}\r\n                </Typography>\r\n              </Box>\r\n            )}\r\n          />\r\n          <Chart\r\n            height=\"200\"\r\n            options={chartOptions}\r\n            series={chartSeries}\r\n            type=\"bar\"\r\n          />\r\n          <List>\r\n            {pages.map((page) => (\r\n              <ListItem\r\n                divider\r\n                key={page.pathname}\r\n              >\r\n                <ListItemText\r\n                  primary={page.pathname}\r\n                  primaryTypographyProps={{\r\n                    color: 'textSecondary',\r\n                    variant: 'body2'\r\n                  }}\r\n                />\r\n                <Typography\r\n                  color=\"textPrimary\"\r\n                  variant=\"subtitle2\"\r\n                >\r\n                  {page.views}\r\n                </Typography>\r\n              </ListItem>\r\n            ))}\r\n          </List>\r\n          <Box\r\n            sx={{\r\n              display: 'flex',\r\n              justifyContent: 'flex-end',\r\n              p: 2\r\n            }}\r\n          >\r\n            <Button\r\n              color=\"primary\"\r\n              endIcon={<ArrowRightIcon fontSize=\"small\" />}\r\n              size=\"small\"\r\n              variant=\"text\"\r\n            >\r\n              See All\r\n            </Button>\r\n          </Box>\r\n        </Card>\r\n      </Container>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default Chart5;\r\n","import Chart from 'react-apexcharts';\r\nimport { Box, Card, CardHeader, IconButton } from '@material-ui/core';\r\nimport { alpha, useTheme } from '@material-ui/core/styles';\r\nimport Scrollbar from '../../Scrollbar';\r\nimport DotsHorizontalIcon from '../../../icons/DotsHorizontal';\r\n\r\nconst data = {\r\n  series: [\r\n    { data: [18, 16, 5, 8, 3, 14, 14, 16, 17, 19, 18, 20] },\r\n    { data: [12, 11, 4, 6, 2, 9, 9, 10, 11, 12, 13, 13] }\r\n  ],\r\n  categories: [\r\n    'Jan',\r\n    'Feb',\r\n    'Mar',\r\n    'Apr',\r\n    'May',\r\n    'Jun',\r\n    'Jul',\r\n    'Aug',\r\n    'Sep',\r\n    'Oct',\r\n    'Nov',\r\n    'Dec'\r\n  ]\r\n};\r\n\r\nconst Chart6 = () => {\r\n  const theme = useTheme();\r\n\r\n  const chartOptions = {\r\n    chart: {\r\n      background: 'transparent',\r\n      stacked: false,\r\n      toolbar: {\r\n        show: false\r\n      }\r\n    },\r\n    colors: ['#00ab57', alpha('#00ab57', 0.25)],\r\n    dataLabels: {\r\n      enabled: false\r\n    },\r\n    grid: {\r\n      borderColor: theme.palette.divider,\r\n      strokeDashArray: 2\r\n    },\r\n    states: {\r\n      active: {\r\n        filter: {\r\n          type: 'none'\r\n        }\r\n      },\r\n      hover: {\r\n        filter: {\r\n          type: 'none'\r\n        }\r\n      }\r\n    },\r\n    legend: {\r\n      show: false\r\n    },\r\n    plotOptions: {\r\n      bar: {\r\n        columnWidth: '20px'\r\n      }\r\n    },\r\n    stroke: {\r\n      colors: ['transparent'],\r\n      show: true,\r\n      width: 2\r\n    },\r\n    theme: {\r\n      mode: theme.palette.mode\r\n    },\r\n    xaxis: {\r\n      axisBorder: {\r\n        color: theme.palette.divider,\r\n        show: true\r\n      },\r\n      axisTicks: {\r\n        color: theme.palette.divider,\r\n        show: true\r\n      },\r\n      categories: data.categories,\r\n      labels: {\r\n        offsetY: 5,\r\n        style: {\r\n          colors: theme.palette.text.secondary\r\n        }\r\n      }\r\n    },\r\n    yaxis: {\r\n      labels: {\r\n        formatter: (value) => (value > 0 ? `${value}K` : value),\r\n        offsetX: -10,\r\n        style: {\r\n          colors: theme.palette.text.secondary\r\n        }\r\n      }\r\n    }\r\n  };\r\n\r\n  const chartSeries = data.series;\r\n\r\n  return (\r\n    <Box\r\n      sx={{\r\n        backgroundColor: 'background.default',\r\n        p: 3\r\n      }}\r\n    >\r\n      <Card>\r\n        <CardHeader\r\n          action={(\r\n            <IconButton>\r\n              <DotsHorizontalIcon fontSize=\"small\" />\r\n            </IconButton>\r\n          )}\r\n          title=\"Financial Stats\"\r\n        />\r\n        <Scrollbar>\r\n          <Box\r\n            sx={{\r\n              minWidth: 700,\r\n              px: 2\r\n            }}\r\n          >\r\n            <Chart\r\n              height=\"375\"\r\n              options={chartOptions}\r\n              series={chartSeries}\r\n              type=\"bar\"\r\n            />\r\n          </Box>\r\n        </Scrollbar>\r\n      </Card>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default Chart6;\r\n","import { useState } from 'react';\r\nimport Chart from 'react-apexcharts';\r\nimport {\r\n  Box,\r\n  Card,\r\n  CardContent,\r\n  CardHeader,\r\n  Checkbox,\r\n  Tooltip,\r\n  Typography\r\n} from '@material-ui/core';\r\nimport { useTheme } from '@material-ui/core/styles';\r\nimport InformationCircleIcon from '../../../icons/InformationCircle';\r\n\r\nconst data = {\r\n  series: [\r\n    {\r\n      color: '#4CAF50',\r\n      data: [\r\n        3350,\r\n        1840,\r\n        2254,\r\n        5780,\r\n        9349,\r\n        5241,\r\n        2770,\r\n        2051,\r\n        3764,\r\n        2385,\r\n        5912,\r\n        8323\r\n      ],\r\n      name: 'Organic'\r\n    },\r\n    {\r\n      color: '#FF9800',\r\n      data: [35, 41, 62, 42, 13, 18, 29, 37, 36, 51, 32, 35],\r\n      name: 'Referral'\r\n    },\r\n    {\r\n      color: '#F44336',\r\n      data: [100, 122, 50, 300, 250, 400, 312, 200, 10, 60, 90, 400],\r\n      name: 'Social Media'\r\n    }\r\n  ],\r\n  xaxis: {\r\n    dataPoints: [\r\n      '01 Jan',\r\n      '02 Jan',\r\n      '03 Jan',\r\n      '04 Jan',\r\n      '05 Jan',\r\n      '06 Jan',\r\n      '07 Jan',\r\n      '08 Jan',\r\n      '09 Jan',\r\n      '10 Jan',\r\n      '11 Jan',\r\n      '12 Jan'\r\n    ]\r\n  }\r\n};\r\n\r\nconst Chart7 = () => {\r\n  const theme = useTheme();\r\n  const [selectedSeries, setSelectedSeries] = useState([\r\n    'Organic',\r\n    'Referral',\r\n    'Social Media'\r\n  ]);\r\n\r\n  const handleChange = (event, name) => {\r\n    if (!event.target.checked) {\r\n      setSelectedSeries(selectedSeries.filter((item) => item !== name));\r\n    } else {\r\n      setSelectedSeries([...selectedSeries, name]);\r\n    }\r\n  };\r\n\r\n  const chartSeries = data.series.filter((item) => selectedSeries.includes(item.name));\r\n\r\n  const chartOptions = {\r\n    chart: {\r\n      background: 'transparent',\r\n      stacked: false,\r\n      toolbar: {\r\n        show: false\r\n      }\r\n    },\r\n    colors: chartSeries.map((item) => item.color),\r\n    dataLabels: {\r\n      enabled: false\r\n    },\r\n    grid: {\r\n      borderColor: theme.palette.divider,\r\n      yaxis: {\r\n        lines: {\r\n          show: false\r\n        }\r\n      }\r\n    },\r\n    legend: {\r\n      show: false\r\n    },\r\n    markers: {\r\n      hover: {\r\n        size: undefined,\r\n        sizeOffset: 2\r\n      },\r\n      radius: 2,\r\n      shape: 'circle',\r\n      size: 4,\r\n      strokeWidth: 0\r\n    },\r\n    stroke: {\r\n      curve: 'smooth',\r\n      lineCap: 'butt',\r\n      width: 3\r\n    },\r\n    theme: {\r\n      mode: theme.palette.mode\r\n    },\r\n    xaxis: {\r\n      axisBorder: {\r\n        color: theme.palette.divider\r\n      },\r\n      axisTicks: {\r\n        color: theme.palette.divider,\r\n        show: true\r\n      },\r\n      categories: data.xaxis.dataPoints,\r\n      labels: {\r\n        style: {\r\n          colors: theme.palette.text.secondary\r\n        }\r\n      }\r\n    },\r\n    yaxis: [\r\n      {\r\n        axisBorder: {\r\n          color: theme.palette.divider,\r\n          show: true\r\n        },\r\n        axisTicks: {\r\n          color: theme.palette.divider,\r\n          show: true\r\n        },\r\n        labels: {\r\n          style: {\r\n            colors: theme.palette.text.secondary\r\n          }\r\n        }\r\n      },\r\n      {\r\n        axisTicks: {\r\n          color: theme.palette.divider,\r\n          show: true\r\n        },\r\n        axisBorder: {\r\n          color: theme.palette.divider,\r\n          show: true\r\n        },\r\n        labels: {\r\n          style: {\r\n            colors: theme.palette.text.secondary\r\n          }\r\n        },\r\n        opposite: true\r\n      }\r\n    ]\r\n  };\r\n\r\n  return (\r\n    <Box\r\n      sx={{\r\n        backgroundColor: 'background.default',\r\n        p: 3\r\n      }}\r\n    >\r\n      <Card>\r\n        <CardHeader\r\n          disableTypography\r\n          title={(\r\n            <Box\r\n              sx={{\r\n                alignItems: 'center',\r\n                display: 'flex',\r\n                justifyContent: 'space-between'\r\n              }}\r\n            >\r\n              <Typography\r\n                color=\"textPrimary\"\r\n                variant=\"h6\"\r\n              >\r\n                Traffic Sources\r\n              </Typography>\r\n              <Tooltip title=\"Chart 7 Source by channel\">\r\n                <InformationCircleIcon fontSize=\"small\" />\r\n              </Tooltip>\r\n            </Box>\r\n          )}\r\n        />\r\n        <CardContent>\r\n          <Box\r\n            sx={{\r\n              alignItems: 'center',\r\n              display: 'flex',\r\n              flexWrap: 'wrap'\r\n            }}\r\n          >\r\n            {data.series.map((item) => (\r\n              <Box\r\n                key={item.name}\r\n                sx={{\r\n                  alignItems: 'center',\r\n                  display: 'flex',\r\n                  mr: 2\r\n                }}\r\n              >\r\n                <Checkbox\r\n                  checked={selectedSeries.some((visibleItem) => visibleItem === item.name)}\r\n                  color=\"primary\"\r\n                  onChange={(event) => handleChange(event, item.name)}\r\n                />\r\n                <Box\r\n                  sx={{\r\n                    backgroundColor: item.color,\r\n                    borderRadius: '50%',\r\n                    height: 8,\r\n                    ml: 1,\r\n                    mr: 2,\r\n                    width: 8\r\n                  }}\r\n                />\r\n                <Typography\r\n                  color=\"textPrimary\"\r\n                  variant=\"subtitle2\"\r\n                >\r\n                  {item.name}\r\n                </Typography>\r\n              </Box>\r\n            ))}\r\n          </Box>\r\n          <Chart\r\n            height=\"350\"\r\n            options={chartOptions}\r\n            series={chartSeries}\r\n            type=\"line\"\r\n          />\r\n        </CardContent>\r\n      </Card>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default Chart7;\r\n","import Chart from 'react-apexcharts';\r\nimport {\r\n  Box,\r\n  Button,\r\n  Card,\r\n  CardContent,\r\n  CardHeader,\r\n  Container,\r\n  Tooltip,\r\n  Typography\r\n} from '@material-ui/core';\r\nimport { useTheme } from '@material-ui/core/styles';\r\nimport ArrowRightIcon from '../../../icons/ArrowRight';\r\nimport InformationCircleIcon from '../../../icons/InformationCircle';\r\n\r\nconst Chart8 = () => {\r\n  const theme = useTheme();\r\n\r\n  const chartOptions = {\r\n    chart: {\r\n      background: 'transparent',\r\n      stacked: false,\r\n      toolbar: {\r\n        show: false\r\n      }\r\n    },\r\n    colors: [\r\n      theme.palette.primary.light,\r\n      theme.palette.warning.light,\r\n      theme.palette.success.light,\r\n      theme.palette.info.light,\r\n      '#455a64'\r\n    ],\r\n    dataLabels: {\r\n      enabled: false\r\n    },\r\n    labels: ['Linkedin', 'Facebook', 'Instagram', 'Twitter', 'Other'],\r\n    legend: {\r\n      labels: {\r\n        colors: theme.palette.text.secondary\r\n      },\r\n      show: true\r\n    },\r\n    stroke: {\r\n      width: 0\r\n    },\r\n    theme: {\r\n      mode: theme.palette.mode\r\n    }\r\n  };\r\n\r\n  const chartSeries = [10, 10, 20, 10, 70];\r\n\r\n  return (\r\n    <Box\r\n      sx={{\r\n        backgroundColor: 'background.default',\r\n        p: 3\r\n      }}\r\n    >\r\n      <Container maxWidth=\"sm\">\r\n        <Card>\r\n          <CardHeader\r\n            disableTypography\r\n            title={(\r\n              <Box\r\n                sx={{\r\n                  alignItems: 'center',\r\n                  display: 'flex',\r\n                  justifyContent: 'space-between'\r\n                }}\r\n              >\r\n                <Typography\r\n                  color=\"textPrimary\"\r\n                  variant=\"h6\"\r\n                >\r\n                  Social Media Sources\r\n                </Typography>\r\n                <Tooltip title=\"Traffic by Social Media platforms\">\r\n                  <InformationCircleIcon fontSize=\"small\" />\r\n                </Tooltip>\r\n              </Box>\r\n            )}\r\n          />\r\n          <CardContent>\r\n            <Chart\r\n              height={300}\r\n              options={chartOptions}\r\n              series={chartSeries}\r\n              type=\"donut\"\r\n            />\r\n            <Box\r\n              sx={{\r\n                display: 'flex',\r\n                justifyContent: 'flex-end'\r\n              }}\r\n            >\r\n              <Button\r\n                color=\"primary\"\r\n                endIcon={<ArrowRightIcon fontSize=\"small\" />}\r\n                variant=\"text\"\r\n              >\r\n                See all\r\n              </Button>\r\n            </Box>\r\n          </CardContent>\r\n        </Card>\r\n      </Container>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default Chart8;\r\n","import Chart from 'react-apexcharts';\r\nimport { Box, Card, CardContent, CardHeader } from '@material-ui/core';\r\nimport { useTheme } from '@material-ui/core/styles';\r\n\r\nconst Chart9 = () => {\r\n  const theme = useTheme();\r\n\r\n  const chartOptions = {\r\n    chart: {\r\n      background: 'transparent',\r\n      stacked: false,\r\n      toolbar: {\r\n        show: false\r\n      }\r\n    },\r\n    colors: ['#ffb547', '#7783DB'],\r\n    dataLabels: {\r\n      enabled: false\r\n    },\r\n    fill: {\r\n      type: 'solid',\r\n      opacity: 0\r\n    },\r\n    grid: {\r\n      borderColor: theme.palette.divider\r\n    },\r\n    markers: {\r\n      strokeColors: theme.palette.background.paper,\r\n      size: 6\r\n    },\r\n    stroke: {\r\n      curve: 'straight',\r\n      width: 2\r\n    },\r\n    theme: {\r\n      mode: theme.palette.mode\r\n    },\r\n    xaxis: {\r\n      axisBorder: {\r\n        color: theme.palette.divider,\r\n        show: true\r\n      },\r\n      axisTicks: {\r\n        color: theme.palette.divider,\r\n        show: true\r\n      },\r\n      categories: [\r\n        'Jan',\r\n        'Feb',\r\n        'Mar',\r\n        'Apr',\r\n        'May',\r\n        'Jun',\r\n        'Jul',\r\n        'Aug',\r\n        'Sep',\r\n        'Oct',\r\n        'Nov',\r\n        'Dec'\r\n      ]\r\n    }\r\n  };\r\n\r\n  const chartSeries = [\r\n    {\r\n      name: 'New Customers',\r\n      data: [31, 40, 28, 51, 42, 109, 100, 120, 80, 42, 90, 140]\r\n    },\r\n    {\r\n      name: 'Up/Cross-Selling',\r\n      data: [11, 32, 45, 32, 34, 52, 41, 80, 96, 140, 30, 100]\r\n    }\r\n  ];\r\n\r\n  return (\r\n    <Box\r\n      sx={{\r\n        backgroundColor: 'background.default',\r\n        p: 3\r\n      }}\r\n    >\r\n      <Card>\r\n        <CardHeader title=\"Sales Revenue\" />\r\n        <CardContent>\r\n          <Chart\r\n            height=\"360\"\r\n            options={chartOptions}\r\n            series={chartSeries}\r\n            type=\"area\"\r\n          />\r\n        </CardContent>\r\n      </Card>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default Chart9;\r\n","import Chart from 'react-apexcharts';\r\nimport numeral from 'numeral';\r\nimport { Box, Card, CardContent, CardHeader, Container, Typography } from '@material-ui/core';\r\nimport { useTheme } from '@material-ui/core/styles';\r\n\r\nconst data = {\r\n  series: [\r\n    {\r\n      color: '#FFB547',\r\n      data: 14859,\r\n      label: 'Strategy'\r\n    },\r\n    {\r\n      color: '#7BC67E',\r\n      data: 35690,\r\n      label: 'Outsourcing'\r\n    },\r\n    {\r\n      color: '#7783DB',\r\n      data: 45120,\r\n      label: 'Marketing'\r\n    }\r\n  ]\r\n};\r\n\r\nconst Chart10 = () => {\r\n  const theme = useTheme();\r\n\r\n  const chartOptions = {\r\n    chart: {\r\n      background: 'transparent',\r\n      stacked: false,\r\n      toolbar: {\r\n        show: false\r\n      }\r\n    },\r\n    colors: data.series.map((item) => item.color),\r\n    dataLabels: {\r\n      enabled: false\r\n    },\r\n    labels: data.series.map((item) => item.label),\r\n    legend: {\r\n      show: false\r\n    },\r\n    stroke: {\r\n      colors: [theme.palette.background.paper],\r\n      width: 1\r\n    },\r\n    theme: {\r\n      mode: theme.palette.mode\r\n    }\r\n  };\r\n\r\n  const chartSeries = data.series.map((item) => item.data);\r\n\r\n  return (\r\n    <Box\r\n      sx={{\r\n        backgroundColor: 'background.default',\r\n        p: 3\r\n      }}\r\n    >\r\n      <Container maxWidth=\"md\">\r\n        <Card>\r\n          <CardHeader title=\"Cost Breakdown\" />\r\n          <CardContent>\r\n            <Chart\r\n              height=\"260\"\r\n              options={chartOptions}\r\n              series={chartSeries}\r\n              type=\"pie\"\r\n            />\r\n            {data.series.map((item) => (\r\n              <Box\r\n                key={item.label}\r\n                sx={{\r\n                  alignItems: 'center',\r\n                  display: 'flex',\r\n                  p: 1\r\n                }}\r\n              >\r\n                <Box\r\n                  sx={{\r\n                    backgroundColor: item.color,\r\n                    borderRadius: '50%',\r\n                    height: 8,\r\n                    width: 8\r\n                  }}\r\n                />\r\n                <Typography\r\n                  color=\"textPrimary\"\r\n                  sx={{ ml: 2 }}\r\n                  variant=\"subtitle2\"\r\n                >\r\n                  {item.label}\r\n                </Typography>\r\n                <Box sx={{ flexGrow: 1 }} />\r\n                <Typography\r\n                  color=\"textSecondary\"\r\n                  variant=\"subtitle2\"\r\n                >\r\n                  {numeral(item.data).format('$0,0.00')}\r\n                </Typography>\r\n              </Box>\r\n            ))}\r\n          </CardContent>\r\n        </Card>\r\n      </Container>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default Chart10;\r\n","import numeral from 'numeral';\r\nimport Chart from 'react-apexcharts';\r\nimport { Box, Card, CardContent, CardHeader, Container, Typography } from '@material-ui/core';\r\nimport { useTheme } from '@material-ui/core/styles';\r\n\r\nconst data = {\r\n  series: [\r\n    {\r\n      color: '#7783DB',\r\n      category: 'Email',\r\n      data: 37530\r\n    },\r\n    {\r\n      color: '#7BC67E',\r\n      category: 'GDN',\r\n      data: 52717\r\n    },\r\n    {\r\n      color: '#FFB547',\r\n      category: 'Instagram',\r\n      data: 62935\r\n    },\r\n    {\r\n      color: '#F06191',\r\n      category: 'Facebook',\r\n      data: 90590\r\n    },\r\n    {\r\n      color: '#64B6F7',\r\n      category: 'Google Ads Search',\r\n      data: 13219\r\n    }\r\n  ]\r\n};\r\n\r\nconst IncrementalSales = () => {\r\n  const theme = useTheme();\r\n\r\n  const chartOptions = {\r\n    chart: {\r\n      background: 'transparent',\r\n      stacked: false,\r\n      toolbar: {\r\n        show: false\r\n      }\r\n    },\r\n    colors: data.series.map((item) => item.color),\r\n    dataLabels: {\r\n      enabled: false\r\n    },\r\n    grid: {\r\n      borderColor: theme.palette.divider,\r\n      yaxis: {\r\n        lines: {\r\n          show: false\r\n        }\r\n      }\r\n    },\r\n    legend: {\r\n      show: false\r\n    },\r\n    plotOptions: {\r\n      bar: {\r\n        horizontal: true,\r\n        barHeight: '45',\r\n        distributed: true\r\n      }\r\n    },\r\n    theme: {\r\n      mode: theme.palette.mode\r\n    },\r\n    tooltip: {\r\n      y: {\r\n        formatter: (value) => numeral(value).format('$0,0.00')\r\n      }\r\n    },\r\n    xaxis: {\r\n      axisBorder: {\r\n        color: theme.palette.divider,\r\n        show: true\r\n      },\r\n      axisTicks: {\r\n        color: theme.palette.divider,\r\n        show: true\r\n      },\r\n      categories: data.series.map((item) => item.category)\r\n    },\r\n    yaxis: {\r\n      labels: {\r\n        show: false\r\n      }\r\n    }\r\n  };\r\n\r\n  const chartSeries = [\r\n    {\r\n      data: data.series.map((item) => item.data),\r\n      name: 'Sales'\r\n    }\r\n  ];\r\n\r\n  return (\r\n    <Box\r\n      sx={{\r\n        backgroundColor: 'background.default',\r\n        p: 3\r\n      }}\r\n    >\r\n      <Container maxWidth=\"md\">\r\n        <Card>\r\n          <CardHeader title=\"Incremental Sales\" />\r\n          <CardContent>\r\n            {data.series.map((item) => (\r\n              <Box\r\n                key={item.category}\r\n                sx={{\r\n                  alignItems: 'center',\r\n                  display: 'flex',\r\n                  p: 1\r\n                }}\r\n              >\r\n                <Box\r\n                  sx={{\r\n                    backgroundColor: item.color,\r\n                    borderRadius: '50%',\r\n                    height: 8,\r\n                    width: 8\r\n                  }}\r\n                />\r\n                <Typography\r\n                  color=\"textPrimary\"\r\n                  sx={{ ml: 2 }}\r\n                  variant=\"subtitle2\"\r\n                >\r\n                  {item.category}\r\n                </Typography>\r\n              </Box>\r\n            ))}\r\n            <Chart\r\n              height=\"350\"\r\n              options={chartOptions}\r\n              series={chartSeries}\r\n              type=\"bar\"\r\n            />\r\n          </CardContent>\r\n        </Card>\r\n      </Container>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default IncrementalSales;\r\n","import Chart from 'react-apexcharts';\r\nimport { format } from 'date-fns';\r\nimport { Box, Card, CardHeader, Typography } from '@material-ui/core';\r\nimport { useTheme } from '@material-ui/core/styles';\r\nimport Scrollbar from '../../Scrollbar';\r\n\r\nconst data = {\r\n  series: [\r\n    {\r\n      data: [12, 24, 36, 48, 60, 72, 84]\r\n    },\r\n    {\r\n      data: [12, 24, 36, 48, 60, 72, 84]\r\n    },\r\n    {\r\n      data: [12, 24, 36, 48, 60, 72, 84]\r\n    }\r\n  ],\r\n  categories: [\r\n    'Capital One',\r\n    'Ally Bank',\r\n    'ING',\r\n    'Ridgewood',\r\n    'BT Transilvania',\r\n    'CEC',\r\n    'CBC'\r\n  ]\r\n};\r\n\r\nconst Chart12 = () => {\r\n  const theme = useTheme();\r\n\r\n  const chartOptions = {\r\n    chart: {\r\n      background: 'transparent',\r\n      stacked: true,\r\n      toolbar: {\r\n        show: false\r\n      }\r\n    },\r\n    colors: ['#3C4693', '#5664D2', '#7783DB'],\r\n    dataLabels: {\r\n      enabled: false\r\n    },\r\n    grid: {\r\n      borderColor: theme.palette.divider,\r\n      xaxis: {\r\n        lines: {\r\n          show: true\r\n        }\r\n      },\r\n      yaxis: {\r\n        lines: {\r\n          show: true\r\n        }\r\n      }\r\n    },\r\n    states: {\r\n      active: {\r\n        filter: {\r\n          type: 'none'\r\n        }\r\n      },\r\n      hover: {\r\n        filter: {\r\n          type: 'none'\r\n        }\r\n      }\r\n    },\r\n    legend: {\r\n      show: false\r\n    },\r\n    stroke: {\r\n      colors: ['transparent'],\r\n      show: true,\r\n      width: 2\r\n    },\r\n    theme: {\r\n      mode: theme.palette.mode\r\n    },\r\n    xaxis: {\r\n      axisBorder: {\r\n        show: false\r\n      },\r\n      axisTicks: {\r\n        show: false\r\n      },\r\n      categories: data.categories,\r\n      labels: {\r\n        style: {\r\n          colors: theme.palette.text.secondary\r\n        }\r\n      }\r\n    },\r\n    yaxis: {\r\n      labels: {\r\n        offsetX: -12,\r\n        style: {\r\n          colors: theme.palette.text.secondary\r\n        }\r\n      }\r\n    }\r\n  };\r\n\r\n  const chartSeries = data.series;\r\n\r\n  return (\r\n    <Box\r\n      sx={{\r\n        backgroundColor: 'background.default',\r\n        p: 3\r\n      }}\r\n    >\r\n      <Card>\r\n        <CardHeader\r\n          subheader={(\r\n            <Typography\r\n              color=\"textSecondary\"\r\n              variant=\"body2\"\r\n            >\r\n              {format(new Date(), 'MMM yyyy')}\r\n            </Typography>\r\n          )}\r\n          title=\"Total Transactions\"\r\n        />\r\n        <Scrollbar>\r\n          <Box\r\n            sx={{\r\n              height: 336,\r\n              minWidth: 500,\r\n              px: 2\r\n            }}\r\n          >\r\n            <Chart\r\n              height=\"300\"\r\n              options={chartOptions}\r\n              series={chartSeries}\r\n              type=\"bar\"\r\n            />\r\n          </Box>\r\n        </Scrollbar>\r\n      </Card>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default Chart12;\r\n","import { useEffect } from 'react';\r\nimport { Helmet } from 'react-helmet-async';\r\nimport { Box, Container } from '@material-ui/core';\r\nimport Chart1 from '../../components/widgets/charts/Chart1';\r\nimport Chart2 from '../../components/widgets/charts/Chart2';\r\nimport Chart3 from '../../components/widgets/charts/Chart3';\r\nimport Chart4 from '../../components/widgets/charts/Chart4';\r\nimport Chart5 from '../../components/widgets/charts/Chart5';\r\nimport Chart6 from '../../components/widgets/charts/Chart6';\r\nimport Chart7 from '../../components/widgets/charts/Chart7';\r\nimport Chart8 from '../../components/widgets/charts/Chart8';\r\nimport Chart9 from '../../components/widgets/charts/Chart9';\r\nimport Chart10 from '../../components/widgets/charts/Chart10';\r\nimport Chart11 from '../../components/widgets/charts/Chart11';\r\nimport Chart12 from '../../components/widgets/charts/Chart12';\r\nimport WidgetPreviewer from '../../components/WidgetPreviewer';\r\nimport gtm from '../../lib/gtm';\r\n\r\nconst BrowseCharts = () => {\r\n  useEffect(() => {\r\n    gtm.push({ event: 'page_view' });\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      <Helmet>\r\n        <title>Browse: Charts | Material Kit Pro</title>\r\n      </Helmet>\r\n      <Box\r\n        sx={{\r\n          backgroundColor: 'background.paper',\r\n          minHeight: '100%',\r\n          py: 8\r\n        }}\r\n      >\r\n        <Container maxWidth=\"lg\">\r\n          <Box sx={{ mt: 3 }}>\r\n            <WidgetPreviewer\r\n              element={<Chart1 />}\r\n              name=\"Chart 1\"\r\n            />\r\n            <WidgetPreviewer\r\n              element={<Chart2 />}\r\n              name=\"Chart 2\"\r\n            />\r\n            <WidgetPreviewer\r\n              element={<Chart3 />}\r\n              name=\"Chart 3\"\r\n            />\r\n            <WidgetPreviewer\r\n              element={<Chart4 />}\r\n              name=\"Chart 4\"\r\n            />\r\n            <WidgetPreviewer\r\n              element={<Chart5 />}\r\n              name=\"Chart 5\"\r\n            />\r\n            <WidgetPreviewer\r\n              element={<Chart6 />}\r\n              name=\"Chart 6\"\r\n            />\r\n            <WidgetPreviewer\r\n              element={<Chart7 />}\r\n              name=\"Chart 7\"\r\n            />\r\n            <WidgetPreviewer\r\n              element={<Chart8 />}\r\n              name=\"Chart 8\"\r\n            />\r\n            <WidgetPreviewer\r\n              element={<Chart9 />}\r\n              name=\"Chart 9\"\r\n            />\r\n            <WidgetPreviewer\r\n              element={<Chart10 />}\r\n              name=\"Chart 10\"\r\n            />\r\n            <WidgetPreviewer\r\n              element={<Chart11 />}\r\n              name=\"Chart 11\"\r\n            />\r\n            <WidgetPreviewer\r\n              element={<Chart12 />}\r\n              name=\"Chart 12\"\r\n            />\r\n          </Box>\r\n        </Container>\r\n      </Box>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default BrowseCharts;\r\n","import createSvgIcon from '@material-ui/core/utils/createSvgIcon';\r\n\r\nconst ArrowRight = createSvgIcon(\r\n  <svg\r\n    xmlns=\"http://www.w3.org/2000/svg\"\r\n    viewBox=\"0 0 20 20\"\r\n    fill=\"currentColor\"\r\n  >\r\n    <path\r\n      fillRule=\"evenodd\"\r\n      d=\"M10.293 3.293a1 1 0 011.414 0l6 6a1 1 0 010 1.414l-6 6a1 1 0 01-1.414-1.414L14.586 11H3a1 1 0 110-2h11.586l-4.293-4.293a1 1 0 010-1.414z\"\r\n      clipRule=\"evenodd\"\r\n    />\r\n  </svg>, 'ArrowRight'\r\n);\r\n\r\nexport default ArrowRight;\r\n","import createSvgIcon from '@material-ui/core/utils/createSvgIcon';\r\n\r\nconst DotsHorizontal = createSvgIcon(\r\n  <svg\r\n    xmlns=\"http://www.w3.org/2000/svg\"\r\n    viewBox=\"0 0 20 20\"\r\n    fill=\"currentColor\"\r\n  >\r\n    <path d=\"M6 10a2 2 0 11-4 0 2 2 0 014 0zM12 10a2 2 0 11-4 0 2 2 0 014 0zM16 12a2 2 0 100-4 2 2 0 000 4z\" />\r\n  </svg>, 'DotsHorizontal'\r\n);\r\n\r\nexport default DotsHorizontal;\r\n","import createSvgIcon from '@material-ui/core/utils/createSvgIcon';\r\n\r\nconst Moon = createSvgIcon(\r\n  <svg\r\n    xmlns=\"http://www.w3.org/2000/svg\"\r\n    viewBox=\"0 0 20 20\"\r\n    fill=\"currentColor\"\r\n  >\r\n    <path d=\"M17.293 13.293A8 8 0 016.707 2.707a8.001 8.001 0 1010.586 10.586z\" />\r\n  </svg>, 'Moon'\r\n);\r\n\r\nexport default Moon;\r\n","import createSvgIcon from '@material-ui/core/utils/createSvgIcon';\r\n\r\nconst Sun = createSvgIcon(\r\n  <svg\r\n    xmlns=\"http://www.w3.org/2000/svg\"\r\n    viewBox=\"0 0 20 20\"\r\n    fill=\"currentColor\"\r\n  >\r\n    <path\r\n      fillRule=\"evenodd\"\r\n      d=\"M10 2a1 1 0 011 1v1a1 1 0 11-2 0V3a1 1 0 011-1zm4 8a4 4 0 11-8 0 4 4 0 018 0zm-.464 4.95l.707.707a1 1 0 001.414-1.414l-.707-.707a1 1 0 00-1.414 1.414zm2.12-10.607a1 1 0 010 1.414l-.706.707a1 1 0 11-1.414-1.414l.707-.707a1 1 0 011.414 0zM17 11a1 1 0 100-2h-1a1 1 0 100 2h1zm-7 4a1 1 0 011 1v1a1 1 0 11-2 0v-1a1 1 0 011-1zM5.05 6.464A1 1 0 106.465 5.05l-.708-.707a1 1 0 00-1.414 1.414l.707.707zm1.414 8.486l-.707.707a1 1 0 01-1.414-1.414l.707-.707a1 1 0 011.414 1.414zM4 11a1 1 0 100-2H3a1 1 0 000 2h1z\"\r\n      clipRule=\"evenodd\"\r\n    />\r\n  </svg>, 'Sun'\r\n);\r\n\r\nexport default Sun;\r\n","import { useEffect, useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Card, CardHeader, Divider, IconButton, ThemeProvider } from '@material-ui/core';\r\nimport { THEMES } from '../constants';\r\nimport useSettings from '../hooks/useSettings';\r\nimport MoonIcon from '../icons/Moon';\r\nimport SunIcon from '../icons/Sun';\r\nimport { createCustomTheme } from '../theme';\r\n\r\nconst WidgetPreviewer = (props) => {\r\n  const { element, name, ...other } = props;\r\n  const { settings } = useSettings();\r\n  const [selectedTheme, setSelectedTheme] = useState(settings.theme);\r\n\r\n  useEffect(() => {\r\n    setSelectedTheme(settings.theme);\r\n  }, [settings.theme]);\r\n\r\n  const handleSwitch = () => setSelectedTheme((prevSelectedTheme) => {\r\n    if (prevSelectedTheme === THEMES.LIGHT) {\r\n      if (settings.theme === THEMES.LIGHT) {\r\n        return THEMES.DARK;\r\n      }\r\n\r\n      return settings.theme;\r\n    }\r\n\r\n    return THEMES.LIGHT;\r\n  });\r\n\r\n  const theme = createCustomTheme({\r\n    ...settings,\r\n    theme: selectedTheme\r\n  });\r\n\r\n  return (\r\n    <Card\r\n      variant=\"outlined\"\r\n      sx={{ mb: 8 }}\r\n      {...other}\r\n    >\r\n      <CardHeader\r\n        action={(\r\n          <IconButton onClick={handleSwitch}>\r\n            {selectedTheme === 'LIGHT'\r\n              ? <MoonIcon fontSize=\"small\" />\r\n              : <SunIcon fontSize=\"small\" />}\r\n          </IconButton>\r\n        )}\r\n        title={name}\r\n      />\r\n      <Divider />\r\n      <ThemeProvider theme={theme}>\r\n        {element}\r\n      </ThemeProvider>\r\n    </Card>\r\n  );\r\n};\r\n\r\nWidgetPreviewer.propTypes = {\r\n  element: PropTypes.node.isRequired,\r\n  name: PropTypes.string.isRequired\r\n};\r\n\r\nexport default WidgetPreviewer;\r\n","import createSvgIcon from '@material-ui/core/utils/createSvgIcon';\r\n\r\nconst InformationCircle = createSvgIcon(\r\n  <svg\r\n    xmlns=\"http://www.w3.org/2000/svg\"\r\n    viewBox=\"0 0 20 20\"\r\n    fill=\"currentColor\"\r\n  >\r\n    <path\r\n      fillRule=\"evenodd\"\r\n      d=\"M18 10a8 8 0 11-16 0 8 8 0 0116 0zm-7-4a1 1 0 11-2 0 1 1 0 012 0zM9 9a1 1 0 000 2v3a1 1 0 001 1h1a1 1 0 100-2v-3a1 1 0 00-1-1H9z\"\r\n      clipRule=\"evenodd\"\r\n    />\r\n  </svg>, 'InformationCircle'\r\n);\r\n\r\nexport default InformationCircle;\r\n"],"sourceRoot":""}