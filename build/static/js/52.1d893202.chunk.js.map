{"version":3,"sources":["pages/browse/BrowseTypography.js","icons/Moon.js","icons/Sun.js","components/WidgetPreviewer.js","../node_modules/@material-ui/core/CardHeader/cardHeaderClasses.js","../node_modules/@material-ui/core/CardHeader/CardHeader.js"],"names":["BrowseTypography","useEffect","gtm","push","event","sx","backgroundColor","pb","pt","maxWidth","element","p","container","item","md","xs","color","variant","name","Moon","createSvgIcon","xmlns","viewBox","fill","d","Sun","fillRule","clipRule","WidgetPreviewer","props","other","settings","useSettings","useState","theme","selectedTheme","setSelectedTheme","createCustomTheme","Card","mb","CardHeader","action","IconButton","onClick","prevSelectedTheme","THEMES","LIGHT","DARK","fontSize","title","Divider","ThemeProvider","getCardHeaderUtilityClass","slot","generateUtilityClass","cardHeaderClasses","generateUtilityClasses","CardHeaderRoot","experimentalStyled","overridesResolver","styles","_extends","subheader","root","display","alignItems","padding","CardHeaderAvatar","avatar","flex","marginRight","CardHeaderAction","alignSelf","marginTop","marginBottom","CardHeaderContent","content","React","inProps","ref","useThemeProps","className","component","disableTypography","subheaderProp","subheaderTypographyProps","titleProp","titleTypographyProps","_objectWithoutPropertiesLoose","styleProps","classes","composeClasses","useUtilityClasses","type","Typography","_jsx","children","_jsxs","clsx","as"],"mappings":"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","file":"static/js/52.1d893202.chunk.js","sourcesContent":["import { useEffect } from 'react';\nimport { Helmet } from 'react-helmet-async';\nimport { Box, Container, Grid, Typography } from '@material-ui/core';\nimport WidgetPreviewer from '../../components/WidgetPreviewer';\nimport gtm from '../../lib/gtm';\n\nconst BrowseTypography = () => {\n  useEffect(() => {\n    gtm.push({ event: 'page_view' });\n  }, []);\n\n  return (\n    <>\n      <Helmet>\n        <title>Browse: Typography | Material Kit Pro</title>\n      </Helmet>\n      <Box\n        sx={{\n          backgroundColor: 'background.paper',\n          pb: 15,\n          pt: 8\n        }}\n      >\n        <Container maxWidth=\"lg\">\n          <WidgetPreviewer\n            element={(\n              <Box\n                sx={{\n                  backgroundColor: 'background.paper',\n                  p: 3\n                }}\n              >\n                <Grid container>\n                  <Grid\n                    item\n                    md={6}\n                    xs={12}\n                    sx={{\n                      '& > *:not(:last-child)': {\n                        pb: 3\n                      }\n                    }}\n                  >\n                    <Typography\n                      color=\"textPrimary\"\n                      variant=\"h1\"\n                    >\n                      H1\n                    </Typography>\n                    <Typography\n                      color=\"textPrimary\"\n                      variant=\"h2\"\n                    >\n                      H2\n                    </Typography>\n                    <Typography\n                      color=\"textPrimary\"\n                      variant=\"h3\"\n                    >\n                      H3\n                    </Typography>\n                    <Typography\n                      color=\"textPrimary\"\n                      variant=\"h4\"\n                    >\n                      H4\n                    </Typography>\n                    <Typography\n                      color=\"textPrimary\"\n                      variant=\"h5\"\n                    >\n                      H5\n                    </Typography>\n                    <Typography\n                      color=\"textPrimary\"\n                      variant=\"h6\"\n                    >\n                      H6\n                    </Typography>\n                    <Typography\n                      color=\"textPrimary\"\n                      variant=\"h2\"\n                    >\n                      Your clients will love it\n                    </Typography>\n                    <Typography\n                      color=\"textPrimary\"\n                      variant=\"subtitle2\"\n                    >\n                      Aliquam dapibus elementum nulla at\n                      malesuada. Ut mi nisl, aliquet non\n                      mollis vel, feugiat non nibh. Vivamus\n                      sit amet tristique dui. Praesent in\n                      bibendum arcu, at placerat augue. Nam\n                      varius fermentum diam, at tristique\n                      libero ultrices non. Praesent\n                      scelerisque diam vitae posuere\n                      dignissim.\n                    </Typography>\n                    <Typography\n                      color=\"textPrimary\"\n                      variant=\"h3\"\n                    >\n                      Comes for both roles\n                    </Typography>\n                    <Typography\n                      color=\"textPrimary\"\n                      variant=\"h4\"\n                    >\n                      Developers\n                    </Typography>\n                    <Typography\n                      color=\"textPrimary\"\n                      variant=\"subtitle1\"\n                    >\n                      Lorem ipsum dolor sit amet, consectetuer\n                      adipiscing elit. Aenean commodo ligula\n                      eget dolor.\n                    </Typography>\n                    <Typography\n                      color=\"textPrimary\"\n                      variant=\"h5\"\n                    >\n                      Designers\n                    </Typography>\n                    <Typography\n                      color=\"textPrimary\"\n                      variant=\"body2\"\n                    >\n                      Lorem ipsum dolor sit amet, consectetuer adipiscing elit. Aenean commodo\n                      ligula eget dolor. Aenean massa. Cum sociis natoque penatibus et magnis dis\n                      parturient montes, nascetur ridiculus mus.\n                    </Typography>\n                    <Typography\n                      color=\"textPrimary\"\n                      variant=\"h6\"\n                    >\n                      Modern technology stack\n                    </Typography>\n                    <Typography\n                      color=\"textPrimary\"\n                      variant=\"body1\"\n                    >\n                      Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore\n                      eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt\n                      in culpa qui officia deserunt mollit anim id est laborum.\n                    </Typography>\n                    <Typography\n                      color=\"textPrimary\"\n                      variant=\"overline\"\n                    >\n                      Lorem ipsum dolor sit amet, consectetuer adipiscing elit. Aenean commodo\n                      ligula eget dolor. Aenean massa.\n                    </Typography>\n                  </Grid>\n                  <Grid\n                    item\n                    md={6}\n                  />\n                </Grid>\n              </Box>\n            )}\n            name=\"Typography\"\n          />\n        </Container>\n      </Box>\n    </>\n  );\n};\n\nexport default BrowseTypography;\n","import createSvgIcon from '@material-ui/core/utils/createSvgIcon';\n\nconst Moon = createSvgIcon(\n  <svg\n    xmlns=\"http://www.w3.org/2000/svg\"\n    viewBox=\"0 0 20 20\"\n    fill=\"currentColor\"\n  >\n    <path d=\"M17.293 13.293A8 8 0 016.707 2.707a8.001 8.001 0 1010.586 10.586z\" />\n  </svg>, 'Moon'\n);\n\nexport default Moon;\n","import createSvgIcon from '@material-ui/core/utils/createSvgIcon';\n\nconst Sun = createSvgIcon(\n  <svg\n    xmlns=\"http://www.w3.org/2000/svg\"\n    viewBox=\"0 0 20 20\"\n    fill=\"currentColor\"\n  >\n    <path\n      fillRule=\"evenodd\"\n      d=\"M10 2a1 1 0 011 1v1a1 1 0 11-2 0V3a1 1 0 011-1zm4 8a4 4 0 11-8 0 4 4 0 018 0zm-.464 4.95l.707.707a1 1 0 001.414-1.414l-.707-.707a1 1 0 00-1.414 1.414zm2.12-10.607a1 1 0 010 1.414l-.706.707a1 1 0 11-1.414-1.414l.707-.707a1 1 0 011.414 0zM17 11a1 1 0 100-2h-1a1 1 0 100 2h1zm-7 4a1 1 0 011 1v1a1 1 0 11-2 0v-1a1 1 0 011-1zM5.05 6.464A1 1 0 106.465 5.05l-.708-.707a1 1 0 00-1.414 1.414l.707.707zm1.414 8.486l-.707.707a1 1 0 01-1.414-1.414l.707-.707a1 1 0 011.414 1.414zM4 11a1 1 0 100-2H3a1 1 0 000 2h1z\"\n      clipRule=\"evenodd\"\n    />\n  </svg>, 'Sun'\n);\n\nexport default Sun;\n","import { useEffect, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { Card, CardHeader, Divider, IconButton, ThemeProvider } from '@material-ui/core';\nimport { THEMES } from '../constants';\nimport useSettings from '../hooks/useSettings';\nimport MoonIcon from '../icons/Moon';\nimport SunIcon from '../icons/Sun';\nimport { createCustomTheme } from '../theme';\n\nconst WidgetPreviewer = (props) => {\n  const { element, name, ...other } = props;\n  const { settings } = useSettings();\n  const [selectedTheme, setSelectedTheme] = useState(settings.theme);\n\n  useEffect(() => {\n    setSelectedTheme(settings.theme);\n  }, [settings.theme]);\n\n  const handleSwitch = () => setSelectedTheme((prevSelectedTheme) => {\n    if (prevSelectedTheme === THEMES.LIGHT) {\n      if (settings.theme === THEMES.LIGHT) {\n        return THEMES.DARK;\n      }\n\n      return settings.theme;\n    }\n\n    return THEMES.LIGHT;\n  });\n\n  const theme = createCustomTheme({\n    ...settings,\n    theme: selectedTheme\n  });\n\n  return (\n    <Card\n      variant=\"outlined\"\n      sx={{ mb: 8 }}\n      {...other}\n    >\n      <CardHeader\n        action={(\n          <IconButton onClick={handleSwitch}>\n            {selectedTheme === 'LIGHT'\n              ? <MoonIcon fontSize=\"small\" />\n              : <SunIcon fontSize=\"small\" />}\n          </IconButton>\n        )}\n        title={name}\n      />\n      <Divider />\n      <ThemeProvider theme={theme}>\n        {element}\n      </ThemeProvider>\n    </Card>\n  );\n};\n\nWidgetPreviewer.propTypes = {\n  element: PropTypes.node.isRequired,\n  name: PropTypes.string.isRequired\n};\n\nexport default WidgetPreviewer;\n","import { generateUtilityClass, generateUtilityClasses } from '@material-ui/unstyled';\nexport function getCardHeaderUtilityClass(slot) {\n  return generateUtilityClass('MuiCardHeader', slot);\n}\nconst cardHeaderClasses = generateUtilityClasses('MuiCardHeader', ['root', 'avatar', 'action', 'content', 'title', 'subheader']);\nexport default cardHeaderClasses;","import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { unstable_composeClasses as composeClasses } from '@material-ui/unstyled';\nimport Typography from '../Typography';\nimport useThemeProps from '../styles/useThemeProps';\nimport experimentalStyled from '../styles/experimentalStyled';\nimport cardHeaderClasses, { getCardHeaderUtilityClass } from './cardHeaderClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nconst useUtilityClasses = styleProps => {\n  const {\n    classes\n  } = styleProps;\n  const slots = {\n    root: ['root'],\n    avatar: ['avatar'],\n    action: ['action'],\n    content: ['content'],\n    title: ['title'],\n    subheader: ['subheader']\n  };\n  return composeClasses(slots, getCardHeaderUtilityClass, classes);\n};\n\nconst CardHeaderRoot = experimentalStyled('div', {}, {\n  name: 'MuiCardHeader',\n  slot: 'Root',\n  overridesResolver: (props, styles) => _extends({\n    [`& .${cardHeaderClasses.title}`]: styles.title,\n    [`& .${cardHeaderClasses.subheader}`]: styles.subheader\n  }, styles.root)\n})({\n  /* Styles applied to the root element. */\n  display: 'flex',\n  alignItems: 'center',\n  padding: 16\n});\nconst CardHeaderAvatar = experimentalStyled('div', {}, {\n  name: 'MuiCardHeader',\n  slot: 'Avatar',\n  overridesResolver: (props, styles) => styles.avatar\n})({\n  /* Styles applied to the avatar element. */\n  display: 'flex',\n  flex: '0 0 auto',\n  marginRight: 16\n});\nconst CardHeaderAction = experimentalStyled('div', {}, {\n  name: 'MuiCardHeader',\n  slot: 'Action',\n  overridesResolver: (props, styles) => styles.action\n})({\n  /* Styles applied to the action element. */\n  flex: '0 0 auto',\n  alignSelf: 'flex-start',\n  marginTop: -4,\n  marginRight: -8,\n  marginBottom: -4\n});\nconst CardHeaderContent = experimentalStyled('div', {}, {\n  name: 'MuiCardHeader',\n  slot: 'Content',\n  overridesResolver: (props, styles) => styles.content\n})({\n  /* Styles applied to the content wrapper element. */\n  flex: '1 1 auto'\n});\nconst CardHeader = /*#__PURE__*/React.forwardRef(function CardHeader(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiCardHeader'\n  });\n\n  const {\n    action,\n    avatar,\n    className,\n    component = 'div',\n    disableTypography = false,\n    subheader: subheaderProp,\n    subheaderTypographyProps,\n    title: titleProp,\n    titleTypographyProps\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, [\"action\", \"avatar\", \"className\", \"component\", \"disableTypography\", \"subheader\", \"subheaderTypographyProps\", \"title\", \"titleTypographyProps\"]);\n\n  const styleProps = _extends({}, props, {\n    component,\n    disableTypography\n  });\n\n  const classes = useUtilityClasses(styleProps);\n  let title = titleProp;\n\n  if (title != null && title.type !== Typography && !disableTypography) {\n    title = /*#__PURE__*/_jsx(Typography, _extends({\n      variant: avatar ? 'body2' : 'h5',\n      className: classes.title,\n      component: \"span\",\n      display: \"block\"\n    }, titleTypographyProps, {\n      children: title\n    }));\n  }\n\n  let subheader = subheaderProp;\n\n  if (subheader != null && subheader.type !== Typography && !disableTypography) {\n    subheader = /*#__PURE__*/_jsx(Typography, _extends({\n      variant: avatar ? 'body2' : 'body1',\n      className: classes.subheader,\n      color: \"text.secondary\",\n      component: \"span\",\n      display: \"block\"\n    }, subheaderTypographyProps, {\n      children: subheader\n    }));\n  }\n\n  return /*#__PURE__*/_jsxs(CardHeaderRoot, _extends({\n    className: clsx(classes.root, className),\n    as: component,\n    ref: ref,\n    styleProps: styleProps\n  }, other, {\n    children: [avatar && /*#__PURE__*/_jsx(CardHeaderAvatar, {\n      className: classes.avatar,\n      styleProps: styleProps,\n      children: avatar\n    }), /*#__PURE__*/_jsxs(CardHeaderContent, {\n      className: classes.content,\n      styleProps: styleProps,\n      children: [title, subheader]\n    }), action && /*#__PURE__*/_jsx(CardHeaderAction, {\n      className: classes.action,\n      styleProps: styleProps,\n      children: action\n    })]\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? CardHeader.propTypes\n/* remove-proptypes */\n= {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The action to display in the card header.\n   */\n  action: PropTypes.node,\n\n  /**\n   * The Avatar element to display.\n   */\n  avatar: PropTypes.node,\n\n  /**\n   * @ignore\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .elementType,\n\n  /**\n   * If `true`, `subheader` and `title` won't be wrapped by a Typography component.\n   * This can be useful to render an alternative Typography variant by wrapping\n   * the `title` text, and optional `subheader` text\n   * with the Typography component.\n   * @default false\n   */\n  disableTypography: PropTypes.bool,\n\n  /**\n   * The content of the component.\n   */\n  subheader: PropTypes.node,\n\n  /**\n   * These props will be forwarded to the subheader\n   * (as long as disableTypography is not `true`).\n   */\n  subheaderTypographyProps: PropTypes.object,\n\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.object,\n\n  /**\n   * The content of the component.\n   */\n  title: PropTypes.node,\n\n  /**\n   * These props will be forwarded to the title\n   * (as long as disableTypography is not `true`).\n   */\n  titleTypographyProps: PropTypes.object\n} : void 0;\nexport default CardHeader;"],"sourceRoot":""}