{"version":3,"sources":["components/dashboard/calendar/CalendarEventForm.js","components/dashboard/calendar/CalendarToolbar.js","pages/dashboard/Calendar.js","icons/Trash.js","icons/Plus.js"],"names":["getInitialValues","event","range","allDay","color","description","end","Date","addMinutes","start","title","submit","CalendarEventForm","props","onAddComplete","onCancel","onDeleteComplete","onEditComplete","dispatch","useDispatch","handleDelete","a","deleteEvent","id","console","error","initialValues","validationSchema","Yup","shape","max","when","schema","min","required","onSubmit","values","resetForm","setErrors","setStatus","setSubmitting","data","getTime","updateEvent","createEvent","success","toast","message","errors","handleBlur","handleChange","handleSubmit","isSubmitting","setFieldValue","touched","Box","sx","p","Typography","align","gutterBottom","variant","TextField","Boolean","fullWidth","helperText","label","name","onBlur","onChange","value","mt","FormControlLabel","control","Switch","checked","MobileDateTimePicker","date","renderInput","inputProps","FormHelperText","Divider","alignItems","display","IconButton","onClick","Trash","fontSize","flexGrow","Button","disabled","ml","type","viewOptions","icon","ViewConfigIcon","ViewWeekIcon","ViewDayIcon","ViewAgendaIcon","CalendarToolbar","onDateNext","onDatePrev","onDateToday","onViewChange","view","other","Grid","container","justifyContent","spacing","item","ButtonGroup","size","format","map","viewOption","Icon","Tooltip","newView","selectedEventSelector","state","calendar","events","selectedEventId","find","_event","FullCalendarWrapper","experimentalStyled","theme","palette","divider","text","primary","background","default","alpha","main","fontFamily","typography","paddingBottom","paddingTop","secondary","padding","Calendar","calendarRef","useRef","mobileDevice","useMediaQuery","breakpoints","down","useSelector","isModalOpen","selectedRange","selectedEvent","useState","setDate","setView","useEffect","gtm","push","getEvents","calendarEl","current","calendarApi","getApi","changeView","handleEventResize","handleEventDrop","handleModalClose","closeModal","backgroundColor","minHeight","py","Container","maxWidth","Breadcrumbs","aria-label","separator","ChevronRight","Link","component","RouterLink","to","m","openModal","startIcon","Plus","next","getDate","prev","today","Card","allDayMaintainDuration","dayMaxEventRows","droppable","editable","eventClick","arg","selectEvent","eventDisplay","eventDrop","eventResizableFromStart","eventResize","headerToolbar","height","initialDate","initialView","plugins","dayGridPlugin","interactionPlugin","listPlugin","timeGridPlugin","timelinePlugin","ref","rerenderDelay","select","unselect","selectRange","selectable","weekends","Dialog","onClose","open","createSvgIcon","xmlns","viewBox","fill","fillRule","d","clipRule"],"mappings":"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","file":"static/js/58.4823af23.chunk.js","sourcesContent":["import PropTypes from 'prop-types';\r\nimport toast from 'react-hot-toast';\r\nimport { addMinutes } from 'date-fns';\r\nimport * as Yup from 'yup';\r\nimport { Formik } from 'formik';\r\nimport MobileDateTimePicker from '@material-ui/lab/MobileDateTimePicker';\r\nimport {\r\n  Box,\r\n  Button,\r\n  Divider,\r\n  FormControlLabel,\r\n  FormHelperText,\r\n  IconButton,\r\n  Switch,\r\n  TextField,\r\n  Typography\r\n} from '@material-ui/core';\r\nimport TrashIcon from '../../../icons/Trash';\r\nimport { createEvent, deleteEvent, updateEvent } from '../../../slices/calendar';\r\nimport { useDispatch } from '../../../store';\r\n\r\nconst getInitialValues = (event, range) => {\r\n  if (event) {\r\n    return {\r\n      allDay: event.allDay || false,\r\n      color: event.color || '',\r\n      description: event.description || '',\r\n      end: event.end ? new Date(event.end) : addMinutes(new Date(), 30),\r\n      start: event.start ? new Date(event.start) : new Date(),\r\n      title: event.title || '',\r\n      submit: null\r\n    };\r\n  }\r\n\r\n  if (range) {\r\n    return {\r\n      allDay: false,\r\n      color: '',\r\n      description: '',\r\n      end: new Date(range.end),\r\n      start: new Date(range.start),\r\n      title: '',\r\n      submit: null\r\n    };\r\n  }\r\n\r\n  return {\r\n    allDay: false,\r\n    color: '',\r\n    description: '',\r\n    end: addMinutes(new Date(), 30),\r\n    start: new Date(),\r\n    title: '',\r\n    submit: null\r\n  };\r\n};\r\n\r\nconst CalendarEventForm = (props) => {\r\n  const { event, onAddComplete, onCancel, onDeleteComplete, onEditComplete, range } = props;\r\n  const dispatch = useDispatch();\r\n\r\n  const handleDelete = async () => {\r\n    try {\r\n      await dispatch(deleteEvent(event.id));\r\n\r\n      onDeleteComplete?.();\r\n    } catch (err) {\r\n      console.error(err);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Formik\r\n      initialValues={getInitialValues(event, range)}\r\n      validationSchema={Yup\r\n        .object()\r\n        .shape({\r\n          allDay: Yup.bool(),\r\n          description: Yup.string().max(5000),\r\n          end: Yup\r\n            .date()\r\n            .when('start',\r\n              (start, schema) => (start && schema.min(start,\r\n                'End date must be later than start date'))),\r\n          start: Yup.date(),\r\n          title: Yup\r\n            .string()\r\n            .max(255)\r\n            .required('Title is required')\r\n        })}\r\n      onSubmit={async (values, { resetForm, setErrors, setStatus, setSubmitting }) => {\r\n        try {\r\n          const data = {\r\n            allDay: values.allDay,\r\n            description: values.description,\r\n            end: values.end.getTime(),\r\n            start: values.start.getTime(),\r\n            title: values.title\r\n          };\r\n\r\n          if (event) {\r\n            await dispatch(updateEvent(event.id, data));\r\n          } else {\r\n            await dispatch(createEvent(data));\r\n          }\r\n\r\n          resetForm();\r\n          setStatus({ success: true });\r\n          setSubmitting(false);\r\n          toast.success('Calendar updated!');\r\n\r\n          if (!event && onAddComplete) {\r\n            onAddComplete();\r\n          }\r\n\r\n          if (event && onEditComplete) {\r\n            onEditComplete();\r\n          }\r\n        } catch (err) {\r\n          console.error(err);\r\n          toast.error('Something went wrong!');\r\n          setStatus({ success: false });\r\n          setErrors({ submit: err.message });\r\n          setSubmitting(false);\r\n        }\r\n      }}\r\n    >\r\n      {({\r\n        errors,\r\n        handleBlur,\r\n        handleChange,\r\n        handleSubmit,\r\n        isSubmitting,\r\n        setFieldValue,\r\n        touched,\r\n        values\r\n      }) => (\r\n        <form onSubmit={handleSubmit}>\r\n          <Box sx={{ p: 3 }}>\r\n            <Typography\r\n              align=\"center\"\r\n              color=\"textPrimary\"\r\n              gutterBottom\r\n              variant=\"h5\"\r\n            >\r\n              {event\r\n                ? 'Add Event'\r\n                : 'Edit Event'}\r\n            </Typography>\r\n          </Box>\r\n          <Box sx={{ p: 3 }}>\r\n            <TextField\r\n              error={Boolean(touched.title && errors.title)}\r\n              fullWidth\r\n              helperText={touched.title && errors.title}\r\n              label=\"Título\"\r\n              name=\"title\"\r\n              onBlur={handleBlur}\r\n              onChange={handleChange}\r\n              value={values.title}\r\n              variant=\"outlined\"\r\n            />\r\n            <Box sx={{ mt: 2 }}>\r\n              <TextField\r\n                error={Boolean(touched.description && errors.description)}\r\n                fullWidth\r\n                helperText={touched.description && errors.description}\r\n                label=\"Descrição\"\r\n                name=\"description\"\r\n                onBlur={handleBlur}\r\n                onChange={handleChange}\r\n                value={values.description}\r\n                variant=\"outlined\"\r\n              />\r\n            </Box>\r\n            <Box sx={{ mt: 2 }}>\r\n              <FormControlLabel\r\n                control={(\r\n                  <Switch\r\n                    checked={values.allDay}\r\n                    color=\"primary\"\r\n                    name=\"allDay\"\r\n                    onChange={handleChange}\r\n                  />\r\n                )}\r\n                label=\"Evento irá durar o dia todo?\"\r\n              />\r\n            </Box>\r\n            <Box sx={{ mt: 2 }}>\r\n              <MobileDateTimePicker\r\n                label=\"Início\"\r\n                onChange={(date) => setFieldValue('start', date)}\r\n                renderInput={(inputProps) => (\r\n                  <TextField\r\n                    fullWidth\r\n                    variant=\"outlined\"\r\n                    {...inputProps}\r\n                  />\r\n                )}\r\n                value={values.start}\r\n              />\r\n            </Box>\r\n            <Box sx={{ mt: 2 }}>\r\n              <MobileDateTimePicker\r\n                label=\"Data final\"\r\n                onChange={(date) => setFieldValue('end', date)}\r\n                renderInput={(inputProps) => (\r\n                  <TextField\r\n                    fullWidth\r\n                    variant=\"outlined\"\r\n                    {...inputProps}\r\n                  />\r\n                )}\r\n                value={values.end}\r\n              />\r\n            </Box>\r\n            {Boolean(touched.end && errors.end) && (\r\n              <Box sx={{ mt: 2 }}>\r\n                <FormHelperText error>\r\n                  {errors.end}\r\n                </FormHelperText>\r\n              </Box>\r\n            )}\r\n          </Box>\r\n          <Divider />\r\n          <Box\r\n            sx={{\r\n              alignItems: 'center',\r\n              display: 'flex',\r\n              p: 2\r\n            }}\r\n          >\r\n            {event && (\r\n              <IconButton onClick={() => handleDelete()}>\r\n                <TrashIcon fontSize=\"small\" />\r\n              </IconButton>\r\n            )}\r\n            <Box sx={{ flexGrow: 1 }} />\r\n            <Button\r\n              color=\"primary\"\r\n              onClick={onCancel}\r\n              variant=\"text\"\r\n            >\r\n              Cancelar\r\n            </Button>\r\n            <Button\r\n              color=\"primary\"\r\n              disabled={isSubmitting}\r\n              sx={{ ml: 1 }}\r\n              type=\"submit\"\r\n              variant=\"contained\"\r\n            >\r\n              Confirmar\r\n            </Button>\r\n          </Box>\r\n        </form>\r\n      )}\r\n    </Formik>\r\n  );\r\n};\r\n\r\nCalendarEventForm.propTypes = {\r\n  event: PropTypes.object,\r\n  onAddComplete: PropTypes.func,\r\n  onCancel: PropTypes.func,\r\n  onDeleteComplete: PropTypes.func,\r\n  onEditComplete: PropTypes.func,\r\n  range: PropTypes.object\r\n};\r\n\r\nexport default CalendarEventForm;\r\n","import PropTypes from 'prop-types';\r\nimport { format } from 'date-fns';\r\nimport { Box, Button, ButtonGroup, Grid, IconButton, Tooltip, Typography } from '@material-ui/core';\r\nimport ViewConfigIcon from '@material-ui/icons/ViewComfy';\r\nimport ViewWeekIcon from '@material-ui/icons/ViewWeek';\r\nimport ViewDayIcon from '@material-ui/icons/ViewDay';\r\nimport ViewAgendaIcon from '@material-ui/icons/ViewAgenda';\r\n\r\nconst viewOptions = [\r\n  {\r\n    icon: ViewConfigIcon,\r\n    label: 'Month',\r\n    value: 'dayGridMonth'\r\n  },\r\n  {\r\n    icon: ViewWeekIcon,\r\n    label: 'Week',\r\n    value: 'timeGridWeek'\r\n  },\r\n  {\r\n    icon: ViewDayIcon,\r\n    label: 'Day',\r\n    value: 'timeGridDay'\r\n  },\r\n  {\r\n    icon: ViewAgendaIcon,\r\n    label: 'Agenda',\r\n    value: 'listWeek'\r\n  }\r\n];\r\n\r\nconst CalendarToolbar = (props) => {\r\n  const { date, onDateNext, onDatePrev, onDateToday, onViewChange, view, ...other } = props;\r\n\r\n  const handleViewChange = (newView) => {\r\n    if (onViewChange) {\r\n      onViewChange(newView);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Grid\r\n      alignItems=\"center\"\r\n      container\r\n      justifyContent=\"space-between\"\r\n      spacing={3}\r\n      {...other}\r\n    >\r\n      <Grid item>\r\n        <ButtonGroup size=\"small\">\r\n          <Button onClick={onDatePrev}>\r\n            Prev\r\n          </Button>\r\n          <Button onClick={onDateToday}>\r\n            Today\r\n          </Button>\r\n          <Button onClick={onDateNext}>\r\n            Next\r\n          </Button>\r\n        </ButtonGroup>\r\n      </Grid>\r\n      <Grid item>\r\n        <Typography\r\n          color=\"textPrimary\"\r\n          variant=\"h3\"\r\n        >\r\n          {format(date, 'MMMM y')}\r\n        </Typography>\r\n      </Grid>\r\n      <Grid item>\r\n        <Box sx={{ color: 'text.primary' }}>\r\n          {viewOptions.map((viewOption) => {\r\n            const Icon = viewOption.icon;\r\n\r\n            return (\r\n              <Tooltip\r\n                key={viewOption.value}\r\n                title={viewOption.label}\r\n              >\r\n                <IconButton\r\n                  color={viewOption.value === view\r\n                    ? 'primary'\r\n                    : 'inherit'}\r\n                  onClick={() => handleViewChange(viewOption.value)}\r\n                >\r\n                  <Icon fontSize=\"small\" />\r\n                </IconButton>\r\n              </Tooltip>\r\n            );\r\n          })}\r\n        </Box>\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n};\r\n\r\nCalendarToolbar.propTypes = {\r\n  children: PropTypes.node,\r\n  date: PropTypes.instanceOf(Date).isRequired,\r\n  onAddClick: PropTypes.func,\r\n  onDateNext: PropTypes.func,\r\n  onDatePrev: PropTypes.func,\r\n  onDateToday: PropTypes.func,\r\n  onViewChange: PropTypes.func,\r\n  view: PropTypes.oneOf([\r\n    'dayGridMonth',\r\n    'timeGridWeek',\r\n    'timeGridDay',\r\n    'listWeek'\r\n  ])\r\n};\r\n\r\nexport default CalendarToolbar;\r\n","import { useState, useRef, useEffect } from 'react';\r\nimport { Link as RouterLink } from 'react-router-dom';\r\nimport { Helmet } from 'react-helmet-async';\r\nimport FullCalendar from '@fullcalendar/react';\r\nimport dayGridPlugin from '@fullcalendar/daygrid';\r\nimport interactionPlugin from '@fullcalendar/interaction';\r\nimport listPlugin from '@fullcalendar/list';\r\nimport timeGridPlugin from '@fullcalendar/timegrid';\r\nimport timelinePlugin from '@fullcalendar/timeline';\r\nimport {\r\n  Box,\r\n  Breadcrumbs,\r\n  Button,\r\n  Card,\r\n  Container,\r\n  Dialog,\r\n  Grid,\r\n  Link,\r\n  Typography\r\n} from '@material-ui/core';\r\nimport { alpha, experimentalStyled } from '@material-ui/core/styles';\r\nimport useMediaQuery from '@material-ui/core/useMediaQuery';\r\nimport { CalendarEventForm, CalendarToolbar } from '../../components/dashboard/calendar';\r\nimport ChevronRightIcon from '../../icons/ChevronRight';\r\nimport PlusIcon from '../../icons/Plus';\r\nimport gtm from '../../lib/gtm';\r\nimport {\r\n  closeModal,\r\n  getEvents,\r\n  openModal,\r\n  selectEvent,\r\n  selectRange,\r\n  updateEvent\r\n} from '../../slices/calendar';\r\nimport { useDispatch, useSelector } from '../../store';\r\n\r\nconst selectedEventSelector = (state) => {\r\n  const { events, selectedEventId } = state.calendar;\r\n\r\n  if (selectedEventId) {\r\n    return events.find((_event) => _event.id === selectedEventId);\r\n  }\r\n\r\n  return null;\r\n};\r\n\r\nconst FullCalendarWrapper = experimentalStyled('div')(({ theme }) => ({\r\n  '& .fc-license-message': {\r\n    display: 'none'\r\n  },\r\n  '& .fc': {\r\n    '--fc-bg-event-opacity': 1,\r\n    '--fc-border-color': theme.palette.divider,\r\n    '--fc-daygrid-event-dot-width': '10px',\r\n    '--fc-event-text-color': theme.palette.text.primary,\r\n    '--fc-list-event-hover-bg-color': theme.palette.background.default,\r\n    '--fc-neutral-bg-color': theme.palette.background.default,\r\n    '--fc-page-bg-color': theme.palette.background.default,\r\n    '--fc-today-bg-color': alpha(theme.palette.primary.main, 0.25),\r\n    color: theme.palette.text.primary,\r\n    fontFamily: theme.typography.fontFamily\r\n  },\r\n  '& .fc .fc-col-header-cell-cushion': {\r\n    paddingBottom: '10px',\r\n    paddingTop: '10px'\r\n  },\r\n  '& .fc .fc-day-other .fc-daygrid-day-top': {\r\n    color: theme.palette.text.secondary\r\n  },\r\n  '& .fc-daygrid-event': {\r\n    padding: '10px'\r\n  }\r\n}));\r\n\r\nconst Calendar = () => {\r\n  const dispatch = useDispatch();\r\n  const calendarRef = useRef(null);\r\n  const mobileDevice = useMediaQuery((theme) => theme.breakpoints.down('sm'));\r\n  const { events, isModalOpen, selectedRange } = useSelector((state) => state.calendar);\r\n  const selectedEvent = useSelector(selectedEventSelector);\r\n  const [date, setDate] = useState(new Date());\r\n  const [view, setView] = useState(mobileDevice\r\n    ? 'listWeek'\r\n    : 'dayGridMonth');\r\n\r\n  useEffect(() => {\r\n    gtm.push({ event: 'page_view' });\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    dispatch(getEvents());\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    const calendarEl = calendarRef.current;\r\n\r\n    if (calendarEl) {\r\n      const calendarApi = calendarEl.getApi();\r\n      const newView = mobileDevice ? 'listWeek' : 'dayGridMonth';\r\n\r\n      calendarApi.changeView(newView);\r\n      setView(newView);\r\n    }\r\n  }, [mobileDevice]);\r\n\r\n  const handleDateToday = () => {\r\n    const calendarEl = calendarRef.current;\r\n\r\n    if (calendarEl) {\r\n      const calendarApi = calendarEl.getApi();\r\n\r\n      calendarApi.today();\r\n      setDate(calendarApi.getDate());\r\n    }\r\n  };\r\n\r\n  const handleViewChange = (newView) => {\r\n    const calendarEl = calendarRef.current;\r\n\r\n    if (calendarEl) {\r\n      const calendarApi = calendarEl.getApi();\r\n\r\n      calendarApi.changeView(newView);\r\n      setView(newView);\r\n    }\r\n  };\r\n\r\n  const handleDatePrev = () => {\r\n    const calendarEl = calendarRef.current;\r\n\r\n    if (calendarEl) {\r\n      const calendarApi = calendarEl.getApi();\r\n\r\n      calendarApi.prev();\r\n      setDate(calendarApi.getDate());\r\n    }\r\n  };\r\n\r\n  const handleDateNext = () => {\r\n    const calendarEl = calendarRef.current;\r\n\r\n    if (calendarEl) {\r\n      const calendarApi = calendarEl.getApi();\r\n\r\n      calendarApi.next();\r\n      setDate(calendarApi.getDate());\r\n    }\r\n  };\r\n\r\n  const handleAddClick = () => {\r\n    dispatch(openModal());\r\n  };\r\n\r\n  const handleRangeSelect = (arg) => {\r\n    const calendarEl = calendarRef.current;\r\n\r\n    if (calendarEl) {\r\n      const calendarApi = calendarEl.getApi();\r\n\r\n      calendarApi.unselect();\r\n    }\r\n\r\n    dispatch(selectRange(arg.start.getTime(), arg.end.getTime()));\r\n  };\r\n\r\n  const handleEventSelect = (arg) => {\r\n    dispatch(selectEvent(arg.event.id));\r\n  };\r\n\r\n  const handleEventResize = async ({ event }) => {\r\n    try {\r\n      await dispatch(updateEvent(event.id, {\r\n        allDay: event.allDay,\r\n        start: event.start,\r\n        end: event.end\r\n      }));\r\n    } catch (err) {\r\n      console.error(err);\r\n    }\r\n  };\r\n\r\n  const handleEventDrop = async ({ event }) => {\r\n    try {\r\n      await dispatch(updateEvent(event.id, {\r\n        allDay: event.allDay,\r\n        start: event.start,\r\n        end: event.end\r\n      }));\r\n    } catch (err) {\r\n      console.error(err);\r\n    }\r\n  };\r\n\r\n  const handleModalClose = () => {\r\n    dispatch(closeModal());\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Helmet>\r\n        <title>AdminCert | Calendário & Eventos </title>\r\n      </Helmet>\r\n      <Box\r\n        sx={{\r\n          backgroundColor: 'background.default',\r\n          minHeight: '100%',\r\n          py: 8\r\n        }}\r\n      >\r\n        <Container maxWidth={false}>\r\n          <Grid\r\n            container\r\n            justifyContent=\"space-between\"\r\n            spacing={3}\r\n          >\r\n            <Grid item>\r\n              <Typography\r\n                color=\"textPrimary\"\r\n                variant=\"h5\"\r\n              >\r\n                Seu Planejamento com fácil acesso\r\n              </Typography>\r\n              <Breadcrumbs\r\n                aria-label=\"breadcrumb\"\r\n                separator={<ChevronRightIcon fontSize=\"small\" />}\r\n                sx={{ mt: 1 }}\r\n              >\r\n                <Link\r\n                  color=\"textPrimary\"\r\n                  component={RouterLink}\r\n                  to=\"/dashboard\"\r\n                  variant=\"subtitle2\"\r\n                >\r\n                  Dashboard\r\n                </Link>\r\n                <Typography\r\n                  color=\"textSecondary\"\r\n                  variant=\"subtitle2\"\r\n                >\r\n                  Calendário\r\n                </Typography>\r\n              </Breadcrumbs>\r\n            </Grid>\r\n            <Grid item>\r\n              <Box sx={{ m: -1 }}>\r\n                <Button\r\n                  color=\"primary\"\r\n                  onClick={handleAddClick}\r\n                  startIcon={<PlusIcon fontSize=\"small\" />}\r\n                  sx={{ m: 1 }}\r\n                  variant=\"contained\"\r\n                >\r\n                  Novo Evento\r\n                </Button>\r\n              </Box>\r\n            </Grid>\r\n          </Grid>\r\n          <Box sx={{ mt: 3 }}>\r\n            <CalendarToolbar\r\n              date={date}\r\n              onDateNext={handleDateNext}\r\n              onDatePrev={handleDatePrev}\r\n              onDateToday={handleDateToday}\r\n              onViewChange={handleViewChange}\r\n              view={view}\r\n            />\r\n          </Box>\r\n          <Card\r\n            sx={{\r\n              mt: 3,\r\n              p: 2\r\n            }}\r\n          >\r\n            <FullCalendarWrapper>\r\n              <FullCalendar\r\n                allDayMaintainDuration\r\n                dayMaxEventRows={3}\r\n                droppable\r\n                editable\r\n                eventClick={handleEventSelect}\r\n                eventDisplay=\"block\"\r\n                eventDrop={handleEventDrop}\r\n                eventResizableFromStart\r\n                eventResize={handleEventResize}\r\n                events={events}\r\n                headerToolbar={false}\r\n                height={800}\r\n                initialDate={date}\r\n                initialView={view}\r\n                plugins={[\r\n                  dayGridPlugin,\r\n                  interactionPlugin,\r\n                  listPlugin,\r\n                  timeGridPlugin,\r\n                  timelinePlugin\r\n                ]}\r\n                ref={calendarRef}\r\n                rerenderDelay={10}\r\n                select={handleRangeSelect}\r\n                selectable\r\n                weekends\r\n              />\r\n            </FullCalendarWrapper>\r\n          </Card>\r\n          <Dialog\r\n            fullWidth\r\n            maxWidth=\"sm\"\r\n            onClose={handleModalClose}\r\n            open={isModalOpen}\r\n          >\r\n            {/* Dialog renders its body even if not open */}\r\n            {isModalOpen && (\r\n              <CalendarEventForm\r\n                event={selectedEvent}\r\n                onAddComplete={handleModalClose}\r\n                onCancel={handleModalClose}\r\n                onDeleteComplete={handleModalClose}\r\n                onEditComplete={handleModalClose}\r\n                range={selectedRange}\r\n              />\r\n            )}\r\n          </Dialog>\r\n        </Container>\r\n      </Box>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Calendar;\r\n","import createSvgIcon from '@material-ui/core/utils/createSvgIcon';\r\n\r\nconst Trash = createSvgIcon(\r\n  <svg\r\n    xmlns=\"http://www.w3.org/2000/svg\"\r\n    viewBox=\"0 0 20 20\"\r\n    fill=\"currentColor\"\r\n  >\r\n    <path\r\n      fillRule=\"evenodd\"\r\n      d=\"M9 2a1 1 0 00-.894.553L7.382 4H4a1 1 0 000 2v10a2 2 0 002 2h8a2 2 0 002-2V6a1 1 0 100-2h-3.382l-.724-1.447A1 1 0 0011 2H9zM7 8a1 1 0 012 0v6a1 1 0 11-2 0V8zm5-1a1 1 0 00-1 1v6a1 1 0 102 0V8a1 1 0 00-1-1z\"\r\n      clipRule=\"evenodd\"\r\n    />\r\n  </svg>, 'Trash'\r\n);\r\n\r\nexport default Trash;\r\n","import createSvgIcon from '@material-ui/core/utils/createSvgIcon';\r\n\r\nconst Plus = createSvgIcon(\r\n  <svg\r\n    xmlns=\"http://www.w3.org/2000/svg\"\r\n    viewBox=\"0 0 20 20\"\r\n    fill=\"currentColor\"\r\n  >\r\n    <path\r\n      fillRule=\"evenodd\"\r\n      d=\"M10 5a1 1 0 011 1v3h3a1 1 0 110 2h-3v3a1 1 0 11-2 0v-3H6a1 1 0 110-2h3V6a1 1 0 011-1z\"\r\n      clipRule=\"evenodd\"\r\n    />\r\n  </svg>, 'Plus'\r\n);\r\n\r\nexport default Plus;\r\n"],"sourceRoot":""}