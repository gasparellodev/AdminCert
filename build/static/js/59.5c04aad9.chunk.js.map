{"version":3,"sources":["../node_modules/@material-ui/core/CardActions/cardActionsClasses.js","../node_modules/@material-ui/core/CardActions/CardActions.js","../node_modules/date-fns/esm/_lib/cloneObject/index.js","../node_modules/date-fns/esm/formatDistanceStrict/index.js","../node_modules/date-fns/esm/formatDistanceToNowStrict/index.js","../node_modules/@material-ui/utils/esm/usePreviousProps.js","../node_modules/@material-ui/unstyled/BadgeUnstyled/badgeUnstyledClasses.js","../node_modules/@material-ui/unstyled/BadgeUnstyled/BadgeUnstyled.js","../node_modules/@material-ui/core/Badge/Badge.js"],"names":["getCardActionsUtilityClass","slot","generateUtilityClass","generateUtilityClasses","CardActionsRoot","experimentalStyled","name","overridesResolver","props","styles","styleProps","_extends","root","disableSpacing","spacing","display","alignItems","padding","marginLeft","CardActions","React","inProps","ref","useThemeProps","className","other","_objectWithoutPropertiesLoose","classes","slots","composeClasses","useUtilityClasses","_jsx","clsx","cloneObject","dirtyObject","assign","MILLISECONDS_IN_MINUTE","MINUTES_IN_DAY","MINUTES_IN_MONTH","MINUTES_IN_YEAR","formatDistanceStrict","dirtyDate","dirtyBaseDate","options","arguments","length","undefined","requiredArgs","locale","defaultLocale","formatDistance","RangeError","comparison","compareAsc","isNaN","dateLeft","dateRight","localizeOptions","addSuffix","Boolean","toDate","roundingMethodFn","roundingMethod","String","Math","floor","ceil","round","unit","milliseconds","getTime","minutes","timezoneOffset","getTimezoneOffsetInMilliseconds","dstNormalizedMinutes","seconds","roundedMinutes","hours","days","months","years","formatDistanceToNowStrict","dirtyOptions","Date","now","usePreviousProps","value","current","getBadgeUtilityClass","badgeUnstyledClasses","BadgeUnstyled","anchorOrigin","anchorOriginProp","vertical","horizontal","classesProp","badgeContentProp","badgeContent","component","children","components","componentsProps","invisibleProp","invisible","max","maxProp","overlap","overlapProp","showZero","variant","variantProp","theme","prevProps","displayValue","badge","capitalize","Root","rootProps","Badge","badgeProps","_jsxs","isHostComponent","as","badgeClasses","BadgeRoot","styled","position","verticalAlign","flexShrink","BadgeBadge","color","flexDirection","flexWrap","justifyContent","alignContent","boxSizing","fontFamily","typography","fontWeight","fontWeightMedium","fontSize","pxToRem","minWidth","RADIUS_STANDARD","lineHeight","height","borderRadius","zIndex","transition","transitions","create","easing","easeInOut","duration","enteringScreen","backgroundColor","palette","main","contrastText","RADIUS_DOT","top","right","transform","transformOrigin","bottom","left","leavingScreen","_componentsProps$root","_componentsProps$badg","_useThemeProps","colorProp","extendUtilityClasses","Thumb"],"mappings":"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","file":"static/js/59.5c04aad9.chunk.js","sourcesContent":["import { generateUtilityClass, generateUtilityClasses } from '@material-ui/unstyled';\nexport function getCardActionsUtilityClass(slot) {\n  return generateUtilityClass('MuiCardActions', slot);\n}\nconst cardActionsClasses = generateUtilityClasses('MuiCardActions', ['root', 'spacing']);\nexport default cardActionsClasses;","import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { unstable_composeClasses as composeClasses } from '@material-ui/unstyled';\nimport experimentalStyled from '../styles/experimentalStyled';\nimport useThemeProps from '../styles/useThemeProps';\nimport { getCardActionsUtilityClass } from './cardActionsClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nconst useUtilityClasses = styleProps => {\n  const {\n    classes,\n    disableSpacing\n  } = styleProps;\n  const slots = {\n    root: ['root', !disableSpacing && 'spacing']\n  };\n  return composeClasses(slots, getCardActionsUtilityClass, classes);\n};\n\nconst CardActionsRoot = experimentalStyled('div', {}, {\n  name: 'MuiCardActions',\n  slot: 'Root',\n  overridesResolver: (props, styles) => {\n    const {\n      styleProps\n    } = props;\n    return _extends({}, styles.root, !styleProps.disableSpacing && styles.spacing);\n  }\n})(({\n  styleProps\n}) => _extends({\n  /* Styles applied to the root element. */\n  display: 'flex',\n  alignItems: 'center',\n  padding: 8\n}, !styleProps.disableSpacing && {\n  '& > :not(:first-of-type)': {\n    marginLeft: 8\n  }\n}));\nconst CardActions = /*#__PURE__*/React.forwardRef(function CardActions(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiCardActions'\n  });\n\n  const {\n    disableSpacing = false,\n    className\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, [\"disableSpacing\", \"className\"]);\n\n  const styleProps = _extends({}, props, {\n    disableSpacing\n  });\n\n  const classes = useUtilityClasses(styleProps);\n  return /*#__PURE__*/_jsx(CardActionsRoot, _extends({\n    className: clsx(classes.root, className),\n    styleProps: styleProps,\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? CardActions.propTypes\n/* remove-proptypes */\n= {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * If `true`, the actions do not have additional margin.\n   * @default false\n   */\n  disableSpacing: PropTypes.bool,\n\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.object\n} : void 0;\nexport default CardActions;","import assign from \"../assign/index.js\";\nexport default function cloneObject(dirtyObject) {\n  return assign({}, dirtyObject);\n}","import getTimezoneOffsetInMilliseconds from \"../_lib/getTimezoneOffsetInMilliseconds/index.js\";\nimport compareAsc from \"../compareAsc/index.js\";\nimport toDate from \"../toDate/index.js\";\nimport cloneObject from \"../_lib/cloneObject/index.js\";\nimport defaultLocale from \"../locale/en-US/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\nvar MILLISECONDS_IN_MINUTE = 1000 * 60;\nvar MINUTES_IN_DAY = 60 * 24;\nvar MINUTES_IN_MONTH = MINUTES_IN_DAY * 30;\nvar MINUTES_IN_YEAR = MINUTES_IN_DAY * 365;\n/**\n * @name formatDistanceStrict\n * @category Common Helpers\n * @summary Return the distance between the given dates in words.\n *\n * @description\n * Return the distance between the given dates in words, using strict units.\n * This is like `formatDistance`, but does not use helpers like 'almost', 'over',\n * 'less than' and the like.\n *\n * | Distance between dates | Result              |\n * |------------------------|---------------------|\n * | 0 ... 59 secs          | [0..59] seconds     |\n * | 1 ... 59 mins          | [1..59] minutes     |\n * | 1 ... 23 hrs           | [1..23] hours       |\n * | 1 ... 29 days          | [1..29] days        |\n * | 1 ... 11 months        | [1..11] months      |\n * | 1 ... N years          | [1..N]  years       |\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * - The function was renamed from `distanceInWordsStrict` to `formatDistanceStrict`\n *   to make its name consistent with `format` and `formatRelative`.\n *\n * - The order of arguments is swapped to make the function\n *   consistent with `differenceIn...` functions.\n *\n *   ```javascript\n *   // Before v2.0.0\n *\n *   distanceInWordsStrict(\n *     new Date(2015, 0, 2),\n *     new Date(2014, 6, 2)\n *   ) //=> '6 months'\n *\n *   // v2.0.0 onward\n *\n *   formatDistanceStrict(\n *     new Date(2014, 6, 2),\n *     new Date(2015, 0, 2)\n *   ) //=> '6 months'\n *   ```\n *\n * - `partialMethod` option is renamed to `roundingMethod`.\n *\n *   ```javascript\n *   // Before v2.0.0\n *\n *   distanceInWordsStrict(\n *     new Date(1986, 3, 4, 10, 32, 0),\n *     new Date(1986, 3, 4, 10, 33, 1),\n *     { partialMethod: 'ceil' }\n *   ) //=> '2 minutes'\n *\n *   // v2.0.0 onward\n *\n *   formatDistanceStrict(\n *     new Date(1986, 3, 4, 10, 33, 1),\n *     new Date(1986, 3, 4, 10, 32, 0),\n *     { roundingMethod: 'ceil' }\n *   ) //=> '2 minutes'\n *   ```\n *\n * - If `roundingMethod` is not specified, it now defaults to `round` instead of `floor`.\n *\n * - `unit` option now accepts one of the strings:\n *   'second', 'minute', 'hour', 'day', 'month' or 'year' instead of 's', 'm', 'h', 'd', 'M' or 'Y'\n *\n *   ```javascript\n *   // Before v2.0.0\n *\n *   distanceInWordsStrict(\n *     new Date(1986, 3, 4, 10, 32, 0),\n *     new Date(1986, 3, 4, 10, 33, 1),\n *     { unit: 'm' }\n *   )\n *\n *   // v2.0.0 onward\n *\n *   formatDistanceStrict(\n *     new Date(1986, 3, 4, 10, 33, 1),\n *     new Date(1986, 3, 4, 10, 32, 0),\n *     { unit: 'minute' }\n *   )\n *   ```\n *\n * @param {Date|Number} date - the date\n * @param {Date|Number} baseDate - the date to compare with\n * @param {Object} [options] - an object with options.\n * @param {Boolean} [options.addSuffix=false] - result indicates if the second date is earlier or later than the first\n * @param {'second'|'minute'|'hour'|'day'|'month'|'year'} [options.unit] - if specified, will force a unit\n * @param {'floor'|'ceil'|'round'} [options.roundingMethod='round'] - which way to round partial units\n * @param {Locale} [options.locale=defaultLocale] - the locale object. See [Locale]{@link https://date-fns.org/docs/Locale}\n * @returns {String} the distance in words\n * @throws {TypeError} 2 arguments required\n * @throws {RangeError} `date` must not be Invalid Date\n * @throws {RangeError} `baseDate` must not be Invalid Date\n * @throws {RangeError} `options.roundingMethod` must be 'floor', 'ceil' or 'round'\n * @throws {RangeError} `options.unit` must be 'second', 'minute', 'hour', 'day', 'month' or 'year'\n * @throws {RangeError} `options.locale` must contain `formatDistance` property\n *\n * @example\n * // What is the distance between 2 July 2014 and 1 January 2015?\n * const result = formatDistanceStrict(new Date(2014, 6, 2), new Date(2015, 0, 2))\n * //=> '6 months'\n *\n * @example\n * // What is the distance between 1 January 2015 00:00:15\n * // and 1 January 2015 00:00:00?\n * const result = formatDistanceStrict(\n *   new Date(2015, 0, 1, 0, 0, 15),\n *   new Date(2015, 0, 1, 0, 0, 0)\n * )\n * //=> '15 seconds'\n *\n * @example\n * // What is the distance from 1 January 2016\n * // to 1 January 2015, with a suffix?\n * const result = formatDistanceStrict(new Date(2015, 0, 1), new Date(2016, 0, 1), {\n *   addSuffix: true\n * })\n * //=> '1 year ago'\n *\n * @example\n * // What is the distance from 1 January 2016\n * // to 1 January 2015, in minutes?\n * const result = formatDistanceStrict(new Date(2016, 0, 1), new Date(2015, 0, 1), {\n *   unit: 'minute'\n * })\n * //=> '525600 minutes'\n *\n * @example\n * // What is the distance from 1 January 2015\n * // to 28 January 2015, in months, rounded up?\n * const result = formatDistanceStrict(new Date(2015, 0, 28), new Date(2015, 0, 1), {\n *   unit: 'month',\n *   roundingMethod: 'ceil'\n * })\n * //=> '1 month'\n *\n * @example\n * // What is the distance between 1 August 2016 and 1 January 2015 in Esperanto?\n * import { eoLocale } from 'date-fns/locale/eo'\n * const result = formatDistanceStrict(new Date(2016, 7, 1), new Date(2015, 0, 1), {\n *   locale: eoLocale\n * })\n * //=> '1 jaro'\n */\n\nexport default function formatDistanceStrict(dirtyDate, dirtyBaseDate) {\n  var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  requiredArgs(2, arguments);\n  var locale = options.locale || defaultLocale;\n\n  if (!locale.formatDistance) {\n    throw new RangeError('locale must contain localize.formatDistance property');\n  }\n\n  var comparison = compareAsc(dirtyDate, dirtyBaseDate);\n\n  if (isNaN(comparison)) {\n    throw new RangeError('Invalid time value');\n  }\n\n  var localizeOptions = cloneObject(options);\n  localizeOptions.addSuffix = Boolean(options.addSuffix);\n  localizeOptions.comparison = comparison;\n  var dateLeft;\n  var dateRight;\n\n  if (comparison > 0) {\n    dateLeft = toDate(dirtyBaseDate);\n    dateRight = toDate(dirtyDate);\n  } else {\n    dateLeft = toDate(dirtyDate);\n    dateRight = toDate(dirtyBaseDate);\n  }\n\n  var roundingMethod = options.roundingMethod == null ? 'round' : String(options.roundingMethod);\n  var roundingMethodFn;\n\n  if (roundingMethod === 'floor') {\n    roundingMethodFn = Math.floor;\n  } else if (roundingMethod === 'ceil') {\n    roundingMethodFn = Math.ceil;\n  } else if (roundingMethod === 'round') {\n    roundingMethodFn = Math.round;\n  } else {\n    throw new RangeError(\"roundingMethod must be 'floor', 'ceil' or 'round'\");\n  }\n\n  var milliseconds = dateRight.getTime() - dateLeft.getTime();\n  var minutes = milliseconds / MILLISECONDS_IN_MINUTE;\n  var timezoneOffset = getTimezoneOffsetInMilliseconds(dateRight) - getTimezoneOffsetInMilliseconds(dateLeft); // Use DST-normalized difference in minutes for years, months and days;\n  // use regular difference in minutes for hours, minutes and seconds.\n\n  var dstNormalizedMinutes = (milliseconds - timezoneOffset) / MILLISECONDS_IN_MINUTE;\n  var unit;\n\n  if (options.unit == null) {\n    if (minutes < 1) {\n      unit = 'second';\n    } else if (minutes < 60) {\n      unit = 'minute';\n    } else if (minutes < MINUTES_IN_DAY) {\n      unit = 'hour';\n    } else if (dstNormalizedMinutes < MINUTES_IN_MONTH) {\n      unit = 'day';\n    } else if (dstNormalizedMinutes < MINUTES_IN_YEAR) {\n      unit = 'month';\n    } else {\n      unit = 'year';\n    }\n  } else {\n    unit = String(options.unit);\n  } // 0 up to 60 seconds\n\n\n  if (unit === 'second') {\n    var seconds = roundingMethodFn(milliseconds / 1000);\n    return locale.formatDistance('xSeconds', seconds, localizeOptions); // 1 up to 60 mins\n  } else if (unit === 'minute') {\n    var roundedMinutes = roundingMethodFn(minutes);\n    return locale.formatDistance('xMinutes', roundedMinutes, localizeOptions); // 1 up to 24 hours\n  } else if (unit === 'hour') {\n    var hours = roundingMethodFn(minutes / 60);\n    return locale.formatDistance('xHours', hours, localizeOptions); // 1 up to 30 days\n  } else if (unit === 'day') {\n    var days = roundingMethodFn(dstNormalizedMinutes / MINUTES_IN_DAY);\n    return locale.formatDistance('xDays', days, localizeOptions); // 1 up to 12 months\n  } else if (unit === 'month') {\n    var months = roundingMethodFn(dstNormalizedMinutes / MINUTES_IN_MONTH);\n    return months === 12 && options.unit !== 'month' ? locale.formatDistance('xYears', 1, localizeOptions) : locale.formatDistance('xMonths', months, localizeOptions); // 1 year up to max Date\n  } else if (unit === 'year') {\n    var years = roundingMethodFn(dstNormalizedMinutes / MINUTES_IN_YEAR);\n    return locale.formatDistance('xYears', years, localizeOptions);\n  }\n\n  throw new RangeError(\"unit must be 'second', 'minute', 'hour', 'day', 'month' or 'year'\");\n}","import formatDistanceStrict from \"../formatDistanceStrict/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\n/**\n * @name formatDistanceToNowStrict\n * @category Common Helpers\n * @summary Return the distance between the given date and now in words.\n * @pure false\n *\n * @description\n * Return the distance between the given dates in words, using strict units.\n * This is like `formatDistance`, but does not use helpers like 'almost', 'over',\n * 'less than' and the like.\n *\n * | Distance between dates | Result              |\n * |------------------------|---------------------|\n * | 0 ... 59 secs          | [0..59] seconds     |\n * | 1 ... 59 mins          | [1..59] minutes     |\n * | 1 ... 23 hrs           | [1..23] hours       |\n * | 1 ... 29 days          | [1..29] days        |\n * | 1 ... 11 months        | [1..11] months      |\n * | 1 ... N years          | [1..N]  years       |\n *\n * @param {Date|Number} date - the given date\n * @param {Object} [options] - an object with options.\n * @param {Boolean} [options.addSuffix=false] - result indicates if the second date is earlier or later than the first\n * @param {'second'|'minute'|'hour'|'day'|'month'|'year'} [options.unit] - if specified, will force a unit\n * @param {'floor'|'ceil'|'round'} [options.roundingMethod='round'] - which way to round partial units\n * @param {Locale} [options.locale=defaultLocale] - the locale object. See [Locale]{@link https://date-fns.org/docs/Locale}\n * @returns {String} the distance in words\n * @throws {TypeError} 1 argument required\n * @throws {RangeError} `date` must not be Invalid Date\n * @throws {RangeError} `options.locale` must contain `formatDistance` property\n *\n * @example\n * // If today is 1 January 2015, what is the distance to 2 July 2014?\n * var result = formatDistanceToNowStrict(\n *   new Date(2014, 6, 2)\n * )\n * //=> '6 months'\n *\n * @example\n * // If now is 1 January 2015 00:00:00,\n * // what is the distance to 1 January 2015 00:00:15, including seconds?\n * var result = formatDistanceToNowStrict(\n *   new Date(2015, 0, 1, 0, 0, 15)\n * )\n * //=> '20 seconds'\n *\n * @example\n * // If today is 1 January 2015,\n * // what is the distance to 1 January 2016, with a suffix?\n * var result = formatDistanceToNowStrict(\n *   new Date(2016, 0, 1),\n *   {addSuffix: true}\n * )\n * //=> 'in 1 year'\n *\n * @example\n * // If today is 28 January 2015,\n * // what is the distance to 1 January 2015, in months, rounded up??\n * var result = formatDistanceToNowStrict(new Date(2015, 0, 1), {\n *   unit: 'month',\n *   roundingMethod: 'ceil'\n * })\n * //=> '1 month'\n *\n * @example\n * // If today is 1 January 2015,\n * // what is the distance to 1 August 2016 in Esperanto?\n * var eoLocale = require('date-fns/locale/eo')\n * var result = formatDistanceToNowStrict(\n *   new Date(2016, 7, 1),\n *   {locale: eoLocale}\n * )\n * //=> '1 jaro'\n */\n\nexport default function formatDistanceToNowStrict(dirtyDate, dirtyOptions) {\n  requiredArgs(1, arguments);\n  return formatDistanceStrict(dirtyDate, Date.now(), dirtyOptions);\n}","import * as React from 'react';\n\nconst usePreviousProps = value => {\n  const ref = React.useRef({});\n  React.useEffect(() => {\n    ref.current = value;\n  });\n  return ref.current;\n};\n\nexport default usePreviousProps;","import generateUtilityClasses from '../generateUtilityClasses';\nimport generateUtilityClass from '../generateUtilityClass';\nexport function getBadgeUtilityClass(slot) {\n  return generateUtilityClass('MuiBadge', slot);\n}\nconst badgeUnstyledClasses = generateUtilityClasses('MuiBadge', ['root', 'badge', 'dot', 'standard', 'anchorOriginTopLeftCircular', 'anchorOriginTopLeftRectangular', 'anchorOriginTopRightCircular', 'anchorOriginTopRightRectangular', 'anchorOriginBottomLeftCircular', 'anchorOriginBottomLeftRectangular', 'anchorOriginBottomRightCircular', 'anchorOriginBottomRightRectangular', 'invisible']);\nexport default badgeUnstyledClasses;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { unstable_capitalize as capitalize, usePreviousProps } from '@material-ui/utils';\nimport isHostComponent from '../utils/isHostComponent';\nimport composeClasses from '../composeClasses';\nimport { getBadgeUtilityClass } from './badgeUnstyledClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nconst useUtilityClasses = styleProps => {\n  const {\n    variant,\n    anchorOrigin,\n    overlap,\n    invisible,\n    classes\n  } = styleProps;\n  const slots = {\n    root: ['root'],\n    badge: ['badge', variant, `anchorOrigin${capitalize(anchorOrigin.vertical)}${capitalize(anchorOrigin.horizontal)}${capitalize(overlap)}`, invisible && 'invisible']\n  };\n  return composeClasses(slots, getBadgeUtilityClass, classes);\n};\n\nconst BadgeUnstyled = /*#__PURE__*/React.forwardRef(function BadgeUnstyled(props, ref) {\n  const {\n    anchorOrigin: anchorOriginProp = {\n      vertical: 'top',\n      horizontal: 'right'\n    },\n    classes: classesProp,\n    badgeContent: badgeContentProp,\n    component = 'span',\n    children,\n    className,\n    components = {},\n    componentsProps = {},\n    invisible: invisibleProp,\n    max: maxProp = 99,\n    overlap: overlapProp = 'rectangular',\n    showZero = false,\n    variant: variantProp = 'standard',\n\n    /* eslint-disable react/prop-types */\n    theme\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, [\"anchorOrigin\", \"classes\", \"badgeContent\", \"component\", \"children\", \"className\", \"components\", \"componentsProps\", \"invisible\", \"max\", \"overlap\", \"showZero\", \"variant\", \"theme\"]);\n\n  const prevProps = usePreviousProps({\n    anchorOrigin: anchorOriginProp,\n    badgeContent: badgeContentProp,\n    max: maxProp,\n    overlap: overlapProp,\n    variant: variantProp\n  });\n  let invisible = invisibleProp;\n\n  if (invisibleProp == null && (badgeContentProp === 0 && !showZero || badgeContentProp == null && variantProp !== 'dot')) {\n    invisible = true;\n  }\n\n  const {\n    anchorOrigin = anchorOriginProp,\n    badgeContent,\n    max = maxProp,\n    overlap = overlapProp,\n    variant = variantProp\n  } = invisible ? prevProps : props;\n\n  const styleProps = _extends({}, props, {\n    anchorOrigin,\n    badgeContent,\n    classes: classesProp,\n    invisible,\n    max,\n    overlap,\n    variant\n  });\n\n  let displayValue = '';\n\n  if (variant !== 'dot') {\n    displayValue = badgeContent > max ? `${max}+` : badgeContent;\n  }\n\n  const classes = useUtilityClasses(styleProps);\n  const Root = components.Root || component;\n  const rootProps = componentsProps.root || {};\n  const Badge = components.Badge || 'span';\n  const badgeProps = componentsProps.badge || {};\n  return /*#__PURE__*/_jsxs(Root, _extends({}, rootProps, !isHostComponent(Root) && {\n    as: component,\n    styleProps: _extends({}, styleProps, rootProps.styleProps),\n    theme\n  }, {\n    ref: ref\n  }, other, {\n    className: clsx(classes.root, rootProps.className, className),\n    children: [children, /*#__PURE__*/_jsx(Badge, _extends({}, badgeProps, !isHostComponent(Badge) && {\n      styleProps: _extends({}, styleProps, badgeProps.styleProps),\n      theme\n    }, {\n      className: clsx(classes.badge, badgeProps.className),\n      children: displayValue\n    }))]\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? BadgeUnstyled.propTypes\n/* remove-proptypes */\n= {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The anchor of the badge.\n   * @default {\n   *   vertical: 'top',\n   *   horizontal: 'right',\n   * }\n   */\n  anchorOrigin: PropTypes.shape({\n    horizontal: PropTypes.oneOf(['left', 'right']).isRequired,\n    vertical: PropTypes.oneOf(['bottom', 'top']).isRequired\n  }),\n\n  /**\n   * The content rendered within the badge.\n   */\n  badgeContent: PropTypes.node,\n\n  /**\n   * The badge will be added relative to this node.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n\n  /**\n   * The components used for each slot inside the Badge.\n   * Either a string to use a HTML element or a component.\n   * @default {}\n   */\n  components: PropTypes.shape({\n    Badge: PropTypes.elementType,\n    Root: PropTypes.elementType\n  }),\n\n  /**\n   * The props used for each slot inside the Badge.\n   * @default {}\n   */\n  componentsProps: PropTypes.object,\n\n  /**\n   * If `true`, the badge is invisible.\n   */\n  invisible: PropTypes.bool,\n\n  /**\n   * Max count to show.\n   * @default 99\n   */\n  max: PropTypes.number,\n\n  /**\n   * Wrapped shape the badge should overlap.\n   * @default 'rectangular'\n   */\n  overlap: PropTypes.oneOf(['circular', 'rectangular']),\n\n  /**\n   * Controls whether the badge is hidden when `badgeContent` is zero.\n   * @default false\n   */\n  showZero: PropTypes.bool,\n\n  /**\n   * The variant to use.\n   * @default 'standard'\n   */\n  variant: PropTypes.string\n} : void 0;\nexport default BadgeUnstyled;","import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { usePreviousProps } from '@material-ui/utils';\nimport { generateUtilityClasses, isHostComponent } from '@material-ui/unstyled';\nimport BadgeUnstyled, { badgeUnstyledClasses, getBadgeUtilityClass } from '@material-ui/unstyled/BadgeUnstyled';\nimport styled from '../styles/experimentalStyled';\nimport useThemeProps from '../styles/useThemeProps';\nimport capitalize from '../utils/capitalize';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport const badgeClasses = _extends({}, badgeUnstyledClasses, generateUtilityClasses('MuiBadge', ['colorError', 'colorPrimary', 'colorSecondary']));\nconst RADIUS_STANDARD = 10;\nconst RADIUS_DOT = 4;\n\nconst extendUtilityClasses = styleProps => {\n  const {\n    color,\n    classes = {}\n  } = styleProps;\n  return _extends({}, classes, {\n    badge: clsx(classes.badge, color !== 'default' && [getBadgeUtilityClass(`color${capitalize(color)}`), classes[`color${capitalize(color)}`]])\n  });\n};\n\nconst BadgeRoot = styled('span', {}, {\n  name: 'MuiBadge',\n  slot: 'Root',\n  overridesResolver: (props, styles) => styles.root\n})({\n  position: 'relative',\n  display: 'inline-flex',\n  // For correct alignment with the text.\n  verticalAlign: 'middle',\n  flexShrink: 0\n});\nconst BadgeBadge = styled('span', {}, {\n  name: 'MuiBadge',\n  slot: 'Badge',\n  overridesResolver: (props, styles) => {\n    const {\n      styleProps\n    } = props;\n    return _extends({}, styles.badge, styles[styleProps.variant], styles[`anchorOrigin${capitalize(styleProps.anchorOrigin.vertical)}${capitalize(styleProps.anchorOrigin.horizontal)}${capitalize(styleProps.overlap)}`], styleProps.color !== 'default' && styles[`color${capitalize(styleProps.color)}`], styleProps.invisible && styles.invisible);\n  }\n})(({\n  theme,\n  styleProps\n}) => _extends({\n  display: 'flex',\n  flexDirection: 'row',\n  flexWrap: 'wrap',\n  justifyContent: 'center',\n  alignContent: 'center',\n  alignItems: 'center',\n  position: 'absolute',\n  boxSizing: 'border-box',\n  fontFamily: theme.typography.fontFamily,\n  fontWeight: theme.typography.fontWeightMedium,\n  fontSize: theme.typography.pxToRem(12),\n  minWidth: RADIUS_STANDARD * 2,\n  lineHeight: 1,\n  padding: '0 6px',\n  height: RADIUS_STANDARD * 2,\n  borderRadius: RADIUS_STANDARD,\n  zIndex: 1,\n  // Render the badge on top of potential ripples.\n  transition: theme.transitions.create('transform', {\n    easing: theme.transitions.easing.easeInOut,\n    duration: theme.transitions.duration.enteringScreen\n  })\n}, styleProps.color !== 'default' && {\n  backgroundColor: theme.palette[styleProps.color].main,\n  color: theme.palette[styleProps.color].contrastText\n}, styleProps.variant === 'dot' && {\n  borderRadius: RADIUS_DOT,\n  height: RADIUS_DOT * 2,\n  minWidth: RADIUS_DOT * 2,\n  padding: 0\n}, styleProps.anchorOrigin.vertical === 'top' && styleProps.anchorOrigin.horizontal === 'right' && styleProps.overlap === 'rectangular' && {\n  top: 0,\n  right: 0,\n  transform: 'scale(1) translate(50%, -50%)',\n  transformOrigin: '100% 0%',\n  [`&.${badgeClasses.invisible}`]: {\n    transform: 'scale(0) translate(50%, -50%)'\n  }\n}, styleProps.anchorOrigin.vertical === 'bottom' && styleProps.anchorOrigin.horizontal === 'right' && styleProps.overlap === 'rectangular' && {\n  bottom: 0,\n  right: 0,\n  transform: 'scale(1) translate(50%, 50%)',\n  transformOrigin: '100% 100%',\n  [`&.${badgeClasses.invisible}`]: {\n    transform: 'scale(0) translate(50%, 50%)'\n  }\n}, styleProps.anchorOrigin.vertical === 'top' && styleProps.anchorOrigin.horizontal === 'left' && styleProps.overlap === 'rectangular' && {\n  top: 0,\n  left: 0,\n  transform: 'scale(1) translate(-50%, -50%)',\n  transformOrigin: '0% 0%',\n  [`&.${badgeClasses.invisible}`]: {\n    transform: 'scale(0) translate(-50%, -50%)'\n  }\n}, styleProps.anchorOrigin.vertical === 'bottom' && styleProps.anchorOrigin.horizontal === 'left' && styleProps.overlap === 'rectangular' && {\n  bottom: 0,\n  left: 0,\n  transform: 'scale(1) translate(-50%, 50%)',\n  transformOrigin: '0% 100%',\n  [`&.${badgeClasses.invisible}`]: {\n    transform: 'scale(0) translate(-50%, 50%)'\n  }\n}, styleProps.anchorOrigin.vertical === 'top' && styleProps.anchorOrigin.horizontal === 'right' && styleProps.overlap === 'circular' && {\n  top: '14%',\n  right: '14%',\n  transform: 'scale(1) translate(50%, -50%)',\n  transformOrigin: '100% 0%',\n  [`&.${badgeClasses.invisible}`]: {\n    transform: 'scale(0) translate(50%, -50%)'\n  }\n}, styleProps.anchorOrigin.vertical === 'bottom' && styleProps.anchorOrigin.horizontal === 'right' && styleProps.overlap === 'circular' && {\n  bottom: '14%',\n  right: '14%',\n  transform: 'scale(1) translate(50%, 50%)',\n  transformOrigin: '100% 100%',\n  [`&.${badgeClasses.invisible}`]: {\n    transform: 'scale(0) translate(50%, 50%)'\n  }\n}, styleProps.anchorOrigin.vertical === 'top' && styleProps.anchorOrigin.horizontal === 'left' && styleProps.overlap === 'circular' && {\n  top: '14%',\n  left: '14%',\n  transform: 'scale(1) translate(-50%, -50%)',\n  transformOrigin: '0% 0%',\n  [`&.${badgeClasses.invisible}`]: {\n    transform: 'scale(0) translate(-50%, -50%)'\n  }\n}, styleProps.anchorOrigin.vertical === 'bottom' && styleProps.anchorOrigin.horizontal === 'left' && styleProps.overlap === 'circular' && {\n  bottom: '14%',\n  left: '14%',\n  transform: 'scale(1) translate(-50%, 50%)',\n  transformOrigin: '0% 100%',\n  [`&.${badgeClasses.invisible}`]: {\n    transform: 'scale(0) translate(-50%, 50%)'\n  }\n}, styleProps.invisible && {\n  transition: theme.transitions.create('transform', {\n    easing: theme.transitions.easing.easeInOut,\n    duration: theme.transitions.duration.leavingScreen\n  })\n}));\nconst Badge = /*#__PURE__*/React.forwardRef(function Badge(inProps, ref) {\n  var _componentsProps$root, _componentsProps$badg;\n\n  const _useThemeProps = useThemeProps({\n    props: inProps,\n    name: 'MuiBadge'\n  }),\n        props = _objectWithoutPropertiesLoose(_useThemeProps, [\"isRtl\"]);\n\n  const {\n    components = {},\n    componentsProps = {},\n    color: colorProp = 'default',\n    invisible: invisibleProp,\n    badgeContent: badgeContentProp,\n    showZero = false,\n    variant: variantProp = 'standard'\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, [\"components\", \"componentsProps\", \"color\", \"invisible\", \"badgeContent\", \"showZero\", \"variant\"]);\n\n  const prevProps = usePreviousProps({\n    color: colorProp\n  });\n  let invisible = invisibleProp;\n\n  if (invisibleProp == null && (badgeContentProp === 0 && !showZero || badgeContentProp == null && variantProp !== 'dot')) {\n    invisible = true;\n  }\n\n  const {\n    color = colorProp\n  } = invisible ? prevProps : props;\n\n  const styleProps = _extends({}, props, {\n    invisible,\n    color\n  });\n\n  const classes = extendUtilityClasses(styleProps);\n  return /*#__PURE__*/_jsx(BadgeUnstyled, _extends({\n    invisible: invisibleProp,\n    badgeContent: badgeContentProp,\n    showZero: showZero,\n    variant: variantProp\n  }, other, {\n    components: _extends({\n      Root: BadgeRoot,\n      Badge: BadgeBadge\n    }, components),\n    componentsProps: {\n      root: _extends({}, componentsProps.root, (!components.Root || !isHostComponent(components.Root)) && {\n        styleProps: _extends({}, (_componentsProps$root = componentsProps.root) === null || _componentsProps$root === void 0 ? void 0 : _componentsProps$root.styleProps, {\n          color\n        })\n      }),\n      badge: _extends({}, componentsProps.badge, (!components.Thumb || !isHostComponent(components.Thumb)) && {\n        styleProps: _extends({}, (_componentsProps$badg = componentsProps.badge) === null || _componentsProps$badg === void 0 ? void 0 : _componentsProps$badg.styleProps, {\n          color\n        })\n      })\n    },\n    classes: classes,\n    ref: ref\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? Badge.propTypes\n/* remove-proptypes */\n= {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The anchor of the badge.\n   * @default {\n   *   vertical: 'top',\n   *   horizontal: 'right',\n   * }\n   */\n  anchorOrigin: PropTypes.shape({\n    horizontal: PropTypes.oneOf(['left', 'right']).isRequired,\n    vertical: PropTypes.oneOf(['bottom', 'top']).isRequired\n  }),\n\n  /**\n   * The content rendered within the badge.\n   */\n  badgeContent: PropTypes.node,\n\n  /**\n   * The badge will be added relative to this node.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * The color of the component. It supports those theme colors that make sense for this component.\n   * @default 'default'\n   */\n  color: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .oneOfType([PropTypes.oneOf(['default', 'error', 'primary', 'secondary']), PropTypes.string]),\n\n  /**\n   * The components used for each slot inside the Badge.\n   * Either a string to use a HTML element or a component.\n   * @default {}\n   */\n  components: PropTypes.shape({\n    Badge: PropTypes.elementType,\n    Root: PropTypes.elementType\n  }),\n\n  /**\n   * The props used for each slot inside the Badge.\n   * @default {}\n   */\n  componentsProps: PropTypes.object,\n\n  /**\n   * If `true`, the badge is invisible.\n   */\n  invisible: PropTypes.bool,\n\n  /**\n   * Max count to show.\n   * @default 99\n   */\n  max: PropTypes.number,\n\n  /**\n   * Wrapped shape the badge should overlap.\n   * @default 'rectangular'\n   */\n  overlap: PropTypes.oneOf(['circular', 'rectangular']),\n\n  /**\n   * Controls whether the badge is hidden when `badgeContent` is zero.\n   * @default false\n   */\n  showZero: PropTypes.bool,\n\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.object,\n\n  /**\n   * The variant to use.\n   * @default 'standard'\n   */\n  variant: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .oneOfType([PropTypes.oneOf(['dot', 'standard']), PropTypes.string])\n} : void 0;\nexport default Badge;"],"sourceRoot":""}