{"version":3,"sources":["components/widgets/inputs/InputCheckbox.js","components/widgets/inputs/InputRadio.js","components/widgets/inputs/InputSwitch.js","components/widgets/inputs/InputTextField.js","components/widgets/inputs/InputMixed.js","pages/browse/BrowseInputs.js","icons/Moon.js","icons/Sun.js","components/WidgetPreviewer.js"],"names":["InputCheckbox","Box","sx","backgroundColor","p","Typography","color","variant","py","FormGroup","pl","FormControlLabel","control","Checkbox","defaultChecked","label","typeOptions","description","title","value","InputRadio","pb","pt","RadioGroup","mb","map","typeOption","index","Paper","alignItems","display","padding","Radio","disabled","ml","InputSwitch","Grid","container","spacing","item","md","xs","Switch","InputTextField","sm","TextField","fullWidth","required","type","InputMixed","mt","MobileDateTimePicker","onChange","renderInput","inputProps","Date","FormControl","InputLabel","Select","defaultValue","MenuItem","BrowseInputs","useEffect","gtm","push","event","Container","maxWidth","WidgetPreviewer","element","name","Moon","createSvgIcon","xmlns","viewBox","fill","d","Sun","fillRule","clipRule","props","other","settings","useSettings","useState","theme","selectedTheme","setSelectedTheme","createCustomTheme","Card","CardHeader","action","IconButton","onClick","prevSelectedTheme","THEMES","LIGHT","DARK","fontSize","Divider","ThemeProvider"],"mappings":"mPAsEeA,EApEO,kBACpB,eAACC,EAAA,EAAD,CACEC,GAAI,CACFC,gBAAiB,mBACjBC,EAAG,GAHP,UAME,cAACC,EAAA,EAAD,CACEC,MAAM,cACNC,QAAQ,YAFV,oBAMA,cAACF,EAAA,EAAD,CACEC,MAAM,gBACNJ,GAAI,CAAEM,GAAI,GACVD,QAAQ,QAHV,oEAOA,eAACE,EAAA,EAAD,CAAWP,GAAI,CAAEQ,GAAI,GAArB,UACE,cAACC,EAAA,EAAD,CACEC,QACE,cAACC,EAAA,EAAD,CACEP,MAAM,UACNQ,gBAAc,IAGlBC,MACE,cAACV,EAAA,EAAD,CACEC,MAAM,cACNC,QAAQ,QAFV,4BAQJ,cAACI,EAAA,EAAD,CACEC,QAAS,cAACC,EAAA,EAAD,CAAUP,MAAM,YACzBS,MACE,cAACV,EAAA,EAAD,CACEC,MAAM,cACNC,QAAQ,QAFV,kCAQJ,cAACI,EAAA,EAAD,CACEC,QACE,cAACC,EAAA,EAAD,CACEP,MAAM,UACNQ,gBAAc,IAGlBC,MACE,cAACV,EAAA,EAAD,CACEC,MAAM,cACNC,QAAQ,QAFV,mC,2BCxDJS,EAAc,CAClB,CACEC,YAAa,0DACbC,MAAO,mBACPC,MAAO,cAET,CACEF,YAAa,uEACbC,MAAO,2BACPC,MAAO,gBAET,CACEF,YAAa,uEACbC,MAAO,2BACPC,MAAO,cAiFIC,EA7EI,kBACjB,eAACnB,EAAA,EAAD,CACEC,GAAI,CACFC,gBAAiB,mBACjBC,EAAG,GAHP,UAME,cAACC,EAAA,EAAD,CACEC,MAAM,cACNC,QAAQ,KAFV,sCAMA,cAACF,EAAA,EAAD,CACEC,MAAM,gBACNJ,GAAI,CACFmB,GAAI,IACJC,GAAI,GAENf,QAAQ,QANV,mHAWA,cAACgB,EAAA,EAAD,CACErB,GAAI,CACF,yBAA0B,CACxBsB,GAAI,IAHV,SAOGR,EAAYS,KAAI,SAACC,EAAYC,GAAb,OACf,cAACC,EAAA,EAAD,CAEE1B,GAAI,CACF2B,WAAY,aACZC,QAAS,OACTC,QAAS,GAEXxB,QAAQ,WAPV,SASE,cAACI,EAAA,EAAD,CACEC,QAAS,cAACoB,EAAA,EAAD,CAAO1B,MAAM,YACtB2B,SAAoB,IAAVN,IAAe,EAEzBZ,MACE,eAACd,EAAA,EAAD,CAAKC,GAAI,CAAEgC,GAAI,GAAf,UACE,cAAC7B,EAAA,EAAD,CACEH,GAAI,CACFI,MAAiB,IAAVqB,EACH,kBACA,gBAENpB,QAAQ,YANV,SAQGmB,EAAWR,QAEd,cAACb,EAAA,EAAD,CACEH,GAAI,CACFI,MAAiB,IAAVqB,EACH,kBACA,kBAENpB,QAAQ,QANV,SAQGmB,EAAWT,iBAIlBE,MAAOO,EAAWP,OAzBbO,EAAWP,QAXbO,EAAWP,gB,kBCQXgB,EA3DK,kBAClB,cAAClC,EAAA,EAAD,CACEC,GAAI,CACFC,gBAAiB,mBACjBC,EAAG,KAHP,SAME,eAACgC,EAAA,EAAD,CACEC,WAAS,EACTC,QAAS,EAFX,UAIE,eAACF,EAAA,EAAD,CACEG,MAAI,EACJC,GAAI,EACJC,GAAI,GAHN,UAKE,cAACpC,EAAA,EAAD,CACEC,MAAM,cACNC,QAAQ,YAFV,4BAMA,cAACF,EAAA,EAAD,CACEC,MAAM,gBACNJ,GAAI,CAAEM,GAAI,GACVD,QAAQ,QAHV,kFAQA,cAACmC,EAAA,EAAD,CACE5B,gBAAc,EACdR,MAAM,eAGV,eAAC8B,EAAA,EAAD,CACEG,MAAI,EACJC,GAAI,EACJC,GAAI,GAHN,UAKE,cAACpC,EAAA,EAAD,CACEC,MAAM,cACNC,QAAQ,YAFV,mBAMA,cAACF,EAAA,EAAD,CACEC,MAAM,gBACNJ,GAAI,CAAEM,GAAI,GACVD,QAAQ,QAHV,yEAOA,cAACmC,EAAA,EAAD,CAAQpC,MAAM,qB,SC0BPqC,EA/EQ,kBACrB,cAAC1C,EAAA,EAAD,CACEC,GAAI,CACFC,gBAAiB,mBACjBC,EAAG,GAHP,SAME,cAACgC,EAAA,EAAD,CAAMC,WAAS,EAAf,SACE,cAACD,EAAA,EAAD,CACEG,MAAI,EACJC,GAAI,EACJC,GAAI,GAHN,SAKE,eAACL,EAAA,EAAD,CACEC,WAAS,EACTC,QAAS,EAFX,UAIE,cAACF,EAAA,EAAD,CACEG,MAAI,EACJK,GAAI,EACJH,GAAI,GAHN,SAKE,cAACI,EAAA,EAAD,CACEC,WAAS,EACT/B,MAAM,OACNR,QAAQ,eAGZ,cAAC6B,EAAA,EAAD,CACEG,MAAI,EACJK,GAAI,EACJH,GAAI,GAHN,SAKE,cAACI,EAAA,EAAD,CACEC,WAAS,EACT/B,MAAM,gBACNgC,UAAQ,EACRC,KAAK,QACLzC,QAAQ,eAGZ,cAAC6B,EAAA,EAAD,CACEG,MAAI,EACJE,GAAI,GAFN,SAIE,cAACI,EAAA,EAAD,CACEC,WAAS,EACT/B,MAAM,eACNR,QAAQ,eAGZ,cAAC6B,EAAA,EAAD,CACEG,MAAI,EACJK,GAAI,EACJH,GAAI,GAHN,SAKE,cAACI,EAAA,EAAD,CACEC,WAAS,EACT/B,MAAM,eACNR,QAAQ,eAGZ,cAAC6B,EAAA,EAAD,CACEG,MAAI,EACJK,GAAI,EACJH,GAAI,GAHN,SAKE,cAACI,EAAA,EAAD,CACEC,WAAS,EACT/B,MAAM,OACNR,QAAQ,yB,sDCqCP0C,EAhGI,kBACjB,eAAChD,EAAA,EAAD,CACEC,GAAI,CACFC,gBAAiB,mBACjBC,EAAG,GAHP,UAME,eAACH,EAAA,EAAD,CACEC,GAAI,CACF2B,WAAY,SACZC,QAAS,QAHb,UAME,cAACY,EAAA,EAAD,CAAQpC,MAAM,YACd,cAACD,EAAA,EAAD,CACEC,MAAM,cACNC,QAAQ,QAFV,iCAOF,cAACN,EAAA,EAAD,CAAKC,GAAI,CAAEgD,GAAI,GAAf,SACE,cAACC,EAAA,EAAD,CACEpC,MAAM,aACNqC,SAAU,aAEVC,YAAa,SAACC,GAAD,OACX,cAACT,EAAA,EAAD,aACEC,WAAS,EACTvC,QAAQ,YACJ+C,KAGRnC,MAAO,IAAIoC,SAGf,cAACtD,EAAA,EAAD,CAAKC,GAAI,CAAEgD,GAAI,GAAf,SACE,eAACM,EAAA,EAAD,CACEV,WAAS,EACTvC,QAAQ,WAFV,UAIE,cAACkD,EAAA,EAAD,uBAGA,eAACC,EAAA,EAAD,CACEC,aAAa,cACb5C,MAAM,WAFR,UAIE,cAAC6C,EAAA,EAAD,CAAUzC,MAAM,cAAhB,yBAGA,cAACyC,EAAA,EAAD,CAAUzC,MAAM,SAAhB,4BAMN,eAAClB,EAAA,EAAD,CACEC,GAAI,CACF2B,WAAY,SACZC,QAAS,OACToB,GAAI,GAJR,UAOE,cAACrC,EAAA,EAAD,CACEP,MAAM,UACNQ,gBAAc,IAEhB,cAACT,EAAA,EAAD,CACEC,MAAM,cACNC,QAAQ,QAFV,mCAOF,eAACN,EAAA,EAAD,CACEC,GAAI,CACF2B,WAAY,SACZC,QAAS,OACToB,GAAI,GAJR,UAOE,cAACrC,EAAA,EAAD,CACEC,gBAAc,EACdR,MAAM,YAER,cAACD,EAAA,EAAD,CACEC,MAAM,cACNC,QAAQ,QAFV,oC,kBC5CSsD,UA5CM,WAKnB,OAJAC,qBAAU,WACRC,IAAIC,KAAK,CAAEC,MAAO,gBACjB,IAGD,qCACE,cAAC,IAAD,UACE,wEAEF,cAAChE,EAAA,EAAD,CACEC,GAAI,CACFC,gBAAiB,mBACjBkB,GAAI,GACJC,GAAI,GAJR,SAOE,eAAC4C,EAAA,EAAD,CAAWC,SAAS,KAApB,UACE,cAACC,EAAA,EAAD,CACEC,QAAS,cAAC,EAAD,IACTC,KAAK,kCAEP,cAACF,EAAA,EAAD,CACEC,QAAS,cAAC,EAAD,IACTC,KAAK,sCAEP,cAACF,EAAA,EAAD,CACEC,QAAS,cAAC,EAAD,IACTC,KAAK,gCAEP,cAACF,EAAA,EAAD,CACEC,QAAS,cAAC,EAAD,IACTC,KAAK,qCAEP,cAACF,EAAA,EAAD,CACEC,QAAS,cAAC,EAAD,IACTC,KAAK,+B,iJCnCFC,EAVFC,YACX,qBACEC,MAAM,6BACNC,QAAQ,YACRC,KAAK,eAHP,SAKE,sBAAMC,EAAE,wEACF,QCOKC,EAdHL,YACV,qBACEC,MAAM,6BACNC,QAAQ,YACRC,KAAK,eAHP,SAKE,sBACEG,SAAS,UACTF,EAAE,ufACFG,SAAS,cAEL,O,8BCmDKX,IAvDS,SAACY,GACvB,IAAQX,EAA4BW,EAA5BX,QAASC,EAAmBU,EAAnBV,KAASW,EAA1B,YAAoCD,EAApC,GACQE,EAAaC,cAAbD,SACR,EAA0CE,mBAASF,EAASG,OAA5D,mBAAOC,EAAP,KAAsBC,EAAtB,KAEAzB,qBAAU,WACRyB,EAAiBL,EAASG,SACzB,CAACH,EAASG,QAEb,IAYMA,EAAQG,YAAkB,2BAC3BN,GAD0B,IAE7BG,MAAOC,KAGT,OACE,eAACG,EAAA,EAAD,yBACElF,QAAQ,WACRL,GAAI,CAAEsB,GAAI,IACNyD,GAHN,cAKE,cAACS,EAAA,EAAD,CACEC,OACE,cAACC,EAAA,EAAD,CAAYC,QAzBC,kBAAMN,GAAiB,SAACO,GAC3C,OAAIA,IAAsBC,IAAOC,MAC3Bd,EAASG,QAAUU,IAAOC,MACrBD,IAAOE,KAGTf,EAASG,MAGXU,IAAOC,UAgBR,SACqB,UAAlBV,EACG,cAAC,EAAD,CAAUY,SAAS,UACnB,cAAC,EAAD,CAASA,SAAS,YAG1BhF,MAAOoD,IAET,cAAC6B,EAAA,EAAD,IACA,cAACC,EAAA,EAAD,CAAef,MAAOA,EAAtB,SACGhB","file":"static/js/61.1e0f913f.chunk.js","sourcesContent":["import { Box, Checkbox, FormControlLabel, FormGroup, Typography } from '@material-ui/core';\n\nconst InputCheckbox = () => (\n  <Box\n    sx={{\n      backgroundColor: 'background.paper',\n      p: 2\n    }}\n  >\n    <Typography\n      color=\"textPrimary\"\n      variant=\"subtitle2\"\n    >\n      System\n    </Typography>\n    <Typography\n      color=\"textSecondary\"\n      sx={{ py: 1 }}\n      variant=\"body2\"\n    >\n      You will receive emails in your business email address\n    </Typography>\n    <FormGroup sx={{ pl: 1 }}>\n      <FormControlLabel\n        control={(\n          <Checkbox\n            color=\"primary\"\n            defaultChecked\n          />\n        )}\n        label={(\n          <Typography\n            color=\"textPrimary\"\n            variant=\"body1\"\n          >\n            Email alerts\n          </Typography>\n        )}\n      />\n      <FormControlLabel\n        control={<Checkbox color=\"primary\" />}\n        label={(\n          <Typography\n            color=\"textPrimary\"\n            variant=\"body1\"\n          >\n            Push Notifications\n          </Typography>\n        )}\n      />\n      <FormControlLabel\n        control={(\n          <Checkbox\n            color=\"primary\"\n            defaultChecked\n          />\n        )}\n        label={(\n          <Typography\n            color=\"textPrimary\"\n            variant=\"body1\"\n          >\n            Text message\n          </Typography>\n        )}\n      />\n    </FormGroup>\n  </Box>\n);\n\nexport default InputCheckbox;\n","import { Box, FormControlLabel, Paper, Radio, RadioGroup, Typography } from '@material-ui/core';\n\nconst typeOptions = [\n  {\n    description: 'I\\'m looking for teammates to join in a personal project',\n    title: 'I\\'m a freelancer',\n    value: 'freelancer'\n  },\n  {\n    description: 'I\\'m looking for freelancer or contractors to take care of my project',\n    title: 'Iâ€™m a project owner',\n    value: 'projectOwner'\n  },\n  {\n    description: 'I\\'m looking for freelancer or contractors to take care of my project',\n    title: 'I want to join affiliate',\n    value: 'affiliate'\n  }\n];\n\nconst InputRadio = () => (\n  <Box\n    sx={{\n      backgroundColor: 'background.paper',\n      p: 2\n    }}\n  >\n    <Typography\n      color=\"textPrimary\"\n      variant=\"h5\"\n    >\n      Please select one option\n    </Typography>\n    <Typography\n      color=\"textSecondary\"\n      sx={{\n        pb: 3.5,\n        pt: 1\n      }}\n      variant=\"body1\"\n    >\n      Proin tincidunt lacus sed ante efficitur efficitur.\n      Quisque aliquam fringilla velit sit amet euismod.\n    </Typography>\n    <RadioGroup\n      sx={{\n        '& > *:not(:last-child)': {\n          mb: 2\n        }\n      }}\n    >\n      {typeOptions.map((typeOption, index) => (\n        <Paper\n          key={typeOption.value}\n          sx={{\n            alignItems: 'flex-start',\n            display: 'flex',\n            padding: 2\n          }}\n          variant=\"outlined\"\n        >\n          <FormControlLabel\n            control={<Radio color=\"primary\" />}\n            disabled={index === 2 && true}\n            key={typeOption.value}\n            label={(\n              <Box sx={{ ml: 2 }}>\n                <Typography\n                  sx={{\n                    color: index === 2\n                      ? 'action.disabled'\n                      : 'text.primary'\n                  }}\n                  variant=\"subtitle2\"\n                >\n                  {typeOption.title}\n                </Typography>\n                <Typography\n                  sx={{\n                    color: index === 2\n                      ? 'action.disabled'\n                      : 'text.secondary'\n                  }}\n                  variant=\"body2\"\n                >\n                  {typeOption.description}\n                </Typography>\n              </Box>\n            )}\n            value={typeOption.value}\n          />\n        </Paper>\n      ))}\n    </RadioGroup>\n  </Box>\n);\n\nexport default InputRadio;\n","import { Box, Grid, Switch, Typography } from '@material-ui/core';\n\nconst InputSwitch = () => (\n  <Box\n    sx={{\n      backgroundColor: 'background.paper',\n      p: 3.5\n    }}\n  >\n    <Grid\n      container\n      spacing={3}\n    >\n      <Grid\n        item\n        md={6}\n        xs={12}\n      >\n        <Typography\n          color=\"textPrimary\"\n          variant=\"subtitle2\"\n        >\n          Email Verified\n        </Typography>\n        <Typography\n          color=\"textSecondary\"\n          sx={{ py: 1 }}\n          variant=\"body2\"\n        >\n          Disabling this will automatically send the user a verification\n          email\n        </Typography>\n        <Switch\n          defaultChecked\n          color=\"primary\"\n        />\n      </Grid>\n      <Grid\n        item\n        md={6}\n        xs={12}\n      >\n        <Typography\n          color=\"textPrimary\"\n          variant=\"subtitle2\"\n        >\n          Email\n        </Typography>\n        <Typography\n          color=\"textSecondary\"\n          sx={{ py: 1 }}\n          variant=\"body2\"\n        >\n          This will give the user discounted prices for all products.\n        </Typography>\n        <Switch color=\"primary\" />\n      </Grid>\n    </Grid>\n  </Box>\n);\n\nexport default InputSwitch;\n","import { Box, Grid, TextField } from '@material-ui/core';\n\nconst InputTextField = () => (\n  <Box\n    sx={{\n      backgroundColor: 'background.paper',\n      p: 2\n    }}\n  >\n    <Grid container>\n      <Grid\n        item\n        md={6}\n        xs={12}\n      >\n        <Grid\n          container\n          spacing={4}\n        >\n          <Grid\n            item\n            sm={6}\n            xs={12}\n          >\n            <TextField\n              fullWidth\n              label=\"Name\"\n              variant=\"outlined\"\n            />\n          </Grid>\n          <Grid\n            item\n            sm={6}\n            xs={12}\n          >\n            <TextField\n              fullWidth\n              label=\"Email Address\"\n              required\n              type=\"email\"\n              variant=\"outlined\"\n            />\n          </Grid>\n          <Grid\n            item\n            xs={12}\n          >\n            <TextField\n              fullWidth\n              label=\"Phone number\"\n              variant=\"outlined\"\n            />\n          </Grid>\n          <Grid\n            item\n            sm={6}\n            xs={12}\n          >\n            <TextField\n              fullWidth\n              label=\"State/Region\"\n              variant=\"outlined\"\n            />\n          </Grid>\n          <Grid\n            item\n            sm={6}\n            xs={12}\n          >\n            <TextField\n              fullWidth\n              label=\"City\"\n              variant=\"outlined\"\n            />\n          </Grid>\n        </Grid>\n      </Grid>\n    </Grid>\n  </Box>\n);\n\nexport default InputTextField;\n","import MobileDateTimePicker from '@material-ui/lab/MobileDateTimePicker';\nimport {\n  Box,\n  Checkbox,\n  FormControl,\n  InputLabel,\n  MenuItem,\n  Select,\n  Switch,\n  TextField,\n  Typography\n} from '@material-ui/core';\n\nconst InputMixed = () => (\n  <Box\n    sx={{\n      backgroundColor: 'background.paper',\n      p: 3\n    }}\n  >\n    <Box\n      sx={{\n        alignItems: 'center',\n        display: 'flex'\n      }}\n    >\n      <Switch color=\"primary\" />\n      <Typography\n        color=\"textPrimary\"\n        variant=\"body1\"\n      >\n        Schedule Publish\n      </Typography>\n    </Box>\n    <Box sx={{ mt: 3 }}>\n      <MobileDateTimePicker\n        label=\"Start date\"\n        onChange={() => {\n        }}\n        renderInput={(inputProps) => (\n          <TextField\n            fullWidth\n            variant=\"outlined\"\n            {...inputProps}\n          />\n        )}\n        value={new Date()}\n      />\n    </Box>\n    <Box sx={{ mt: 3 }}>\n      <FormControl\n        fullWidth\n        variant=\"outlined\"\n      >\n        <InputLabel>\n          Category\n        </InputLabel>\n        <Select\n          defaultValue=\"programming\"\n          label=\"Category\"\n        >\n          <MenuItem value=\"programming\">\n            Programming\n          </MenuItem>\n          <MenuItem value=\"design\">\n            Design\n          </MenuItem>\n        </Select>\n      </FormControl>\n    </Box>\n    <Box\n      sx={{\n        alignItems: 'center',\n        display: 'flex',\n        mt: 3\n      }}\n    >\n      <Checkbox\n        color=\"primary\"\n        defaultChecked\n      />\n      <Typography\n        color=\"textPrimary\"\n        variant=\"body1\"\n      >\n        Published Globally\n      </Typography>\n    </Box>\n    <Box\n      sx={{\n        alignItems: 'center',\n        display: 'flex',\n        mt: 3\n      }}\n    >\n      <Checkbox\n        defaultChecked\n        color=\"primary\"\n      />\n      <Typography\n        color=\"textPrimary\"\n        variant=\"body1\"\n      >\n        Enable Contents\n      </Typography>\n    </Box>\n  </Box>\n);\n\nexport default InputMixed;\n","import { useEffect } from 'react';\nimport { Helmet } from 'react-helmet-async';\nimport { Box, Container } from '@material-ui/core';\nimport InputCheckbox from '../../components/widgets/inputs/InputCheckbox';\nimport InputRadio from '../../components/widgets/inputs/InputRadio';\nimport InputSwitch from '../../components/widgets/inputs/InputSwitch';\nimport InputTextField from '../../components/widgets/inputs/InputTextField';\nimport InputMixed from '../../components/widgets/inputs/InputMixed';\nimport WidgetPreviewer from '../../components/WidgetPreviewer';\nimport gtm from '../../lib/gtm';\n\nconst BrowseInputs = () => {\n  useEffect(() => {\n    gtm.push({ event: 'page_view' });\n  }, []);\n\n  return (\n    <>\n      <Helmet>\n        <title>Browse: Inputs | Material Kit Pro</title>\n      </Helmet>\n      <Box\n        sx={{\n          backgroundColor: 'background.paper',\n          pb: 15,\n          pt: 8\n        }}\n      >\n        <Container maxWidth=\"lg\">\n          <WidgetPreviewer\n            element={<InputCheckbox />}\n            name=\"Checkbox with additional text\"\n          />\n          <WidgetPreviewer\n            element={<InputRadio />}\n            name=\"Radio button with additional text\"\n          />\n          <WidgetPreviewer\n            element={<InputSwitch />}\n            name=\"Switch with top description\"\n          />\n          <WidgetPreviewer\n            element={<InputTextField />}\n            name=\"Text fields integrated in a form\"\n          />\n          <WidgetPreviewer\n            element={<InputMixed />}\n            name=\"Mixed input form\"\n          />\n        </Container>\n      </Box>\n    </>\n  );\n};\n\nexport default BrowseInputs;\n","import createSvgIcon from '@material-ui/core/utils/createSvgIcon';\n\nconst Moon = createSvgIcon(\n  <svg\n    xmlns=\"http://www.w3.org/2000/svg\"\n    viewBox=\"0 0 20 20\"\n    fill=\"currentColor\"\n  >\n    <path d=\"M17.293 13.293A8 8 0 016.707 2.707a8.001 8.001 0 1010.586 10.586z\" />\n  </svg>, 'Moon'\n);\n\nexport default Moon;\n","import createSvgIcon from '@material-ui/core/utils/createSvgIcon';\n\nconst Sun = createSvgIcon(\n  <svg\n    xmlns=\"http://www.w3.org/2000/svg\"\n    viewBox=\"0 0 20 20\"\n    fill=\"currentColor\"\n  >\n    <path\n      fillRule=\"evenodd\"\n      d=\"M10 2a1 1 0 011 1v1a1 1 0 11-2 0V3a1 1 0 011-1zm4 8a4 4 0 11-8 0 4 4 0 018 0zm-.464 4.95l.707.707a1 1 0 001.414-1.414l-.707-.707a1 1 0 00-1.414 1.414zm2.12-10.607a1 1 0 010 1.414l-.706.707a1 1 0 11-1.414-1.414l.707-.707a1 1 0 011.414 0zM17 11a1 1 0 100-2h-1a1 1 0 100 2h1zm-7 4a1 1 0 011 1v1a1 1 0 11-2 0v-1a1 1 0 011-1zM5.05 6.464A1 1 0 106.465 5.05l-.708-.707a1 1 0 00-1.414 1.414l.707.707zm1.414 8.486l-.707.707a1 1 0 01-1.414-1.414l.707-.707a1 1 0 011.414 1.414zM4 11a1 1 0 100-2H3a1 1 0 000 2h1z\"\n      clipRule=\"evenodd\"\n    />\n  </svg>, 'Sun'\n);\n\nexport default Sun;\n","import { useEffect, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { Card, CardHeader, Divider, IconButton, ThemeProvider } from '@material-ui/core';\nimport { THEMES } from '../constants';\nimport useSettings from '../hooks/useSettings';\nimport MoonIcon from '../icons/Moon';\nimport SunIcon from '../icons/Sun';\nimport { createCustomTheme } from '../theme';\n\nconst WidgetPreviewer = (props) => {\n  const { element, name, ...other } = props;\n  const { settings } = useSettings();\n  const [selectedTheme, setSelectedTheme] = useState(settings.theme);\n\n  useEffect(() => {\n    setSelectedTheme(settings.theme);\n  }, [settings.theme]);\n\n  const handleSwitch = () => setSelectedTheme((prevSelectedTheme) => {\n    if (prevSelectedTheme === THEMES.LIGHT) {\n      if (settings.theme === THEMES.LIGHT) {\n        return THEMES.DARK;\n      }\n\n      return settings.theme;\n    }\n\n    return THEMES.LIGHT;\n  });\n\n  const theme = createCustomTheme({\n    ...settings,\n    theme: selectedTheme\n  });\n\n  return (\n    <Card\n      variant=\"outlined\"\n      sx={{ mb: 8 }}\n      {...other}\n    >\n      <CardHeader\n        action={(\n          <IconButton onClick={handleSwitch}>\n            {selectedTheme === 'LIGHT'\n              ? <MoonIcon fontSize=\"small\" />\n              : <SunIcon fontSize=\"small\" />}\n          </IconButton>\n        )}\n        title={name}\n      />\n      <Divider />\n      <ThemeProvider theme={theme}>\n        {element}\n      </ThemeProvider>\n    </Card>\n  );\n};\n\nWidgetPreviewer.propTypes = {\n  element: PropTypes.node.isRequired,\n  name: PropTypes.string.isRequired\n};\n\nexport default WidgetPreviewer;\n"],"sourceRoot":""}