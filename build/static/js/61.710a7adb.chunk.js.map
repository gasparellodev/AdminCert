{"version":3,"sources":["../node_modules/@material-ui/core/CardHeader/cardHeaderClasses.js","../node_modules/@material-ui/core/CardHeader/CardHeader.js","../node_modules/@material-ui/core/CardActions/cardActionsClasses.js","../node_modules/@material-ui/core/CardActions/CardActions.js","../node_modules/@material-ui/utils/esm/usePreviousProps.js","../node_modules/@material-ui/unstyled/BadgeUnstyled/badgeUnstyledClasses.js","../node_modules/@material-ui/unstyled/BadgeUnstyled/BadgeUnstyled.js","../node_modules/@material-ui/core/Badge/Badge.js"],"names":["getCardHeaderUtilityClass","slot","generateUtilityClass","cardHeaderClasses","generateUtilityClasses","CardHeaderRoot","experimentalStyled","name","overridesResolver","props","styles","_extends","title","subheader","root","display","alignItems","padding","CardHeaderAvatar","avatar","flex","marginRight","CardHeaderAction","action","alignSelf","marginTop","marginBottom","CardHeaderContent","content","CardHeader","React","inProps","ref","useThemeProps","className","component","disableTypography","subheaderProp","subheaderTypographyProps","titleProp","titleTypographyProps","other","_objectWithoutPropertiesLoose","styleProps","classes","composeClasses","useUtilityClasses","type","Typography","_jsx","variant","children","color","_jsxs","clsx","as","getCardActionsUtilityClass","CardActionsRoot","disableSpacing","spacing","marginLeft","CardActions","slots","usePreviousProps","value","current","getBadgeUtilityClass","badgeUnstyledClasses","BadgeUnstyled","anchorOrigin","anchorOriginProp","vertical","horizontal","classesProp","badgeContentProp","badgeContent","components","componentsProps","invisibleProp","invisible","max","maxProp","overlap","overlapProp","showZero","variantProp","theme","prevProps","displayValue","badge","capitalize","Root","rootProps","Badge","badgeProps","isHostComponent","badgeClasses","BadgeRoot","styled","position","verticalAlign","flexShrink","BadgeBadge","flexDirection","flexWrap","justifyContent","alignContent","boxSizing","fontFamily","typography","fontWeight","fontWeightMedium","fontSize","pxToRem","minWidth","RADIUS_STANDARD","lineHeight","height","borderRadius","zIndex","transition","transitions","create","easing","easeInOut","duration","enteringScreen","backgroundColor","palette","main","contrastText","RADIUS_DOT","top","right","transform","transformOrigin","bottom","left","leavingScreen","_componentsProps$root","_componentsProps$badg","_useThemeProps","colorProp","extendUtilityClasses","Thumb"],"mappings":"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","file":"static/js/61.710a7adb.chunk.js","sourcesContent":["import { generateUtilityClass, generateUtilityClasses } from '@material-ui/unstyled';\nexport function getCardHeaderUtilityClass(slot) {\n  return generateUtilityClass('MuiCardHeader', slot);\n}\nconst cardHeaderClasses = generateUtilityClasses('MuiCardHeader', ['root', 'avatar', 'action', 'content', 'title', 'subheader']);\nexport default cardHeaderClasses;","import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { unstable_composeClasses as composeClasses } from '@material-ui/unstyled';\nimport Typography from '../Typography';\nimport useThemeProps from '../styles/useThemeProps';\nimport experimentalStyled from '../styles/experimentalStyled';\nimport cardHeaderClasses, { getCardHeaderUtilityClass } from './cardHeaderClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nconst useUtilityClasses = styleProps => {\n  const {\n    classes\n  } = styleProps;\n  const slots = {\n    root: ['root'],\n    avatar: ['avatar'],\n    action: ['action'],\n    content: ['content'],\n    title: ['title'],\n    subheader: ['subheader']\n  };\n  return composeClasses(slots, getCardHeaderUtilityClass, classes);\n};\n\nconst CardHeaderRoot = experimentalStyled('div', {}, {\n  name: 'MuiCardHeader',\n  slot: 'Root',\n  overridesResolver: (props, styles) => _extends({\n    [`& .${cardHeaderClasses.title}`]: styles.title,\n    [`& .${cardHeaderClasses.subheader}`]: styles.subheader\n  }, styles.root)\n})({\n  /* Styles applied to the root element. */\n  display: 'flex',\n  alignItems: 'center',\n  padding: 16\n});\nconst CardHeaderAvatar = experimentalStyled('div', {}, {\n  name: 'MuiCardHeader',\n  slot: 'Avatar',\n  overridesResolver: (props, styles) => styles.avatar\n})({\n  /* Styles applied to the avatar element. */\n  display: 'flex',\n  flex: '0 0 auto',\n  marginRight: 16\n});\nconst CardHeaderAction = experimentalStyled('div', {}, {\n  name: 'MuiCardHeader',\n  slot: 'Action',\n  overridesResolver: (props, styles) => styles.action\n})({\n  /* Styles applied to the action element. */\n  flex: '0 0 auto',\n  alignSelf: 'flex-start',\n  marginTop: -4,\n  marginRight: -8,\n  marginBottom: -4\n});\nconst CardHeaderContent = experimentalStyled('div', {}, {\n  name: 'MuiCardHeader',\n  slot: 'Content',\n  overridesResolver: (props, styles) => styles.content\n})({\n  /* Styles applied to the content wrapper element. */\n  flex: '1 1 auto'\n});\nconst CardHeader = /*#__PURE__*/React.forwardRef(function CardHeader(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiCardHeader'\n  });\n\n  const {\n    action,\n    avatar,\n    className,\n    component = 'div',\n    disableTypography = false,\n    subheader: subheaderProp,\n    subheaderTypographyProps,\n    title: titleProp,\n    titleTypographyProps\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, [\"action\", \"avatar\", \"className\", \"component\", \"disableTypography\", \"subheader\", \"subheaderTypographyProps\", \"title\", \"titleTypographyProps\"]);\n\n  const styleProps = _extends({}, props, {\n    component,\n    disableTypography\n  });\n\n  const classes = useUtilityClasses(styleProps);\n  let title = titleProp;\n\n  if (title != null && title.type !== Typography && !disableTypography) {\n    title = /*#__PURE__*/_jsx(Typography, _extends({\n      variant: avatar ? 'body2' : 'h5',\n      className: classes.title,\n      component: \"span\",\n      display: \"block\"\n    }, titleTypographyProps, {\n      children: title\n    }));\n  }\n\n  let subheader = subheaderProp;\n\n  if (subheader != null && subheader.type !== Typography && !disableTypography) {\n    subheader = /*#__PURE__*/_jsx(Typography, _extends({\n      variant: avatar ? 'body2' : 'body1',\n      className: classes.subheader,\n      color: \"text.secondary\",\n      component: \"span\",\n      display: \"block\"\n    }, subheaderTypographyProps, {\n      children: subheader\n    }));\n  }\n\n  return /*#__PURE__*/_jsxs(CardHeaderRoot, _extends({\n    className: clsx(classes.root, className),\n    as: component,\n    ref: ref,\n    styleProps: styleProps\n  }, other, {\n    children: [avatar && /*#__PURE__*/_jsx(CardHeaderAvatar, {\n      className: classes.avatar,\n      styleProps: styleProps,\n      children: avatar\n    }), /*#__PURE__*/_jsxs(CardHeaderContent, {\n      className: classes.content,\n      styleProps: styleProps,\n      children: [title, subheader]\n    }), action && /*#__PURE__*/_jsx(CardHeaderAction, {\n      className: classes.action,\n      styleProps: styleProps,\n      children: action\n    })]\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? CardHeader.propTypes\n/* remove-proptypes */\n= {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The action to display in the card header.\n   */\n  action: PropTypes.node,\n\n  /**\n   * The Avatar element to display.\n   */\n  avatar: PropTypes.node,\n\n  /**\n   * @ignore\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .elementType,\n\n  /**\n   * If `true`, `subheader` and `title` won't be wrapped by a Typography component.\n   * This can be useful to render an alternative Typography variant by wrapping\n   * the `title` text, and optional `subheader` text\n   * with the Typography component.\n   * @default false\n   */\n  disableTypography: PropTypes.bool,\n\n  /**\n   * The content of the component.\n   */\n  subheader: PropTypes.node,\n\n  /**\n   * These props will be forwarded to the subheader\n   * (as long as disableTypography is not `true`).\n   */\n  subheaderTypographyProps: PropTypes.object,\n\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.object,\n\n  /**\n   * The content of the component.\n   */\n  title: PropTypes.node,\n\n  /**\n   * These props will be forwarded to the title\n   * (as long as disableTypography is not `true`).\n   */\n  titleTypographyProps: PropTypes.object\n} : void 0;\nexport default CardHeader;","import { generateUtilityClass, generateUtilityClasses } from '@material-ui/unstyled';\nexport function getCardActionsUtilityClass(slot) {\n  return generateUtilityClass('MuiCardActions', slot);\n}\nconst cardActionsClasses = generateUtilityClasses('MuiCardActions', ['root', 'spacing']);\nexport default cardActionsClasses;","import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { unstable_composeClasses as composeClasses } from '@material-ui/unstyled';\nimport experimentalStyled from '../styles/experimentalStyled';\nimport useThemeProps from '../styles/useThemeProps';\nimport { getCardActionsUtilityClass } from './cardActionsClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nconst useUtilityClasses = styleProps => {\n  const {\n    classes,\n    disableSpacing\n  } = styleProps;\n  const slots = {\n    root: ['root', !disableSpacing && 'spacing']\n  };\n  return composeClasses(slots, getCardActionsUtilityClass, classes);\n};\n\nconst CardActionsRoot = experimentalStyled('div', {}, {\n  name: 'MuiCardActions',\n  slot: 'Root',\n  overridesResolver: (props, styles) => {\n    const {\n      styleProps\n    } = props;\n    return _extends({}, styles.root, !styleProps.disableSpacing && styles.spacing);\n  }\n})(({\n  styleProps\n}) => _extends({\n  /* Styles applied to the root element. */\n  display: 'flex',\n  alignItems: 'center',\n  padding: 8\n}, !styleProps.disableSpacing && {\n  '& > :not(:first-of-type)': {\n    marginLeft: 8\n  }\n}));\nconst CardActions = /*#__PURE__*/React.forwardRef(function CardActions(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiCardActions'\n  });\n\n  const {\n    disableSpacing = false,\n    className\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, [\"disableSpacing\", \"className\"]);\n\n  const styleProps = _extends({}, props, {\n    disableSpacing\n  });\n\n  const classes = useUtilityClasses(styleProps);\n  return /*#__PURE__*/_jsx(CardActionsRoot, _extends({\n    className: clsx(classes.root, className),\n    styleProps: styleProps,\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? CardActions.propTypes\n/* remove-proptypes */\n= {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * If `true`, the actions do not have additional margin.\n   * @default false\n   */\n  disableSpacing: PropTypes.bool,\n\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.object\n} : void 0;\nexport default CardActions;","import * as React from 'react';\n\nconst usePreviousProps = value => {\n  const ref = React.useRef({});\n  React.useEffect(() => {\n    ref.current = value;\n  });\n  return ref.current;\n};\n\nexport default usePreviousProps;","import generateUtilityClasses from '../generateUtilityClasses';\nimport generateUtilityClass from '../generateUtilityClass';\nexport function getBadgeUtilityClass(slot) {\n  return generateUtilityClass('MuiBadge', slot);\n}\nconst badgeUnstyledClasses = generateUtilityClasses('MuiBadge', ['root', 'badge', 'dot', 'standard', 'anchorOriginTopLeftCircular', 'anchorOriginTopLeftRectangular', 'anchorOriginTopRightCircular', 'anchorOriginTopRightRectangular', 'anchorOriginBottomLeftCircular', 'anchorOriginBottomLeftRectangular', 'anchorOriginBottomRightCircular', 'anchorOriginBottomRightRectangular', 'invisible']);\nexport default badgeUnstyledClasses;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { unstable_capitalize as capitalize, usePreviousProps } from '@material-ui/utils';\nimport isHostComponent from '../utils/isHostComponent';\nimport composeClasses from '../composeClasses';\nimport { getBadgeUtilityClass } from './badgeUnstyledClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nconst useUtilityClasses = styleProps => {\n  const {\n    variant,\n    anchorOrigin,\n    overlap,\n    invisible,\n    classes\n  } = styleProps;\n  const slots = {\n    root: ['root'],\n    badge: ['badge', variant, `anchorOrigin${capitalize(anchorOrigin.vertical)}${capitalize(anchorOrigin.horizontal)}${capitalize(overlap)}`, invisible && 'invisible']\n  };\n  return composeClasses(slots, getBadgeUtilityClass, classes);\n};\n\nconst BadgeUnstyled = /*#__PURE__*/React.forwardRef(function BadgeUnstyled(props, ref) {\n  const {\n    anchorOrigin: anchorOriginProp = {\n      vertical: 'top',\n      horizontal: 'right'\n    },\n    classes: classesProp,\n    badgeContent: badgeContentProp,\n    component = 'span',\n    children,\n    className,\n    components = {},\n    componentsProps = {},\n    invisible: invisibleProp,\n    max: maxProp = 99,\n    overlap: overlapProp = 'rectangular',\n    showZero = false,\n    variant: variantProp = 'standard',\n\n    /* eslint-disable react/prop-types */\n    theme\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, [\"anchorOrigin\", \"classes\", \"badgeContent\", \"component\", \"children\", \"className\", \"components\", \"componentsProps\", \"invisible\", \"max\", \"overlap\", \"showZero\", \"variant\", \"theme\"]);\n\n  const prevProps = usePreviousProps({\n    anchorOrigin: anchorOriginProp,\n    badgeContent: badgeContentProp,\n    max: maxProp,\n    overlap: overlapProp,\n    variant: variantProp\n  });\n  let invisible = invisibleProp;\n\n  if (invisibleProp == null && (badgeContentProp === 0 && !showZero || badgeContentProp == null && variantProp !== 'dot')) {\n    invisible = true;\n  }\n\n  const {\n    anchorOrigin = anchorOriginProp,\n    badgeContent,\n    max = maxProp,\n    overlap = overlapProp,\n    variant = variantProp\n  } = invisible ? prevProps : props;\n\n  const styleProps = _extends({}, props, {\n    anchorOrigin,\n    badgeContent,\n    classes: classesProp,\n    invisible,\n    max,\n    overlap,\n    variant\n  });\n\n  let displayValue = '';\n\n  if (variant !== 'dot') {\n    displayValue = badgeContent > max ? `${max}+` : badgeContent;\n  }\n\n  const classes = useUtilityClasses(styleProps);\n  const Root = components.Root || component;\n  const rootProps = componentsProps.root || {};\n  const Badge = components.Badge || 'span';\n  const badgeProps = componentsProps.badge || {};\n  return /*#__PURE__*/_jsxs(Root, _extends({}, rootProps, !isHostComponent(Root) && {\n    as: component,\n    styleProps: _extends({}, styleProps, rootProps.styleProps),\n    theme\n  }, {\n    ref: ref\n  }, other, {\n    className: clsx(classes.root, rootProps.className, className),\n    children: [children, /*#__PURE__*/_jsx(Badge, _extends({}, badgeProps, !isHostComponent(Badge) && {\n      styleProps: _extends({}, styleProps, badgeProps.styleProps),\n      theme\n    }, {\n      className: clsx(classes.badge, badgeProps.className),\n      children: displayValue\n    }))]\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? BadgeUnstyled.propTypes\n/* remove-proptypes */\n= {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The anchor of the badge.\n   * @default {\n   *   vertical: 'top',\n   *   horizontal: 'right',\n   * }\n   */\n  anchorOrigin: PropTypes.shape({\n    horizontal: PropTypes.oneOf(['left', 'right']).isRequired,\n    vertical: PropTypes.oneOf(['bottom', 'top']).isRequired\n  }),\n\n  /**\n   * The content rendered within the badge.\n   */\n  badgeContent: PropTypes.node,\n\n  /**\n   * The badge will be added relative to this node.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n\n  /**\n   * The components used for each slot inside the Badge.\n   * Either a string to use a HTML element or a component.\n   * @default {}\n   */\n  components: PropTypes.shape({\n    Badge: PropTypes.elementType,\n    Root: PropTypes.elementType\n  }),\n\n  /**\n   * The props used for each slot inside the Badge.\n   * @default {}\n   */\n  componentsProps: PropTypes.object,\n\n  /**\n   * If `true`, the badge is invisible.\n   */\n  invisible: PropTypes.bool,\n\n  /**\n   * Max count to show.\n   * @default 99\n   */\n  max: PropTypes.number,\n\n  /**\n   * Wrapped shape the badge should overlap.\n   * @default 'rectangular'\n   */\n  overlap: PropTypes.oneOf(['circular', 'rectangular']),\n\n  /**\n   * Controls whether the badge is hidden when `badgeContent` is zero.\n   * @default false\n   */\n  showZero: PropTypes.bool,\n\n  /**\n   * The variant to use.\n   * @default 'standard'\n   */\n  variant: PropTypes.string\n} : void 0;\nexport default BadgeUnstyled;","import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { usePreviousProps } from '@material-ui/utils';\nimport { generateUtilityClasses, isHostComponent } from '@material-ui/unstyled';\nimport BadgeUnstyled, { badgeUnstyledClasses, getBadgeUtilityClass } from '@material-ui/unstyled/BadgeUnstyled';\nimport styled from '../styles/experimentalStyled';\nimport useThemeProps from '../styles/useThemeProps';\nimport capitalize from '../utils/capitalize';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport const badgeClasses = _extends({}, badgeUnstyledClasses, generateUtilityClasses('MuiBadge', ['colorError', 'colorPrimary', 'colorSecondary']));\nconst RADIUS_STANDARD = 10;\nconst RADIUS_DOT = 4;\n\nconst extendUtilityClasses = styleProps => {\n  const {\n    color,\n    classes = {}\n  } = styleProps;\n  return _extends({}, classes, {\n    badge: clsx(classes.badge, color !== 'default' && [getBadgeUtilityClass(`color${capitalize(color)}`), classes[`color${capitalize(color)}`]])\n  });\n};\n\nconst BadgeRoot = styled('span', {}, {\n  name: 'MuiBadge',\n  slot: 'Root',\n  overridesResolver: (props, styles) => styles.root\n})({\n  position: 'relative',\n  display: 'inline-flex',\n  // For correct alignment with the text.\n  verticalAlign: 'middle',\n  flexShrink: 0\n});\nconst BadgeBadge = styled('span', {}, {\n  name: 'MuiBadge',\n  slot: 'Badge',\n  overridesResolver: (props, styles) => {\n    const {\n      styleProps\n    } = props;\n    return _extends({}, styles.badge, styles[styleProps.variant], styles[`anchorOrigin${capitalize(styleProps.anchorOrigin.vertical)}${capitalize(styleProps.anchorOrigin.horizontal)}${capitalize(styleProps.overlap)}`], styleProps.color !== 'default' && styles[`color${capitalize(styleProps.color)}`], styleProps.invisible && styles.invisible);\n  }\n})(({\n  theme,\n  styleProps\n}) => _extends({\n  display: 'flex',\n  flexDirection: 'row',\n  flexWrap: 'wrap',\n  justifyContent: 'center',\n  alignContent: 'center',\n  alignItems: 'center',\n  position: 'absolute',\n  boxSizing: 'border-box',\n  fontFamily: theme.typography.fontFamily,\n  fontWeight: theme.typography.fontWeightMedium,\n  fontSize: theme.typography.pxToRem(12),\n  minWidth: RADIUS_STANDARD * 2,\n  lineHeight: 1,\n  padding: '0 6px',\n  height: RADIUS_STANDARD * 2,\n  borderRadius: RADIUS_STANDARD,\n  zIndex: 1,\n  // Render the badge on top of potential ripples.\n  transition: theme.transitions.create('transform', {\n    easing: theme.transitions.easing.easeInOut,\n    duration: theme.transitions.duration.enteringScreen\n  })\n}, styleProps.color !== 'default' && {\n  backgroundColor: theme.palette[styleProps.color].main,\n  color: theme.palette[styleProps.color].contrastText\n}, styleProps.variant === 'dot' && {\n  borderRadius: RADIUS_DOT,\n  height: RADIUS_DOT * 2,\n  minWidth: RADIUS_DOT * 2,\n  padding: 0\n}, styleProps.anchorOrigin.vertical === 'top' && styleProps.anchorOrigin.horizontal === 'right' && styleProps.overlap === 'rectangular' && {\n  top: 0,\n  right: 0,\n  transform: 'scale(1) translate(50%, -50%)',\n  transformOrigin: '100% 0%',\n  [`&.${badgeClasses.invisible}`]: {\n    transform: 'scale(0) translate(50%, -50%)'\n  }\n}, styleProps.anchorOrigin.vertical === 'bottom' && styleProps.anchorOrigin.horizontal === 'right' && styleProps.overlap === 'rectangular' && {\n  bottom: 0,\n  right: 0,\n  transform: 'scale(1) translate(50%, 50%)',\n  transformOrigin: '100% 100%',\n  [`&.${badgeClasses.invisible}`]: {\n    transform: 'scale(0) translate(50%, 50%)'\n  }\n}, styleProps.anchorOrigin.vertical === 'top' && styleProps.anchorOrigin.horizontal === 'left' && styleProps.overlap === 'rectangular' && {\n  top: 0,\n  left: 0,\n  transform: 'scale(1) translate(-50%, -50%)',\n  transformOrigin: '0% 0%',\n  [`&.${badgeClasses.invisible}`]: {\n    transform: 'scale(0) translate(-50%, -50%)'\n  }\n}, styleProps.anchorOrigin.vertical === 'bottom' && styleProps.anchorOrigin.horizontal === 'left' && styleProps.overlap === 'rectangular' && {\n  bottom: 0,\n  left: 0,\n  transform: 'scale(1) translate(-50%, 50%)',\n  transformOrigin: '0% 100%',\n  [`&.${badgeClasses.invisible}`]: {\n    transform: 'scale(0) translate(-50%, 50%)'\n  }\n}, styleProps.anchorOrigin.vertical === 'top' && styleProps.anchorOrigin.horizontal === 'right' && styleProps.overlap === 'circular' && {\n  top: '14%',\n  right: '14%',\n  transform: 'scale(1) translate(50%, -50%)',\n  transformOrigin: '100% 0%',\n  [`&.${badgeClasses.invisible}`]: {\n    transform: 'scale(0) translate(50%, -50%)'\n  }\n}, styleProps.anchorOrigin.vertical === 'bottom' && styleProps.anchorOrigin.horizontal === 'right' && styleProps.overlap === 'circular' && {\n  bottom: '14%',\n  right: '14%',\n  transform: 'scale(1) translate(50%, 50%)',\n  transformOrigin: '100% 100%',\n  [`&.${badgeClasses.invisible}`]: {\n    transform: 'scale(0) translate(50%, 50%)'\n  }\n}, styleProps.anchorOrigin.vertical === 'top' && styleProps.anchorOrigin.horizontal === 'left' && styleProps.overlap === 'circular' && {\n  top: '14%',\n  left: '14%',\n  transform: 'scale(1) translate(-50%, -50%)',\n  transformOrigin: '0% 0%',\n  [`&.${badgeClasses.invisible}`]: {\n    transform: 'scale(0) translate(-50%, -50%)'\n  }\n}, styleProps.anchorOrigin.vertical === 'bottom' && styleProps.anchorOrigin.horizontal === 'left' && styleProps.overlap === 'circular' && {\n  bottom: '14%',\n  left: '14%',\n  transform: 'scale(1) translate(-50%, 50%)',\n  transformOrigin: '0% 100%',\n  [`&.${badgeClasses.invisible}`]: {\n    transform: 'scale(0) translate(-50%, 50%)'\n  }\n}, styleProps.invisible && {\n  transition: theme.transitions.create('transform', {\n    easing: theme.transitions.easing.easeInOut,\n    duration: theme.transitions.duration.leavingScreen\n  })\n}));\nconst Badge = /*#__PURE__*/React.forwardRef(function Badge(inProps, ref) {\n  var _componentsProps$root, _componentsProps$badg;\n\n  const _useThemeProps = useThemeProps({\n    props: inProps,\n    name: 'MuiBadge'\n  }),\n        props = _objectWithoutPropertiesLoose(_useThemeProps, [\"isRtl\"]);\n\n  const {\n    components = {},\n    componentsProps = {},\n    color: colorProp = 'default',\n    invisible: invisibleProp,\n    badgeContent: badgeContentProp,\n    showZero = false,\n    variant: variantProp = 'standard'\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, [\"components\", \"componentsProps\", \"color\", \"invisible\", \"badgeContent\", \"showZero\", \"variant\"]);\n\n  const prevProps = usePreviousProps({\n    color: colorProp\n  });\n  let invisible = invisibleProp;\n\n  if (invisibleProp == null && (badgeContentProp === 0 && !showZero || badgeContentProp == null && variantProp !== 'dot')) {\n    invisible = true;\n  }\n\n  const {\n    color = colorProp\n  } = invisible ? prevProps : props;\n\n  const styleProps = _extends({}, props, {\n    invisible,\n    color\n  });\n\n  const classes = extendUtilityClasses(styleProps);\n  return /*#__PURE__*/_jsx(BadgeUnstyled, _extends({\n    invisible: invisibleProp,\n    badgeContent: badgeContentProp,\n    showZero: showZero,\n    variant: variantProp\n  }, other, {\n    components: _extends({\n      Root: BadgeRoot,\n      Badge: BadgeBadge\n    }, components),\n    componentsProps: {\n      root: _extends({}, componentsProps.root, (!components.Root || !isHostComponent(components.Root)) && {\n        styleProps: _extends({}, (_componentsProps$root = componentsProps.root) === null || _componentsProps$root === void 0 ? void 0 : _componentsProps$root.styleProps, {\n          color\n        })\n      }),\n      badge: _extends({}, componentsProps.badge, (!components.Thumb || !isHostComponent(components.Thumb)) && {\n        styleProps: _extends({}, (_componentsProps$badg = componentsProps.badge) === null || _componentsProps$badg === void 0 ? void 0 : _componentsProps$badg.styleProps, {\n          color\n        })\n      })\n    },\n    classes: classes,\n    ref: ref\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? Badge.propTypes\n/* remove-proptypes */\n= {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The anchor of the badge.\n   * @default {\n   *   vertical: 'top',\n   *   horizontal: 'right',\n   * }\n   */\n  anchorOrigin: PropTypes.shape({\n    horizontal: PropTypes.oneOf(['left', 'right']).isRequired,\n    vertical: PropTypes.oneOf(['bottom', 'top']).isRequired\n  }),\n\n  /**\n   * The content rendered within the badge.\n   */\n  badgeContent: PropTypes.node,\n\n  /**\n   * The badge will be added relative to this node.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * The color of the component. It supports those theme colors that make sense for this component.\n   * @default 'default'\n   */\n  color: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .oneOfType([PropTypes.oneOf(['default', 'error', 'primary', 'secondary']), PropTypes.string]),\n\n  /**\n   * The components used for each slot inside the Badge.\n   * Either a string to use a HTML element or a component.\n   * @default {}\n   */\n  components: PropTypes.shape({\n    Badge: PropTypes.elementType,\n    Root: PropTypes.elementType\n  }),\n\n  /**\n   * The props used for each slot inside the Badge.\n   * @default {}\n   */\n  componentsProps: PropTypes.object,\n\n  /**\n   * If `true`, the badge is invisible.\n   */\n  invisible: PropTypes.bool,\n\n  /**\n   * Max count to show.\n   * @default 99\n   */\n  max: PropTypes.number,\n\n  /**\n   * Wrapped shape the badge should overlap.\n   * @default 'rectangular'\n   */\n  overlap: PropTypes.oneOf(['circular', 'rectangular']),\n\n  /**\n   * Controls whether the badge is hidden when `badgeContent` is zero.\n   * @default false\n   */\n  showZero: PropTypes.bool,\n\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.object,\n\n  /**\n   * The variant to use.\n   * @default 'standard'\n   */\n  variant: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .oneOfType([PropTypes.oneOf(['dot', 'standard']), PropTypes.string])\n} : void 0;\nexport default Badge;"],"sourceRoot":""}