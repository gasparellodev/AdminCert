{"version":3,"sources":["pages/Docs.js"],"names":["MarkdownWrapper","experimentalStyled","theme","color","palette","text","primary","fontFamily","typography","borderLeft","secondary","marginBottom","spacing","paddingBottom","paddingLeft","paddingTop","fontSize","paddingRight","fontWeight","letterSpacing","marginTop","lineHeight","marginLeft","main","renderers","link","props","href","children","other","startsWith","rel","target","code","language","value","style","dracula","Docs","navigate","useNavigate","pathname","useLocation","settings","useSettings","useState","file","setFile","useEffect","gtm","push","event","a","replace","fetch","headers","accept","response","status","data","matter","console","error","getFile","title","maxWidth","compact","sx","pb","escapeHtml","source","content"],"mappings":"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","file":"static/js/66.c1ec4c2b.chunk.js","sourcesContent":["/* eslint-disable react/prop-types */\r\nimport { useState, useEffect } from 'react';\r\nimport { useLocation, useNavigate } from 'react-router-dom';\r\nimport { Helmet } from 'react-helmet-async';\r\nimport Markdown from 'react-markdown';\r\nimport matter from 'gray-matter';\r\nimport { Prism as SyntaxHighlighter } from 'react-syntax-highlighter';\r\nimport dracula from 'react-syntax-highlighter/dist/cjs/styles/prism/dracula';\r\nimport { Container } from '@material-ui/core';\r\nimport { experimentalStyled } from '@material-ui/core/styles';\r\nimport useSettings from '../hooks/useSettings';\r\nimport gtm from '../lib/gtm';\r\n\r\nconst MarkdownWrapper = experimentalStyled('div')(({ theme }) => ({\r\n  color: theme.palette.text.primary,\r\n  fontFamily: theme.typography.fontFamily,\r\n  '& blockquote': {\r\n    borderLeft: `4px solid ${theme.palette.text.secondary}`,\r\n    marginBottom: theme.spacing(2),\r\n    paddingBottom: theme.spacing(1),\r\n    paddingLeft: theme.spacing(2),\r\n    paddingTop: theme.spacing(1),\r\n    '& > p': {\r\n      color: theme.palette.text.secondary,\r\n      marginBottom: 0\r\n    }\r\n  },\r\n  '& code': {\r\n    color: '#01ab56',\r\n    fontFamily: 'Inconsolata, Monaco, Consolas, \\'Courier New\\', Courier, monospace',\r\n    fontSize: 14,\r\n    paddingLeft: 2,\r\n    paddingRight: 2\r\n  },\r\n  '& h1': {\r\n    fontSize: 35,\r\n    fontWeight: 500,\r\n    letterSpacing: '-0.24px',\r\n    marginBottom: theme.spacing(2),\r\n    marginTop: theme.spacing(6)\r\n  },\r\n  '& h2': {\r\n    fontSize: 29,\r\n    fontWeight: 500,\r\n    letterSpacing: '-0.24px',\r\n    marginBottom: theme.spacing(2),\r\n    marginTop: theme.spacing(6)\r\n  },\r\n  '& h3': {\r\n    fontSize: 24,\r\n    fontWeight: 500,\r\n    letterSpacing: '-0.06px',\r\n    marginBottom: theme.spacing(2),\r\n    marginTop: theme.spacing(6)\r\n  },\r\n  '& h4': {\r\n    fontSize: 20,\r\n    fontWeight: 500,\r\n    letterSpacing: '-0.06px',\r\n    marginBottom: theme.spacing(2),\r\n    marginTop: theme.spacing(4)\r\n  },\r\n  '& h5': {\r\n    fontSize: 16,\r\n    fontWeight: 500,\r\n    letterSpacing: '-0.05px',\r\n    marginBottom: theme.spacing(2),\r\n    marginTop: theme.spacing(2)\r\n  },\r\n  '& h6': {\r\n    fontSize: 14,\r\n    fontWeight: 500,\r\n    letterSpacing: '-0.05px',\r\n    marginBottom: theme.spacing(2),\r\n    marginTop: theme.spacing(2)\r\n  },\r\n  '& li': {\r\n    fontSize: 14,\r\n    lineHeight: 1.5,\r\n    marginBottom: theme.spacing(2),\r\n    marginLeft: theme.spacing(4)\r\n  },\r\n  '& p': {\r\n    fontSize: 14,\r\n    lineHeight: 1.5,\r\n    marginBottom: theme.spacing(2),\r\n    '& > a': {\r\n      color: theme.palette.secondary.main\r\n    }\r\n  }\r\n}));\r\n\r\nconst renderers = {\r\n  link: (props) => {\r\n    const { href, children, ...other } = props;\r\n\r\n    if (!href.startsWith('http')) {\r\n      return (\r\n        <a\r\n          href={href}\r\n          {...other}\r\n        >\r\n          {children}\r\n        </a>\r\n      );\r\n    }\r\n\r\n    return (\r\n      <a\r\n        href={href}\r\n        rel=\"nofollow noreferrer noopener\"\r\n        target=\"_blank\"\r\n        {...other}\r\n      >\r\n        {children}\r\n      </a>\r\n    );\r\n  },\r\n  code: (props) => {\r\n    const { language, value, ...other } = props;\r\n\r\n    return (\r\n      <SyntaxHighlighter\r\n        language={language}\r\n        style={dracula}\r\n        {...other}\r\n      >\r\n        {value}\r\n      </SyntaxHighlighter>\r\n    );\r\n  }\r\n};\r\n\r\nconst Docs = () => {\r\n  const navigate = useNavigate();\r\n  const { pathname } = useLocation();\r\n  const { settings } = useSettings();\r\n  const [file, setFile] = useState(null);\r\n\r\n  useEffect(() => {\r\n    gtm.push({ event: 'page_view' });\r\n  }, [file]);\r\n\r\n  useEffect(() => {\r\n    const getFile = async () => {\r\n      try {\r\n        // Allow only paths starting with /docs.\r\n        // If you'll use this on another route, remember to check this part.\r\n        if (!pathname.startsWith('/docs')) {\r\n          navigate('/404', { replace: true });\r\n          return;\r\n        }\r\n\r\n        const response = await fetch(`/static${pathname}.md`, {\r\n          headers: {\r\n            accept: 'text/markdown' // Do not accept anything else\r\n          }\r\n        });\r\n\r\n        if (response.status !== 200) {\r\n          navigate(response.status === 404\r\n            ? '/404'\r\n            : '/500', { replace: true });\r\n          return;\r\n        }\r\n\r\n        const data = await response.text();\r\n\r\n        setFile(matter(data));\r\n      } catch (err) {\r\n        console.error(err);\r\n        navigate('/500');\r\n      }\r\n    };\r\n\r\n    getFile();\r\n  }, [pathname]);\r\n\r\n  if (!file) {\r\n    return null;\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <Helmet>\r\n        <title>{`Docs: ${file.data.title} | Material Kit Pro`}</title>\r\n      </Helmet>\r\n      <Container\r\n        maxWidth={settings.compact ? 'lg' : false}\r\n        sx={{ pb: '120px' }}\r\n      >\r\n        <MarkdownWrapper>\r\n          <Markdown\r\n            escapeHtml\r\n            renderers={renderers}\r\n            source={file.content}\r\n          />\r\n        </MarkdownWrapper>\r\n      </Container>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Docs;\r\n"],"sourceRoot":""}