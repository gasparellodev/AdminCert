{"version":3,"sources":["components/authentication/password-recovery/PasswordRecoveryAmplify.js","pages/authentication/PasswordRecovery.js"],"names":["PasswordRecoveryAmplify","mounted","useMounted","passwordRecovery","useAuth","navigate","useNavigate","initialValues","email","submit","validationSchema","Yup","shape","max","required","onSubmit","values","a","setErrors","setStatus","setSubmitting","state","username","console","error","current","success","message","errors","handleBlur","handleChange","handleSubmit","isSubmitting","touched","noValidate","TextField","autoFocus","Boolean","fullWidth","helperText","label","margin","name","onBlur","onChange","type","value","variant","Box","sx","mt","FormHelperText","Button","color","disabled","size","platformIcons","Amplify","Auth0","Firebase","JWT","PasswordRecovery","platform","useEffect","gtm","push","event","backgroundColor","display","flexDirection","minHeight","AuthBanner","Container","maxWidth","py","justifyContent","to","Logo","height","width","mb","Card","CardContent","p","alignItems","Typography","gutterBottom","maxHeight","alt","src","flexGrow"],"mappings":"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","file":"static/js/72.ce2bb7ce.chunk.js","sourcesContent":["import { useNavigate } from 'react-router-dom';\r\nimport * as Yup from 'yup';\r\nimport { Formik } from 'formik';\r\nimport { Box, Button, FormHelperText, TextField } from '@material-ui/core';\r\nimport useAuth from '../../../hooks/useAuth';\r\nimport useMounted from '../../../hooks/useMounted';\r\n\r\nconst PasswordRecoveryAmplify = () => {\r\n  const mounted = useMounted();\r\n  const { passwordRecovery } = useAuth();\r\n  const navigate = useNavigate();\r\n\r\n  return (\r\n    <Formik\r\n      initialValues={{\r\n        email: '',\r\n        submit: null\r\n      }}\r\n      validationSchema={Yup\r\n        .object()\r\n        .shape({\r\n          email: Yup\r\n            .string()\r\n            .email('Must be a valid email')\r\n            .max(255)\r\n            .required('Email is required')\r\n        })}\r\n      onSubmit={async (values, { setErrors, setStatus, setSubmitting }) => {\r\n        try {\r\n          await passwordRecovery(values.email);\r\n\r\n          navigate('/authentication/password-reset', {\r\n            state: {\r\n              username: values.email\r\n            }\r\n          });\r\n        } catch (err) {\r\n          console.error(err);\r\n          if (mounted.current) {\r\n            setStatus({ success: false });\r\n            setErrors({ submit: err.message });\r\n            setSubmitting(false);\r\n          }\r\n        }\r\n      }}\r\n    >\r\n      {({ errors, handleBlur, handleChange, handleSubmit, isSubmitting, touched, values }) => (\r\n        <form\r\n          noValidate\r\n          onSubmit={handleSubmit}\r\n        >\r\n          <TextField\r\n            autoFocus\r\n            error={Boolean(touched.email && errors.email)}\r\n            fullWidth\r\n            helperText={touched.email && errors.email}\r\n            label=\"Email Address\"\r\n            margin=\"normal\"\r\n            name=\"email\"\r\n            onBlur={handleBlur}\r\n            onChange={handleChange}\r\n            type=\"email\"\r\n            value={values.email}\r\n            variant=\"outlined\"\r\n          />\r\n          {errors.submit && (\r\n            <Box sx={{ mt: 3 }}>\r\n              <FormHelperText error>\r\n                {errors.submit}\r\n              </FormHelperText>\r\n            </Box>\r\n          )}\r\n          <Box sx={{ mt: 3 }}>\r\n            <Button\r\n              color=\"primary\"\r\n              disabled={isSubmitting}\r\n              fullWidth\r\n              size=\"large\"\r\n              type=\"submit\"\r\n              variant=\"contained\"\r\n            >\r\n              Recover Password\r\n            </Button>\r\n          </Box>\r\n        </form>\r\n      )}\r\n    </Formik>\r\n  );\r\n};\r\n\r\nexport default PasswordRecoveryAmplify;\r\n","import { useEffect } from 'react';\r\nimport { Link as RouterLink } from 'react-router-dom';\r\nimport { Helmet } from 'react-helmet-async';\r\nimport { Box, Card, CardContent, Container, Typography } from '@material-ui/core';\r\nimport AuthBanner from '../../components/authentication/AuthBanner';\r\nimport { PasswordRecoveryAmplify } from '../../components/authentication/password-recovery';\r\nimport Logo from '../../components/Logo';\r\nimport useAuth from '../../hooks/useAuth';\r\nimport gtm from '../../lib/gtm';\r\n\r\nconst platformIcons = {\r\n  Amplify: '/static/icons/amplify.svg',\r\n  Auth0: '/static/icons/auth0.svg',\r\n  Firebase: '/static/icons/firebase.svg',\r\n  JWT: '/static/icons/jwt.svg'\r\n};\r\n\r\nconst PasswordRecovery = () => {\r\n  const { platform } = useAuth();\r\n\r\n  useEffect(() => {\r\n    gtm.push({ event: 'page_view' });\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      <Helmet>\r\n        <title>Password Recovery | Material Kit Pro</title>\r\n      </Helmet>\r\n      <Box\r\n        sx={{\r\n          backgroundColor: 'background.default',\r\n          display: 'flex',\r\n          flexDirection: 'column',\r\n          minHeight: '100vh'\r\n        }}\r\n      >\r\n        <AuthBanner />\r\n        <Container\r\n          maxWidth=\"sm\"\r\n          sx={{ py: 10 }}\r\n        >\r\n          <Box\r\n            sx={{\r\n              display: 'flex',\r\n              justifyContent: 'center'\r\n            }}\r\n          >\r\n            <RouterLink to=\"/\">\r\n              <Logo\r\n                sx={{\r\n                  height: 40,\r\n                  width: 40\r\n                }}\r\n              />\r\n            </RouterLink>\r\n          </Box>\r\n          <Box\r\n            sx={{\r\n              display: 'flex',\r\n              justifyContent: 'center',\r\n              mb: 8\r\n            }}\r\n          />\r\n          <Card>\r\n            <CardContent\r\n              sx={{\r\n                display: 'flex',\r\n                flexDirection: 'column',\r\n                p: 4\r\n              }}\r\n            >\r\n              <Box\r\n                sx={{\r\n                  alignItems: 'center',\r\n                  display: 'flex',\r\n                  justifyContent: 'space-between',\r\n                  mb: 3\r\n                }}\r\n              >\r\n                <div>\r\n                  <Typography\r\n                    color=\"textPrimary\"\r\n                    gutterBottom\r\n                    variant=\"h4\"\r\n                  >\r\n                    Password Recovery\r\n                  </Typography>\r\n                  <Typography\r\n                    color=\"textSecondary\"\r\n                    variant=\"body2\"\r\n                  >\r\n                    Tell us your email so we can send you a reset link\r\n                  </Typography>\r\n                </div>\r\n                <Box\r\n                  sx={{\r\n                    height: 32,\r\n                    '& > img': {\r\n                      maxHeight: '100%',\r\n                      width: 'auto'\r\n                    }\r\n                  }}\r\n                >\r\n                  <img\r\n                    alt=\"Auth platform\"\r\n                    src={platformIcons[platform]}\r\n                  />\r\n                </Box>\r\n              </Box>\r\n              <Box\r\n                sx={{\r\n                  flexGrow: 1,\r\n                  mt: 3\r\n                }}\r\n              >\r\n                {platform === 'Amplify' && <PasswordRecoveryAmplify />}\r\n              </Box>\r\n            </CardContent>\r\n          </Card>\r\n        </Container>\r\n      </Box>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default PasswordRecovery;\r\n"],"sourceRoot":""}