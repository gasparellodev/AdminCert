{"version":3,"sources":["pages/dashboard/CustomerDetails.js"],"names":["tabs","label","value","CustomerDetails","mounted","useMounted","settings","useSettings","useState","customer","setCustomer","currentTab","setCurrentTab","useEffect","gtm","push","event","getCustomer","useCallback","a","customerApi","data","current","console","error","sx","backgroundColor","minHeight","py","maxWidth","compact","container","justifyContent","spacing","item","color","variant","separator","fontSize","mt","component","RouterLink","to","m","startIcon","indicatorColor","onChange","scrollButtons","textColor","map","tab","lg","md","xl","xs","address1","address2","country","email","isVerified","phone","state"],"mappings":"+XA6BMA,EAAO,CACX,CAAEC,MAAO,WAAYC,MAAO,WAC5B,CAAED,MAAO,UAAWC,MAAO,YAC3B,CAAED,MAAO,OAAQC,MAAO,SA2LXC,UAxLS,WACtB,IAAMC,EAAUC,cACRC,EAAaC,cAAbD,SACR,EAAgCE,mBAAS,MAAzC,mBAAOC,EAAP,KAAiBC,EAAjB,KACA,EAAoCF,mBAAS,WAA7C,mBAAOG,EAAP,KAAmBC,EAAnB,KAEAC,qBAAU,WACRC,IAAIC,KAAK,CAAEC,MAAO,gBACjB,IAEH,IAAMC,EAAcC,sBAAW,sBAAC,4BAAAC,EAAA,+EAETC,IAAYH,cAFH,OAEtBI,EAFsB,OAIxBjB,EAAQkB,SACVZ,EAAYW,GALc,gDAQ5BE,QAAQC,MAAR,MAR4B,yDAU7B,CAACpB,IAEJS,qBAAU,WACRI,MACC,CAACA,IAMJ,OAAKR,EAKH,qCACE,cAAC,IAAD,UACE,uEAEF,cAAC,IAAD,CACEgB,GAAI,CACFC,gBAAiB,qBACjBC,UAAW,OACXC,GAAI,GAJR,SAOE,eAAC,IAAD,CAAWC,WAAUvB,EAASwB,SAAU,KAAxC,UACE,eAAC,IAAD,CACEC,WAAS,EACTC,eAAe,gBACfC,QAAS,EAHX,UAKE,eAAC,IAAD,CAAMC,MAAI,EAAV,UACE,cAAC,IAAD,CACEC,MAAM,cACNC,QAAQ,KAFV,gCAMA,eAAC,IAAD,CACE,aAAW,aACXC,UAAW,cAAC,IAAD,CAAkBC,SAAS,UACtCb,GAAI,CAAEc,GAAI,GAHZ,UAKE,cAAC,IAAD,CACEJ,MAAM,cACNK,UAAWC,IACXC,GAAG,aACHN,QAAQ,YAJV,uBAQA,cAAC,IAAD,CACED,MAAM,cACNK,UAAWC,IACXC,GAAG,aACHN,QAAQ,YAJV,iCAQA,cAAC,IAAD,CACED,MAAM,cACNK,UAAWC,IACXC,GAAG,aACHN,QAAQ,YAJV,sBAQA,cAAC,IAAD,CACED,MAAM,gBACNK,UAAWC,IACXC,GAAG,eACHN,QAAQ,YAJV,sCAUJ,cAAC,IAAD,CAAMF,MAAI,EAAV,SACE,cAAC,IAAD,CAAKT,GAAI,CAAEkB,GAAI,GAAf,SACE,cAAC,IAAD,CACER,MAAM,UACNK,UAAWC,IACXG,UAAW,cAAC,IAAD,CAAeN,SAAS,UACnCb,GAAI,CAAEkB,EAAG,GACTD,GAAG,8BACHN,QAAQ,YANV,mCAaN,cAAC,IAAD,CAAKX,GAAI,CAAEc,GAAI,GAAf,SACE,cAAC,IAAD,CACEM,eAAe,UACfC,SA1Fa,SAAC9B,EAAOd,GAC/BU,EAAcV,IA0FJ6C,cAAc,OACdC,UAAU,UACV9C,MAAOS,EACPyB,QAAQ,aANV,SAQGpC,EAAKiD,KAAI,SAACC,GAAD,OACR,cAAC,IAAD,CAEEjD,MAAOiD,EAAIjD,MACXC,MAAOgD,EAAIhD,OAFNgD,EAAIhD,cAOjB,cAAC,IAAD,IACA,eAAC,IAAD,CAAKuB,GAAI,CAAEc,GAAI,GAAf,UACkB,YAAf5B,GACC,eAAC,IAAD,CACEoB,WAAS,EACTE,QAAS,EAFX,UAIE,cAAC,IAAD,CACEC,MAAI,EACJiB,GAAI7C,EAASwB,QAAU,EAAI,EAC3BsB,GAAI,EACJC,GAAI/C,EAASwB,QAAU,EAAI,EAC3BwB,GAAI,GALN,SAOE,cAAC,IAAD,CACEC,SAAU9C,EAAS8C,SACnBC,SAAU/C,EAAS+C,SACnBC,QAAShD,EAASgD,QAClBC,MAAOjD,EAASiD,MAChBC,WAAYlD,EAASkD,WACrBC,MAAOnD,EAASmD,MAChBC,MAAOpD,EAASoD,UAGpB,cAAC,IAAD,CACE3B,MAAI,EACJiB,GAAI7C,EAASwB,QAAU,EAAI,EAC3BsB,GAAI,EACJC,GAAI/C,EAASwB,QAAU,EAAI,EAC3BwB,GAAI,GALN,SAOE,cAAC,IAAD,MAEF,cAAC,IAAD,CACEpB,MAAI,EACJiB,GAAI7C,EAASwB,QAAU,EAAI,EAC3BsB,GAAI,EACJC,GAAI/C,EAASwB,QAAU,EAAI,EAC3BwB,GAAI,GALN,SAOE,cAAC,IAAD,SAIU,aAAf3C,GAA6B,cAAC,IAAD,IACd,SAAfA,GAAyB,cAAC,IAAD,eAjJ3B","file":"static/js/74.6dbb6b53.chunk.js","sourcesContent":["import { useCallback, useState, useEffect } from 'react';\nimport { Link as RouterLink } from 'react-router-dom';\nimport { Helmet } from 'react-helmet-async';\nimport {\n  Box,\n  Breadcrumbs,\n  Button,\n  Container,\n  Divider,\n  Grid,\n  Link,\n  Tab,\n  Tabs,\n  Typography\n} from '@material-ui/core';\nimport { customerApi } from '../../__fakeApi__/customerApi';\nimport {\n  CustomerContactDetails,\n  CustomerEmailsSummary,\n  CustomerInvoices,\n  CustomerInvoicesSummary,\n  CustomerLogs\n} from '../../components/dashboard/customer';\nimport useMounted from '../../hooks/useMounted';\nimport ChevronRightIcon from '../../icons/ChevronRight';\nimport PencilAltIcon from '../../icons/PencilAlt';\nimport gtm from '../../lib/gtm';\nimport useSettings from '../../hooks/useSettings';\n\nconst tabs = [\n  { label: 'Detalhes', value: 'details' },\n  { label: 'Pedidos', value: 'invoices' },\n  { label: 'Logs', value: 'logs' }\n];\n\nconst CustomerDetails = () => {\n  const mounted = useMounted();\n  const { settings } = useSettings();\n  const [customer, setCustomer] = useState(null);\n  const [currentTab, setCurrentTab] = useState('details');\n\n  useEffect(() => {\n    gtm.push({ event: 'page_view' });\n  }, []);\n\n  const getCustomer = useCallback(async () => {\n    try {\n      const data = await customerApi.getCustomer();\n\n      if (mounted.current) {\n        setCustomer(data);\n      }\n    } catch (err) {\n      console.error(err);\n    }\n  }, [mounted]);\n\n  useEffect(() => {\n    getCustomer();\n  }, [getCustomer]);\n\n  const handleTabsChange = (event, value) => {\n    setCurrentTab(value);\n  };\n\n  if (!customer) {\n    return null;\n  }\n\n  return (\n    <>\n      <Helmet>\n        <title>AdminCerti - Detalhes do Cliente</title>\n      </Helmet>\n      <Box\n        sx={{\n          backgroundColor: 'background.default',\n          minHeight: '100%',\n          py: 8\n        }}\n      >\n        <Container maxWidth={settings.compact ? 'xl' : false}>\n          <Grid\n            container\n            justifyContent=\"space-between\"\n            spacing={3}\n          >\n            <Grid item>\n              <Typography\n                color=\"textPrimary\"\n                variant=\"h5\"\n              >\n                Visualizar Cliente\n              </Typography>\n              <Breadcrumbs\n                aria-label=\"breadcrumb\"\n                separator={<ChevronRightIcon fontSize=\"small\" />}\n                sx={{ mt: 1 }}\n              >\n                <Link\n                  color=\"textPrimary\"\n                  component={RouterLink}\n                  to=\"/dashboard\"\n                  variant=\"subtitle2\"\n                >\n                  Dashboard\n                </Link>\n                <Link\n                  color=\"textPrimary\"\n                  component={RouterLink}\n                  to=\"/dashboard\"\n                  variant=\"subtitle2\"\n                >\n                  Controle AdminCerti\n                </Link>\n                <Link\n                  color=\"textPrimary\"\n                  component={RouterLink}\n                  to=\"/customers\"\n                  variant=\"subtitle2\"\n                >\n                  Clientes\n                </Link>\n                <Link\n                  color=\"textSecondary\"\n                  component={RouterLink}\n                  to=\"/customers/1\"\n                  variant=\"subtitle2\"\n                >\n                  Visualizar Cliente\n                </Link>\n              </Breadcrumbs>\n            </Grid>\n            <Grid item>\n              <Box sx={{ m: -1 }}>\n                <Button\n                  color=\"primary\"\n                  component={RouterLink}\n                  startIcon={<PencilAltIcon fontSize=\"small\" />}\n                  sx={{ m: 1 }}\n                  to=\"/dashboard/customers/1/edit\"\n                  variant=\"contained\"\n                >\n                  Editar Cliente\n                </Button>\n              </Box>\n            </Grid>\n          </Grid>\n          <Box sx={{ mt: 3 }}>\n            <Tabs\n              indicatorColor=\"primary\"\n              onChange={handleTabsChange}\n              scrollButtons=\"auto\"\n              textColor=\"primary\"\n              value={currentTab}\n              variant=\"scrollable\"\n            >\n              {tabs.map((tab) => (\n                <Tab\n                  key={tab.value}\n                  label={tab.label}\n                  value={tab.value}\n                />\n              ))}\n            </Tabs>\n          </Box>\n          <Divider />\n          <Box sx={{ mt: 3 }}>\n            {currentTab === 'details' && (\n              <Grid\n                container\n                spacing={3}\n              >\n                <Grid\n                  item\n                  lg={settings.compact ? 6 : 4}\n                  md={6}\n                  xl={settings.compact ? 6 : 3}\n                  xs={12}\n                >\n                  <CustomerContactDetails\n                    address1={customer.address1}\n                    address2={customer.address2}\n                    country={customer.country}\n                    email={customer.email}\n                    isVerified={customer.isVerified}\n                    phone={customer.phone}\n                    state={customer.state}\n                  />\n                </Grid>\n                <Grid\n                  item\n                  lg={settings.compact ? 6 : 4}\n                  md={6}\n                  xl={settings.compact ? 6 : 3}\n                  xs={12}\n                >\n                  <CustomerInvoicesSummary />\n                </Grid>\n                <Grid\n                  item\n                  lg={settings.compact ? 6 : 4}\n                  md={6}\n                  xl={settings.compact ? 6 : 3}\n                  xs={12}\n                >\n                  <CustomerEmailsSummary />\n                </Grid>\n              </Grid>\n            )}\n            {currentTab === 'invoices' && <CustomerInvoices />}\n            {currentTab === 'logs' && <CustomerLogs />}\n          </Box>\n        </Container>\n      </Box>\n    </>\n  );\n};\n\nexport default CustomerDetails;\n"],"sourceRoot":""}