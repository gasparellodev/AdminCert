{"version":3,"sources":["components/dashboard/account/AccountBillingSettings.js","components/dashboard/account/countries.js","components/dashboard/account/AccountGeneralSettings.js","components/dashboard/account/AccountNotificationsSettings.js","components/dashboard/account/AccountSecuritySettings.js","pages/dashboard/Account.js"],"names":["plan","AccountBillingSettings","props","Card","CardHeader","title","Divider","CardContent","Paper","variant","Box","sx","alignItems","lg","xs","display","flexWrap","justifyContent","flexDirection","lf","p","Typography","color","ml","mt","Button","size","Link","component","RouterLink","to","countries","text","value","AccountGeneralSettings","user","useAuth","Grid","container","spacing","item","md","xl","textAlign","border","theme","palette","divider","borderRadius","Avatar","src","avatar","height","width","name","CardActions","fullWidth","enableReinitialize","initialValues","canHire","city","country","email","isPublic","phone","state","submit","validationSchema","Yup","shape","max","required","onSubmit","values","a","resetForm","setErrors","setStatus","setSubmitting","wait","success","toast","console","error","message","errors","handleBlur","handleChange","handleSubmit","isSubmitting","touched","TextField","Boolean","helperText","label","onBlur","onChange","type","Autocomplete","getOptionLabel","option","options","renderInput","params","gutterBottom","Switch","checked","edge","FormHelperText","disabled","AccountNotificationsSettings","event","preventDefault","wrap","sm","FormControlLabel","control","Checkbox","defaultChecked","AccountSecuritySettings","password","passwordConfirm","min","oneOf","tabs","Account","settings","useSettings","useState","currentTab","setCurrentTab","useEffect","gtm","push","backgroundColor","minHeight","py","Container","maxWidth","compact","Breadcrumbs","aria-label","separator","ChevronRight","fontSize","Tabs","indicatorColor","scrollButtons","textColor","map","tab","Tab"],"mappings":"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","file":"static/js/75.380f1294.chunk.js","sourcesContent":["import { Link as RouterLink } from 'react-router-dom';\r\nimport {\r\n  Box,\r\n  Button,\r\n  Card,\r\n  CardContent,\r\n  CardHeader,\r\n  Divider,\r\n  Link,\r\n  Paper,\r\n  Typography\r\n} from '@material-ui/core';\r\n\r\nconst plan = {\r\n  adsLeft: 10,\r\n  currency: '$',\r\n  hasAnalytics: true,\r\n  hasEmailAlerts: true,\r\n  invitesLeft: 24,\r\n  name: 'Premium',\r\n  price: 29,\r\n  proposalsLeft: 12,\r\n  templatesLeft: 5\r\n};\r\n\r\nconst AccountBillingSettings = (props) => (\r\n  <Card {...props}>\r\n    <CardHeader title=\"Manage your plan\" />\r\n    <Divider />\r\n    <CardContent>\r\n      <Paper variant=\"outlined\">\r\n        <Box\r\n          sx={{\r\n            alignItems: {\r\n              lg: 'center',\r\n              xs: 'flex-start'\r\n            },\r\n            display: 'flex',\r\n            flexWrap: 'wrap',\r\n            justifyContent: 'space-between',\r\n            flexDirection: {\r\n              lf: 'row',\r\n              xs: 'column-reverse'\r\n            },\r\n            p: 3\r\n          }}\r\n        >\r\n          <div>\r\n            <Typography\r\n              color=\"textPrimary\"\r\n              display=\"inline\"\r\n              variant=\"h4\"\r\n            >\r\n              {plan.currency}\r\n              {plan.price}\r\n            </Typography>\r\n            <Typography\r\n              color=\"textPrimary\"\r\n              display=\"inline\"\r\n              variant=\"subtitle1\"\r\n            >\r\n              /mo\r\n            </Typography>\r\n          </div>\r\n          <Box\r\n            sx={{\r\n              alignItems: 'center',\r\n              display: 'flex'\r\n            }}\r\n          >\r\n            <Typography\r\n              color=\"textSecondary\"\r\n              sx={{ ml: 1 }}\r\n              variant=\"overline\"\r\n            >\r\n              {plan.name}\r\n            </Typography>\r\n          </Box>\r\n        </Box>\r\n        <Divider />\r\n        <Box\r\n          sx={{\r\n            alignItems: {\r\n              lg: 'center',\r\n              xs: 'flex-start'\r\n            },\r\n            display: 'flex',\r\n            flexWrap: 'wrap',\r\n            justifyContent: 'space-between',\r\n            flexDirection: {\r\n              lg: 'row',\r\n              xs: 'column-reverse'\r\n            },\r\n            p: 3\r\n          }}\r\n        >\r\n          <div>\r\n            <Typography\r\n              color=\"textPrimary\"\r\n              variant=\"body2\"\r\n            >\r\n              {`${plan.proposalsLeft} proposals left`}\r\n            </Typography>\r\n            <Typography\r\n              color=\"textPrimary\"\r\n              variant=\"body2\"\r\n            >\r\n              {`${plan.templatesLeft} templates`}\r\n            </Typography>\r\n          </div>\r\n          <div>\r\n            <Typography\r\n              color=\"textPrimary\"\r\n              variant=\"body2\"\r\n            >\r\n              {`${plan.invitesLeft} invites left`}\r\n            </Typography>\r\n            <Typography\r\n              color=\"textPrimary\"\r\n              variant=\"body2\"\r\n            >\r\n              {`${plan.adsLeft} ads left`}\r\n            </Typography>\r\n          </div>\r\n          <div>\r\n            {plan.hasAnalytics && (\r\n              <Typography\r\n                color=\"textPrimary\"\r\n                variant=\"body2\"\r\n              >\r\n                Analytics dashboard\r\n              </Typography>\r\n            )}\r\n            {plan.hasEmailAlerts && (\r\n              <Typography\r\n                color=\"textPrimary\"\r\n                variant=\"body2\"\r\n              >\r\n                Email alerts\r\n              </Typography>\r\n            )}\r\n          </div>\r\n        </Box>\r\n      </Paper>\r\n      <Box\r\n        sx={{\r\n          display: 'flex',\r\n          justifyContent: 'flex-end',\r\n          mt: 2\r\n        }}\r\n      >\r\n        <Button\r\n          color=\"primary\"\r\n          size=\"small\"\r\n          variant=\"contained\"\r\n        >\r\n          Upgrade Plan\r\n        </Button>\r\n      </Box>\r\n      <Box sx={{ mt: 2 }}>\r\n        <Typography\r\n          color=\"textSecondary\"\r\n          variant=\"body2\"\r\n        >\r\n          The refunds don&apos;t work once you have the plan, but you can\r\n          always\r\n          {' '}\r\n          <Link\r\n            color=\"primary\"\r\n            component={RouterLink}\r\n            to=\"#\"\r\n          >\r\n            Cancel your plan\r\n          </Link>\r\n          .\r\n        </Typography>\r\n      </Box>\r\n    </CardContent>\r\n  </Card>\r\n);\r\n\r\nexport default AccountBillingSettings;\r\n","const countries = [\r\n  { text: 'Afghanistan', value: 'AF' },\r\n  { text: 'Åland Islands', value: 'AX' },\r\n  { text: 'Albania', value: 'AL' },\r\n  { text: 'Algeria', value: 'DZ' },\r\n  { text: 'American Samoa', value: 'AS' },\r\n  { text: 'Andorra', value: 'AD' },\r\n  { text: 'Angola', value: 'AO' },\r\n  { text: 'Anguilla', value: 'AI' },\r\n  { text: 'Antarctica', value: 'AQ' },\r\n  { text: 'Antigua and Barbuda', value: 'AG' },\r\n  { text: 'Argentina', value: 'AR' },\r\n  { text: 'Armenia', value: 'AM' },\r\n  { text: 'Aruba', value: 'AW' },\r\n  { text: 'Australia', value: 'AU' },\r\n  { text: 'Austria', value: 'AT' },\r\n  { text: 'Azerbaijan', value: 'AZ' },\r\n  { text: 'Bahamas', value: 'BS' },\r\n  { text: 'Bahrain', value: 'BH' },\r\n  { text: 'Bangladesh', value: 'BD' },\r\n  { text: 'Barbados', value: 'BB' },\r\n  { text: 'Belarus', value: 'BY' },\r\n  { text: 'Belgium', value: 'BE' },\r\n  { text: 'Belize', value: 'BZ' },\r\n  { text: 'Benin', value: 'BJ' },\r\n  { text: 'Bermuda', value: 'BM' },\r\n  { text: 'Bhutan', value: 'BT' },\r\n  { text: 'Bolivia', value: 'BO' },\r\n  { text: 'Bosnia and Herzegovina', value: 'BA' },\r\n  { text: 'Botswana', value: 'BW' },\r\n  { text: 'Bouvet Island', value: 'BV' },\r\n  { text: 'Brazil', value: 'BR' },\r\n  { text: 'British Indian Ocean Territory', value: 'IO' },\r\n  { text: 'Brunei Darussalam', value: 'BN' },\r\n  { text: 'Bulgaria', value: 'BG' },\r\n  { text: 'Burkina Faso', value: 'BF' },\r\n  { text: 'Burundi', value: 'BI' },\r\n  { text: 'Cambodia', value: 'KH' },\r\n  { text: 'Cameroon', value: 'CM' },\r\n  { text: 'Canada', value: 'CA' },\r\n  { text: 'Cape Verde', value: 'CV' },\r\n  { text: 'Cayman Islands', value: 'KY' },\r\n  { text: 'Central African Republic', value: 'CF' },\r\n  { text: 'Chad', value: 'TD' },\r\n  { text: 'Chile', value: 'CL' },\r\n  { text: 'China', value: 'CN' },\r\n  { text: 'Christmas Island', value: 'CX' },\r\n  { text: 'Cocos (Keeling) Islands', value: 'CC' },\r\n  { text: 'Colombia', value: 'CO' },\r\n  { text: 'Comoros', value: 'KM' },\r\n  { text: 'Congo', value: 'CG' },\r\n  { text: 'Congo, The Democratic Republic of the', value: 'CD' },\r\n  { text: 'Cook Islands', value: 'CK' },\r\n  { text: 'Costa Rica', value: 'CR' },\r\n  { text: 'Cote D\\'Ivoire', value: 'CI' },\r\n  { text: 'Croatia', value: 'HR' },\r\n  { text: 'Cuba', value: 'CU' },\r\n  { text: 'Cyprus', value: 'CY' },\r\n  { text: 'Czech Republic', value: 'CZ' },\r\n  { text: 'Denmark', value: 'DK' },\r\n  { text: 'Djibouti', value: 'DJ' },\r\n  { text: 'Dominica', value: 'DM' },\r\n  { text: 'Dominican Republic', value: 'DO' },\r\n  { text: 'Ecuador', value: 'EC' },\r\n  { text: 'Egypt', value: 'EG' },\r\n  { text: 'El Salvador', value: 'SV' },\r\n  { text: 'Equatorial Guinea', value: 'GQ' },\r\n  { text: 'Eritrea', value: 'ER' },\r\n  { text: 'Estonia', value: 'EE' },\r\n  { text: 'Ethiopia', value: 'ET' },\r\n  { text: 'Falkland Islands (Malvinas)', value: 'FK' },\r\n  { text: 'Faroe Islands', value: 'FO' },\r\n  { text: 'Fiji', value: 'FJ' },\r\n  { text: 'Finland', value: 'FI' },\r\n  { text: 'France', value: 'FR' },\r\n  { text: 'French Guiana', value: 'GF' },\r\n  { text: 'French Polynesia', value: 'PF' },\r\n  { text: 'French Southern Territories', value: 'TF' },\r\n  { text: 'Gabon', value: 'GA' },\r\n  { text: 'Gambia', value: 'GM' },\r\n  { text: 'Georgia', value: 'GE' },\r\n  { text: 'Germany', value: 'DE' },\r\n  { text: 'Ghana', value: 'GH' },\r\n  { text: 'Gibraltar', value: 'GI' },\r\n  { text: 'Greece', value: 'GR' },\r\n  { text: 'Greenland', value: 'GL' },\r\n  { text: 'Grenada', value: 'GD' },\r\n  { text: 'Guadeloupe', value: 'GP' },\r\n  { text: 'Guam', value: 'GU' },\r\n  { text: 'Guatemala', value: 'GT' },\r\n  { text: 'Guernsey', value: 'GG' },\r\n  { text: 'Guinea', value: 'GN' },\r\n  { text: 'Guinea-Bissau', value: 'GW' },\r\n  { text: 'Guyana', value: 'GY' },\r\n  { text: 'Haiti', value: 'HT' },\r\n  { text: 'Heard Island and Mcdonald Islands', value: 'HM' },\r\n  { text: 'Holy See (Vatican City State)', value: 'VA' },\r\n  { text: 'Honduras', value: 'HN' },\r\n  { text: 'Hong Kong', value: 'HK' },\r\n  { text: 'Hungary', value: 'HU' },\r\n  { text: 'Iceland', value: 'IS' },\r\n  { text: 'India', value: 'IN' },\r\n  { text: 'Indonesia', value: 'ID' },\r\n  { text: 'Iran, Islamic Republic Of', value: 'IR' },\r\n  { text: 'Iraq', value: 'IQ' },\r\n  { text: 'Ireland', value: 'IE' },\r\n  { text: 'Isle of Man', value: 'IM' },\r\n  { text: 'Israel', value: 'IL' },\r\n  { text: 'Italy', value: 'IT' },\r\n  { text: 'Jamaica', value: 'JM' },\r\n  { text: 'Japan', value: 'JP' },\r\n  { text: 'Jersey', value: 'JE' },\r\n  { text: 'Jordan', value: 'JO' },\r\n  { text: 'Kazakhstan', value: 'KZ' },\r\n  { text: 'Kenya', value: 'KE' },\r\n  { text: 'Kiribati', value: 'KI' },\r\n  { text: 'Korea, Democratic People\\'S Republic of', value: 'KP' },\r\n  { text: 'Korea, Republic of', value: 'KR' },\r\n  { text: 'Kuwait', value: 'KW' },\r\n  { text: 'Kyrgyzstan', value: 'KG' },\r\n  { text: 'Lao People\\'S Democratic Republic', value: 'LA' },\r\n  { text: 'Latvia', value: 'LV' },\r\n  { text: 'Lebanon', value: 'LB' },\r\n  { text: 'Lesotho', value: 'LS' },\r\n  { text: 'Liberia', value: 'LR' },\r\n  { text: 'Libyan Arab Jamahiriya', value: 'LY' },\r\n  { text: 'Liechtenstein', value: 'LI' },\r\n  { text: 'Lithuania', value: 'LT' },\r\n  { text: 'Luxembourg', value: 'LU' },\r\n  { text: 'Macao', value: 'MO' },\r\n  { text: 'Macedonia, The Former Yugoslav Republic of', value: 'MK' },\r\n  { text: 'Madagascar', value: 'MG' },\r\n  { text: 'Malawi', value: 'MW' },\r\n  { text: 'Malaysia', value: 'MY' },\r\n  { text: 'Maldives', value: 'MV' },\r\n  { text: 'Mali', value: 'ML' },\r\n  { text: 'Malta', value: 'MT' },\r\n  { text: 'Marshall Islands', value: 'MH' },\r\n  { text: 'Martinique', value: 'MQ' },\r\n  { text: 'Mauritania', value: 'MR' },\r\n  { text: 'Mauritius', value: 'MU' },\r\n  { text: 'Mayotte', value: 'YT' },\r\n  { text: 'Mexico', value: 'MX' },\r\n  { text: 'Micronesia, Federated States of', value: 'FM' },\r\n  { text: 'Moldova, Republic of', value: 'MD' },\r\n  { text: 'Monaco', value: 'MC' },\r\n  { text: 'Mongolia', value: 'MN' },\r\n  { text: 'Montserrat', value: 'MS' },\r\n  { text: 'Morocco', value: 'MA' },\r\n  { text: 'Mozambique', value: 'MZ' },\r\n  { text: 'Myanmar', value: 'MM' },\r\n  { text: 'Namibia', value: 'NA' },\r\n  { text: 'Nauru', value: 'NR' },\r\n  { text: 'Nepal', value: 'NP' },\r\n  { text: 'Netherlands', value: 'NL' },\r\n  { text: 'Netherlands Antilles', value: 'AN' },\r\n  { text: 'New Caledonia', value: 'NC' },\r\n  { text: 'New Zealand', value: 'NZ' },\r\n  { text: 'Nicaragua', value: 'NI' },\r\n  { text: 'Niger', value: 'NE' },\r\n  { text: 'Nigeria', value: 'NG' },\r\n  { text: 'Niue', value: 'NU' },\r\n  { text: 'Norfolk Island', value: 'NF' },\r\n  { text: 'Northern Mariana Islands', value: 'MP' },\r\n  { text: 'Norway', value: 'NO' },\r\n  { text: 'Oman', value: 'OM' },\r\n  { text: 'Pakistan', value: 'PK' },\r\n  { text: 'Palau', value: 'PW' },\r\n  { text: 'Palestinian Territory, Occupied', value: 'PS' },\r\n  { text: 'Panama', value: 'PA' },\r\n  { text: 'Papua New Guinea', value: 'PG' },\r\n  { text: 'Paraguay', value: 'PY' },\r\n  { text: 'Peru', value: 'PE' },\r\n  { text: 'Philippines', value: 'PH' },\r\n  { text: 'Pitcairn', value: 'PN' },\r\n  { text: 'Poland', value: 'PL' },\r\n  { text: 'Portugal', value: 'PT' },\r\n  { text: 'Puerto Rico', value: 'PR' },\r\n  { text: 'Qatar', value: 'QA' },\r\n  { text: 'Reunion', value: 'RE' },\r\n  { text: 'Romania', value: 'RO' },\r\n  { text: 'Russian Federation', value: 'RU' },\r\n  { text: 'RWANDA', value: 'RW' },\r\n  { text: 'Saint Helena', value: 'SH' },\r\n  { text: 'Saint Kitts and Nevis', value: 'KN' },\r\n  { text: 'Saint Lucia', value: 'LC' },\r\n  { text: 'Saint Pierre and Miquelon', value: 'PM' },\r\n  { text: 'Saint Vincent and the Grenadines', value: 'VC' },\r\n  { text: 'Samoa', value: 'WS' },\r\n  { text: 'San Marino', value: 'SM' },\r\n  { text: 'Sao Tome and Principe', value: 'ST' },\r\n  { text: 'Saudi Arabia', value: 'SA' },\r\n  { text: 'Senegal', value: 'SN' },\r\n  { text: 'Serbia and Montenegro', value: 'CS' },\r\n  { text: 'Seychelles', value: 'SC' },\r\n  { text: 'Sierra Leone', value: 'SL' },\r\n  { text: 'Singapore', value: 'SG' },\r\n  { text: 'Slovakia', value: 'SK' },\r\n  { text: 'Slovenia', value: 'SI' },\r\n  { text: 'Solomon Islands', value: 'SB' },\r\n  { text: 'Somalia', value: 'SO' },\r\n  { text: 'South Africa', value: 'ZA' },\r\n  { text: 'South Georgia and the South Sandwich Islands', value: 'GS' },\r\n  { text: 'Spain', value: 'ES' },\r\n  { text: 'Sri Lanka', value: 'LK' },\r\n  { text: 'Sudan', value: 'SD' },\r\n  { text: 'Suriname', value: 'SR' },\r\n  { text: 'Svalbard and Jan Mayen', value: 'SJ' },\r\n  { text: 'Swaziland', value: 'SZ' },\r\n  { text: 'Sweden', value: 'SE' },\r\n  { text: 'Switzerland', value: 'CH' },\r\n  { text: 'Syrian Arab Republic', value: 'SY' },\r\n  { text: 'Taiwan, Province of China', value: 'TW' },\r\n  { text: 'Tajikistan', value: 'TJ' },\r\n  { text: 'Tanzania, United Republic of', value: 'TZ' },\r\n  { text: 'Thailand', value: 'TH' },\r\n  { text: 'Timor-Leste', value: 'TL' },\r\n  { text: 'Togo', value: 'TG' },\r\n  { text: 'Tokelau', value: 'TK' },\r\n  { text: 'Tonga', value: 'TO' },\r\n  { text: 'Trinidad and Tobago', value: 'TT' },\r\n  { text: 'Tunisia', value: 'TN' },\r\n  { text: 'Turkey', value: 'TR' },\r\n  { text: 'Turkmenistan', value: 'TM' },\r\n  { text: 'Turks and Caicos Islands', value: 'TC' },\r\n  { text: 'Tuvalu', value: 'TV' },\r\n  { text: 'Uganda', value: 'UG' },\r\n  { text: 'Ukraine', value: 'UA' },\r\n  { text: 'United Arab Emirates', value: 'AE' },\r\n  { text: 'United Kingdom', value: 'GB' },\r\n  { text: 'United States', value: 'US' },\r\n  { text: 'United States Minor Outlying Islands', value: 'UM' },\r\n  { text: 'Uruguay', value: 'UY' },\r\n  { text: 'Uzbekistan', value: 'UZ' },\r\n  { text: 'Vanuatu', value: 'VU' },\r\n  { text: 'Venezuela', value: 'VE' },\r\n  { text: 'Viet Nam', value: 'VN' },\r\n  { text: 'Virgin Islands, British', value: 'VG' },\r\n  { text: 'Virgin Islands, U.S.', value: 'VI' },\r\n  { text: 'Wallis and Futuna', value: 'WF' },\r\n  { text: 'Western Sahara', value: 'EH' },\r\n  { text: 'Yemen', value: 'YE' },\r\n  { text: 'Zambia', value: 'ZM' },\r\n  { text: 'Zimbabwe', value: 'ZW' }\r\n];\r\n\r\nexport default countries;\r\n","import { Link as RouterLink } from 'react-router-dom';\r\nimport toast from 'react-hot-toast';\r\nimport * as Yup from 'yup';\r\nimport { Formik } from 'formik';\r\nimport {\r\n  Autocomplete,\r\n  Avatar,\r\n  Box,\r\n  Button,\r\n  Card,\r\n  CardActions,\r\n  CardContent,\r\n  CardHeader,\r\n  Divider,\r\n  FormHelperText,\r\n  Grid,\r\n  Link,\r\n  Switch,\r\n  TextField,\r\n  Typography\r\n} from '@material-ui/core';\r\nimport useAuth from '../../../hooks/useAuth';\r\nimport wait from '../../../utils/wait';\r\nimport countries from './countries';\r\n\r\nconst AccountGeneralSettings = (props) => {\r\n  const { user } = useAuth();\r\n\r\n  return (\r\n    <Grid\r\n      container\r\n      spacing={3}\r\n      {...props}\r\n    >\r\n      <Grid\r\n        item\r\n        lg={4}\r\n        md={6}\r\n        xl={3}\r\n        xs={12}\r\n      >\r\n        <Card>\r\n          <CardContent>\r\n            <Box\r\n              sx={{\r\n                alignItems: 'center',\r\n                display: 'flex',\r\n                flexDirection: 'column',\r\n                textAlign: 'center'\r\n              }}\r\n            >\r\n              <Box\r\n                sx={{\r\n                  p: 1,\r\n                  border: (theme) => `1px dashed ${theme.palette.divider}`,\r\n                  borderRadius: '50%'\r\n                }}\r\n              >\r\n                <Avatar\r\n                  src={user.avatar}\r\n                  sx={{\r\n                    height: 100,\r\n                    width: 100\r\n                  }}\r\n                />\r\n              </Box>\r\n              <Typography\r\n                color=\"textPrimary\"\r\n                sx={{ mt: 1 }}\r\n                variant=\"subtitle2\"\r\n              >\r\n                {user.name}\r\n              </Typography>\r\n              <Typography\r\n                color=\"textSecondary\"\r\n                variant=\"body2\"\r\n              >\r\n                <Link\r\n                  color=\"primary\"\r\n                  component={RouterLink}\r\n                  to=\"/dashboard/account\"\r\n                >\r\n                  {user.plan}\r\n                </Link>\r\n              </Typography>\r\n            </Box>\r\n          </CardContent>\r\n          <CardActions>\r\n            <Button\r\n              color=\"primary\"\r\n              fullWidth\r\n              variant=\"text\"\r\n            >\r\n              Remover Foto\r\n            </Button>\r\n          </CardActions>\r\n        </Card>\r\n      </Grid>\r\n      <Grid\r\n        item\r\n        lg={8}\r\n        md={6}\r\n        xl={9}\r\n        xs={12}\r\n      >\r\n        <Formik\r\n          enableReinitialize\r\n          initialValues={{\r\n            canHire: user.canHire || false,\r\n            city: user.city || '',\r\n            country: user.country || '',\r\n            email: user.email || '',\r\n            isPublic: user.isPublic || false,\r\n            name: user.name || '',\r\n            phone: user.phone || '',\r\n            state: user.state || '',\r\n            submit: null\r\n          }}\r\n          validationSchema={Yup\r\n            .object()\r\n            .shape({\r\n              canHire: Yup.bool(),\r\n              city: Yup.string().max(255),\r\n              country: Yup.string().max(255),\r\n              email: Yup\r\n                .string()\r\n                .email('Must be a valid email')\r\n                .max(255)\r\n                .required('Email is required'),\r\n              isPublic: Yup.bool(),\r\n              name: Yup\r\n                .string()\r\n                .max(255)\r\n                .required('Name is required'),\r\n              phone: Yup.string(),\r\n              state: Yup.string()\r\n            })}\r\n          onSubmit={async (values, { resetForm, setErrors, setStatus, setSubmitting }) => {\r\n            try {\r\n              // NOTE: Make API request\r\n              await wait(200);\r\n              resetForm();\r\n              setStatus({ success: true });\r\n              setSubmitting(false);\r\n              toast.success('Profile updated!');\r\n            } catch (err) {\r\n              console.error(err);\r\n              toast.error('Something went wrong!');\r\n              setStatus({ success: false });\r\n              setErrors({ submit: err.message });\r\n              setSubmitting(false);\r\n            }\r\n          }}\r\n        >\r\n          {({ errors, handleBlur, handleChange, handleSubmit, isSubmitting, touched, values }) => (\r\n            <form onSubmit={handleSubmit}>\r\n              <Card>\r\n                <CardHeader title=\"Profile\" />\r\n                <Divider />\r\n                <CardContent>\r\n                  <Grid\r\n                    container\r\n                    spacing={4}\r\n                  >\r\n                    <Grid\r\n                      item\r\n                      md={6}\r\n                      xs={12}\r\n                    >\r\n                      <TextField\r\n                        error={Boolean(touched.name && errors.name)}\r\n                        fullWidth\r\n                        helperText={touched.name && errors.name}\r\n                        label=\"Name\"\r\n                        name=\"name\"\r\n                        onBlur={handleBlur}\r\n                        onChange={handleChange}\r\n                        value={values.name}\r\n                        variant=\"outlined\"\r\n                      />\r\n                    </Grid>\r\n                    <Grid\r\n                      item\r\n                      md={6}\r\n                      xs={12}\r\n                    >\r\n                      <TextField\r\n                        error={Boolean(touched.email && errors.email)}\r\n                        fullWidth\r\n                        helperText={touched.email && errors.email\r\n                          ? errors.email\r\n                          : 'We will use this email to contact you'}\r\n                        label=\"Email Address\"\r\n                        name=\"email\"\r\n                        onBlur={handleBlur}\r\n                        onChange={handleChange}\r\n                        required\r\n                        type=\"email\"\r\n                        value={values.email}\r\n                        variant=\"outlined\"\r\n                      />\r\n                    </Grid>\r\n                    <Grid\r\n                      item\r\n                      md={6}\r\n                      xs={12}\r\n                    >\r\n                      <TextField\r\n                        error={Boolean(touched.phone && errors.phone)}\r\n                        fullWidth\r\n                        helperText={touched.phone && errors.phone}\r\n                        label=\"Phone Number\"\r\n                        name=\"phone\"\r\n                        onBlur={handleBlur}\r\n                        onChange={handleChange}\r\n                        value={values.phone}\r\n                        variant=\"outlined\"\r\n                      />\r\n                    </Grid>\r\n                    <Grid\r\n                      item\r\n                      md={6}\r\n                      xs={12}\r\n                    >\r\n                      <Autocomplete\r\n                        getOptionLabel={(option) => option.text}\r\n                        options={countries}\r\n                        renderInput={(params) => (\r\n                          <TextField\r\n                            fullWidth\r\n                            label=\"Country\"\r\n                            name=\"country\"\r\n                            onChange={handleChange}\r\n                            variant=\"outlined\"\r\n                            {...params}\r\n                          />\r\n                        )}\r\n                      />\r\n                    </Grid>\r\n                    <Grid\r\n                      item\r\n                      md={6}\r\n                      xs={12}\r\n                    >\r\n                      <TextField\r\n                        error={Boolean(touched.state && errors.state)}\r\n                        fullWidth\r\n                        helperText={touched.state && errors.state}\r\n                        label=\"State/Region\"\r\n                        name=\"state\"\r\n                        onBlur={handleBlur}\r\n                        onChange={handleChange}\r\n                        value={values.state}\r\n                        variant=\"outlined\"\r\n                      />\r\n                    </Grid>\r\n                    <Grid\r\n                      item\r\n                      md={6}\r\n                      xs={12}\r\n                    >\r\n                      <TextField\r\n                        error={Boolean(touched.city && errors.city)}\r\n                        fullWidth\r\n                        helperText={touched.city && errors.city}\r\n                        label=\"City\"\r\n                        name=\"city\"\r\n                        onBlur={handleBlur}\r\n                        onChange={handleChange}\r\n                        value={values.city}\r\n                        variant=\"outlined\"\r\n                      />\r\n                    </Grid>\r\n                    <Grid\r\n                      item\r\n                      md={6}\r\n                      xs={12}\r\n                    >\r\n                      <Typography\r\n                        color=\"textPrimary\"\r\n                        gutterBottom\r\n                        variant=\"subtitle2\"\r\n                      >\r\n                        Public Profile\r\n                      </Typography>\r\n                      <Typography\r\n                        color=\"textSecondary\"\r\n                        variant=\"body2\"\r\n                      >\r\n                        Means that anyone viewing your profile will\r\n                        be able to see your contacts details\r\n                      </Typography>\r\n                      <Switch\r\n                        checked={values.isPublic}\r\n                        color=\"primary\"\r\n                        edge=\"start\"\r\n                        name=\"isPublic\"\r\n                        onChange={handleChange}\r\n                      />\r\n                    </Grid>\r\n                    <Grid\r\n                      item\r\n                      md={6}\r\n                      xs={12}\r\n                    >\r\n                      <Typography\r\n                        color=\"textPrimary\"\r\n                        gutterBottom\r\n                        variant=\"subtitle2\"\r\n                      >\r\n                        Available to hire\r\n                      </Typography>\r\n                      <Typography\r\n                        color=\"textSecondary\"\r\n                        variant=\"body2\"\r\n                      >\r\n                        Toggling this will let your teammates know\r\n                        that you are available for acquiring new\r\n                        projects\r\n                      </Typography>\r\n                      <Switch\r\n                        checked={values.canHire}\r\n                        color=\"primary\"\r\n                        edge=\"start\"\r\n                        name=\"canHire\"\r\n                        onChange={handleChange}\r\n                      />\r\n                    </Grid>\r\n                  </Grid>\r\n                  {errors.submit && (\r\n                    <Box sx={{ mt: 3 }}>\r\n                      <FormHelperText error>\r\n                        {errors.submit}\r\n                      </FormHelperText>\r\n                    </Box>\r\n                  )}\r\n                </CardContent>\r\n                <Divider />\r\n                <Box\r\n                  sx={{\r\n                    display: 'flex',\r\n                    justifyContent: 'flex-end',\r\n                    p: 2\r\n                  }}\r\n                >\r\n                  <Button\r\n                    color=\"primary\"\r\n                    disabled={isSubmitting}\r\n                    type=\"submit\"\r\n                    variant=\"contained\"\r\n                  >\r\n                    Save Changes\r\n                  </Button>\r\n                </Box>\r\n              </Card>\r\n            </form>\r\n          )}\r\n        </Formik>\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n};\r\n\r\nexport default AccountGeneralSettings;\r\n","import toast from 'react-hot-toast';\r\nimport {\r\n  Box,\r\n  Button,\r\n  Card,\r\n  CardContent,\r\n  CardHeader,\r\n  Checkbox,\r\n  Divider,\r\n  FormControlLabel,\r\n  Grid,\r\n  Typography\r\n} from '@material-ui/core';\r\nimport wait from '../../../utils/wait';\r\n\r\nconst AccountNotificationsSettings = (props) => {\r\n  const handleSubmit = async (event) => {\r\n    event.preventDefault();\r\n    // NOTE: Make API request\r\n    await wait(500);\r\n    toast.success('Changes saved!');\r\n  };\r\n\r\n  return (\r\n    <form\r\n      onSubmit={handleSubmit}\r\n      {...props}\r\n    >\r\n      <Card>\r\n        <CardHeader title=\"Notifications\" />\r\n        <CardContent>\r\n          <Grid\r\n            container\r\n            spacing={6}\r\n            wrap=\"wrap\"\r\n          >\r\n            <Grid\r\n              item\r\n              md={4}\r\n              sm={6}\r\n              xs={12}\r\n            >\r\n              <Typography\r\n                color=\"textPrimary\"\r\n                gutterBottom\r\n                variant=\"subtitle2\"\r\n              >\r\n                System\r\n              </Typography>\r\n              <Typography\r\n                color=\"textSecondary\"\r\n                gutterBottom\r\n                variant=\"body2\"\r\n              >\r\n                You will receive emails in your business email address\r\n              </Typography>\r\n              <div>\r\n                <FormControlLabel\r\n                  control={(\r\n                    <Checkbox\r\n                      color=\"primary\"\r\n                      defaultChecked\r\n                    />\r\n                  )}\r\n                  label=\"Email alerts\"\r\n                />\r\n              </div>\r\n              <div>\r\n                <FormControlLabel\r\n                  control={<Checkbox color=\"primary\" />}\r\n                  label=\"Push Notifications\"\r\n                />\r\n              </div>\r\n              <div>\r\n                <FormControlLabel\r\n                  control={(\r\n                    <Checkbox\r\n                      color=\"primary\"\r\n                      defaultChecked\r\n                    />\r\n                  )}\r\n                  label=\"Text message\"\r\n                />\r\n              </div>\r\n              <div>\r\n                <FormControlLabel\r\n                  control={(\r\n                    <Checkbox\r\n                      color=\"primary\"\r\n                      defaultChecked\r\n                    />\r\n                  )}\r\n                  label={(\r\n                    <>\r\n                      <Typography\r\n                        color=\"textPrimary\"\r\n                        variant=\"body1\"\r\n                      >\r\n                        Phone calls\r\n                      </Typography>\r\n                      <Typography\r\n                        color=\"textSecondary\"\r\n                        variant=\"caption\"\r\n                      >\r\n                        Short voice phone updating you\r\n                      </Typography>\r\n                    </>\r\n                  )}\r\n                />\r\n              </div>\r\n            </Grid>\r\n            <Grid\r\n              item\r\n              md={4}\r\n              sm={6}\r\n              xs={12}\r\n            >\r\n              <Typography\r\n                color=\"textPrimary\"\r\n                gutterBottom\r\n                variant=\"subtitle2\"\r\n              >\r\n                Chat App\r\n              </Typography>\r\n              <Typography\r\n                color=\"textSecondary\"\r\n                gutterBottom\r\n                variant=\"body2\"\r\n              >\r\n                You will receive emails in your business email address\r\n              </Typography>\r\n              <div>\r\n                <FormControlLabel\r\n                  control={(\r\n                    <Checkbox\r\n                      color=\"primary\"\r\n                      defaultChecked\r\n                    />\r\n                  )}\r\n                  label=\"Email\"\r\n                />\r\n              </div>\r\n              <div>\r\n                <FormControlLabel\r\n                  control={(\r\n                    <Checkbox\r\n                      color=\"primary\"\r\n                      defaultChecked\r\n                    />\r\n                  )}\r\n                  label=\"Push notifications\"\r\n                />\r\n              </div>\r\n            </Grid>\r\n          </Grid>\r\n        </CardContent>\r\n        <Divider />\r\n        <Box\r\n          sx={{\r\n            display: 'flex',\r\n            justifyContent: 'flex-end',\r\n            p: 2\r\n          }}\r\n        >\r\n          <Button\r\n            color=\"primary\"\r\n            type=\"submit\"\r\n            variant=\"contained\"\r\n          >\r\n            Save Settings\r\n          </Button>\r\n        </Box>\r\n      </Card>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default AccountNotificationsSettings;\r\n","import toast from 'react-hot-toast';\r\nimport * as Yup from 'yup';\r\nimport { Formik } from 'formik';\r\nimport {\r\n  Box,\r\n  Button,\r\n  Card,\r\n  CardContent,\r\n  CardHeader,\r\n  Divider,\r\n  FormHelperText,\r\n  Grid,\r\n  TextField\r\n} from '@material-ui/core';\r\nimport wait from '../../../utils/wait';\r\n\r\nconst AccountSecuritySettings = (props) => (\r\n  <Formik\r\n    initialValues={{\r\n      password: '',\r\n      passwordConfirm: '',\r\n      submit: null\r\n    }}\r\n    validationSchema={Yup\r\n      .object()\r\n      .shape({\r\n        password: Yup\r\n          .string()\r\n          .min(7, 'Must be at least 7 characters')\r\n          .max(255)\r\n          .required('Required'),\r\n        passwordConfirm: Yup\r\n          .string()\r\n          .oneOf([Yup.ref('password'), null], 'Passwords must match')\r\n          .required('Required')\r\n      })}\r\n    onSubmit={async (values, { resetForm, setErrors, setStatus, setSubmitting }) => {\r\n      try {\r\n        // NOTE: Make API request\r\n        await wait(500);\r\n        resetForm();\r\n        setStatus({ success: true });\r\n        setSubmitting(false);\r\n        toast.success('Password updated!');\r\n      } catch (err) {\r\n        console.error(err);\r\n        toast.error('Something went wrong!');\r\n        setStatus({ success: false });\r\n        setErrors({ submit: err.message });\r\n        setSubmitting(false);\r\n      }\r\n    }}\r\n  >\r\n    {({ errors, handleBlur, handleChange, handleSubmit, isSubmitting, touched, values }) => (\r\n      <form\r\n        onSubmit={handleSubmit}\r\n        {...props}\r\n      >\r\n        <Card>\r\n          <CardHeader title=\"Change Password\" />\r\n          <Divider />\r\n          <CardContent>\r\n            <Grid\r\n              container\r\n              spacing={3}\r\n            >\r\n              <Grid\r\n                item\r\n                md={4}\r\n                sm={6}\r\n                xs={12}\r\n              >\r\n                <TextField\r\n                  error={Boolean(touched.password && errors.password)}\r\n                  fullWidth\r\n                  helperText={touched.password && errors.password}\r\n                  label=\"Password\"\r\n                  name=\"password\"\r\n                  onBlur={handleBlur}\r\n                  onChange={handleChange}\r\n                  type=\"password\"\r\n                  value={values.password}\r\n                  variant=\"outlined\"\r\n                />\r\n              </Grid>\r\n              <Grid\r\n                item\r\n                md={4}\r\n                sm={6}\r\n                xs={12}\r\n              >\r\n                <TextField\r\n                  error={Boolean(touched.passwordConfirm && errors.passwordConfirm)}\r\n                  fullWidth\r\n                  helperText={touched.passwordConfirm && errors.passwordConfirm}\r\n                  label=\"Password Confirmation\"\r\n                  name=\"passwordConfirm\"\r\n                  onBlur={handleBlur}\r\n                  onChange={handleChange}\r\n                  type=\"password\"\r\n                  value={values.passwordConfirm}\r\n                  variant=\"outlined\"\r\n                />\r\n              </Grid>\r\n            </Grid>\r\n            {errors.submit && (\r\n              <Box sx={{ mt: 3 }}>\r\n                <FormHelperText error>\r\n                  {errors.submit}\r\n                </FormHelperText>\r\n              </Box>\r\n            )}\r\n          </CardContent>\r\n          <Divider />\r\n          <Box\r\n            sx={{\r\n              display: 'flex',\r\n              justifyContent: 'flex-end',\r\n              p: 2\r\n            }}\r\n          >\r\n            <Button\r\n              color=\"primary\"\r\n              disabled={isSubmitting}\r\n              type=\"submit\"\r\n              variant=\"contained\"\r\n            >\r\n              Change Password\r\n            </Button>\r\n          </Box>\r\n        </Card>\r\n      </form>\r\n    )}\r\n  </Formik>\r\n);\r\n\r\nexport default AccountSecuritySettings;\r\n","import { useState, useEffect } from 'react';\r\nimport { Link as RouterLink } from 'react-router-dom';\r\nimport { Helmet } from 'react-helmet-async';\r\nimport {\r\n  Box,\r\n  Breadcrumbs,\r\n  Container,\r\n  Divider,\r\n  Grid,\r\n  Link,\r\n  Tab,\r\n  Tabs,\r\n  Typography\r\n} from '@material-ui/core';\r\nimport {\r\n  AccountBillingSettings,\r\n  AccountGeneralSettings,\r\n  AccountNotificationsSettings,\r\n  AccountSecuritySettings\r\n} from '../../components/dashboard/account';\r\nimport useSettings from '../../hooks/useSettings';\r\nimport ChevronRightIcon from '../../icons/ChevronRight';\r\nimport gtm from '../../lib/gtm';\r\n\r\nconst tabs = [\r\n  { label: 'General', value: 'general' },\r\n  { label: 'Billing', value: 'billing' },\r\n  { label: 'Notifications', value: 'notifications' },\r\n  { label: 'Security', value: 'security' }\r\n];\r\n\r\nconst Account = () => {\r\n  const { settings } = useSettings();\r\n  const [currentTab, setCurrentTab] = useState('general');\r\n\r\n  useEffect(() => {\r\n    gtm.push({ event: 'page_view' });\r\n  }, []);\r\n\r\n  const handleTabsChange = (event, value) => {\r\n    setCurrentTab(value);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Helmet>\r\n        <title>Dashboard: Account | Material Kit Pro</title>\r\n      </Helmet>\r\n      <Box\r\n        sx={{\r\n          backgroundColor: 'background.default',\r\n          minHeight: '100%',\r\n          py: 8\r\n        }}\r\n      >\r\n        <Container maxWidth={settings.compact ? 'xl' : false}>\r\n          <Grid\r\n            container\r\n            justifyContent=\"space-between\"\r\n            spacing={3}\r\n          >\r\n            <Grid item>\r\n              <Typography\r\n                color=\"textPrimary\"\r\n                variant=\"h5\"\r\n              >\r\n                Account\r\n              </Typography>\r\n              <Breadcrumbs\r\n                aria-label=\"breadcrumb\"\r\n                separator={<ChevronRightIcon fontSize=\"small\" />}\r\n                sx={{ mt: 1 }}\r\n              >\r\n                <Link\r\n                  color=\"textPrimary\"\r\n                  component={RouterLink}\r\n                  to=\"/dashboard\"\r\n                  variant=\"subtitle2\"\r\n                >\r\n                  Dashboard\r\n                </Link>\r\n                <Typography\r\n                  color=\"textSecondary\"\r\n                  variant=\"subtitle2\"\r\n                >\r\n                  Account\r\n                </Typography>\r\n              </Breadcrumbs>\r\n            </Grid>\r\n          </Grid>\r\n          <Box sx={{ mt: 3 }}>\r\n            <Tabs\r\n              indicatorColor=\"primary\"\r\n              onChange={handleTabsChange}\r\n              scrollButtons=\"auto\"\r\n              textColor=\"primary\"\r\n              value={currentTab}\r\n              variant=\"scrollable\"\r\n            >\r\n              {tabs.map((tab) => (\r\n                <Tab\r\n                  key={tab.value}\r\n                  label={tab.label}\r\n                  value={tab.value}\r\n                />\r\n              ))}\r\n            </Tabs>\r\n          </Box>\r\n          <Divider />\r\n          <Box sx={{ mt: 3 }}>\r\n            {currentTab === 'general' && <AccountGeneralSettings />}\r\n            {currentTab === 'billing' && <AccountBillingSettings />}\r\n            {currentTab === 'notifications' && <AccountNotificationsSettings />}\r\n            {currentTab === 'security' && <AccountSecuritySettings />}\r\n          </Box>\r\n        </Container>\r\n      </Box>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Account;\r\n"],"sourceRoot":""}