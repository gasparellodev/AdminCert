{"version":3,"sources":["pages/dashboard/CustomerEdit.js"],"names":["CustomerEdit","mounted","useMounted","settings","useSettings","useState","customer","setCustomer","useEffect","gtm","push","event","getCustomer","useCallback","a","customerApi","data","current","console","error","sx","backgroundColor","minHeight","py","maxWidth","compact","container","justifyContent","spacing","item","color","variant","separator","fontSize","mt","component","RouterLink","to"],"mappings":"gVAwGeA,UA7FM,WACnB,IAAMC,EAAUC,cACRC,EAAaC,cAAbD,SACR,EAAgCE,mBAAS,MAAzC,mBAAOC,EAAP,KAAiBC,EAAjB,KAEAC,qBAAU,WACRC,IAAIC,KAAK,CAAEC,MAAO,gBACjB,IAEH,IAAMC,EAAcC,sBAAW,sBAAC,4BAAAC,EAAA,+EAETC,IAAYH,cAFH,OAEtBI,EAFsB,OAIxBf,EAAQgB,SACVV,EAAYS,GALc,gDAQ5BE,QAAQC,MAAR,MAR4B,yDAU7B,CAAClB,IAMJ,OAJAO,qBAAU,WACRI,MACC,CAACA,IAECN,EAKH,qCACE,cAAC,IAAD,UACE,mEAEF,cAAC,IAAD,CACEc,GAAI,CACFC,gBAAiB,qBACjBC,UAAW,OACXC,GAAI,GAJR,SAOE,eAAC,IAAD,CAAWC,WAAUrB,EAASsB,SAAU,KAAxC,UACE,cAAC,IAAD,CACEC,WAAS,EACTC,eAAe,gBACfC,QAAS,EAHX,SAKE,eAAC,IAAD,CAAMC,MAAI,EAAV,UACE,cAAC,IAAD,CACEC,MAAM,cACNC,QAAQ,KAFV,4BAMA,eAAC,IAAD,CACE,aAAW,aACXC,UAAW,cAAC,IAAD,CAAkBC,SAAS,UACtCb,GAAI,CAAEc,GAAI,GAHZ,UAKE,cAAC,IAAD,CACEJ,MAAM,cACNK,UAAWC,IACXC,GAAG,aACHN,QAAQ,YAJV,uBAQA,cAAC,IAAD,CACED,MAAM,cACNK,UAAWC,IACXC,GAAG,aACHN,QAAQ,YAJV,wBAQA,cAAC,IAAD,CACED,MAAM,gBACNC,QAAQ,YAFV,+BASN,cAAC,IAAD,CAAKG,GAAI,EAAT,SACE,cAAC,IAAD,CAAkB5B,SAAUA,cA3D7B","file":"static/js/75.394cdf00.chunk.js","sourcesContent":["import { useState, useCallback, useEffect } from 'react';\nimport { Link as RouterLink } from 'react-router-dom';\nimport { Helmet } from 'react-helmet-async';\nimport { Box, Breadcrumbs, Container, Grid, Link, Typography } from '@material-ui/core';\nimport { customerApi } from '../../__fakeApi__/customerApi';\nimport { CustomerEditForm } from '../../components/dashboard/customer';\nimport useMounted from '../../hooks/useMounted';\nimport useSettings from '../../hooks/useSettings';\nimport ChevronRightIcon from '../../icons/ChevronRight';\nimport gtm from '../../lib/gtm';\n\nconst CustomerEdit = () => {\n  const mounted = useMounted();\n  const { settings } = useSettings();\n  const [customer, setCustomer] = useState(null);\n\n  useEffect(() => {\n    gtm.push({ event: 'page_view' });\n  }, []);\n\n  const getCustomer = useCallback(async () => {\n    try {\n      const data = await customerApi.getCustomer();\n\n      if (mounted.current) {\n        setCustomer(data);\n      }\n    } catch (err) {\n      console.error(err);\n    }\n  }, [mounted]);\n\n  useEffect(() => {\n    getCustomer();\n  }, [getCustomer]);\n\n  if (!customer) {\n    return null;\n  }\n\n  return (\n    <>\n      <Helmet>\n        <title>AdminCerti | Editar Clientes</title>\n      </Helmet>\n      <Box\n        sx={{\n          backgroundColor: 'background.default',\n          minHeight: '100%',\n          py: 8\n        }}\n      >\n        <Container maxWidth={settings.compact ? 'xl' : false}>\n          <Grid\n            container\n            justifyContent=\"space-between\"\n            spacing={3}\n          >\n            <Grid item>\n              <Typography\n                color=\"textPrimary\"\n                variant=\"h5\"\n              >\n                Editar Cliente\n              </Typography>\n              <Breadcrumbs\n                aria-label=\"breadcrumb\"\n                separator={<ChevronRightIcon fontSize=\"small\" />}\n                sx={{ mt: 1 }}\n              >\n                <Link\n                  color=\"textPrimary\"\n                  component={RouterLink}\n                  to=\"/dashboard\"\n                  variant=\"subtitle2\"\n                >\n                  Dashboard\n                </Link>\n                <Link\n                  color=\"textPrimary\"\n                  component={RouterLink}\n                  to=\"/dashboard\"\n                  variant=\"subtitle2\"\n                >\n                  Management\n                </Link>\n                <Typography\n                  color=\"textSecondary\"\n                  variant=\"subtitle2\"\n                >\n                  Customers\n                </Typography>\n              </Breadcrumbs>\n            </Grid>\n          </Grid>\n          <Box mt={3}>\n            <CustomerEditForm customer={customer} />\n          </Box>\n        </Container>\n      </Box>\n    </>\n  );\n};\n\nexport default CustomerEdit;\n"],"sourceRoot":""}