{"version":3,"sources":["pages/dashboard/CustomerDetails.js"],"names":["tabs","label","value","CustomerDetails","mounted","useMounted","settings","useSettings","useState","customer","setCustomer","currentTab","setCurrentTab","useEffect","gtm","push","event","getCustomer","useCallback","a","customerApi","data","current","console","error","sx","backgroundColor","minHeight","py","maxWidth","compact","container","justifyContent","spacing","item","color","variant","aria-label","separator","fontSize","mt","component","RouterLink","to","m","startIcon","indicatorColor","onChange","scrollButtons","textColor","map","tab","lg","md","xl","xs","address1","address2","country","email","isVerified","phone","state"],"mappings":"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","file":"static/js/76.3f6782dc.chunk.js","sourcesContent":["import { useCallback, useState, useEffect } from 'react';\r\nimport { Link as RouterLink } from 'react-router-dom';\r\nimport { Helmet } from 'react-helmet-async';\r\nimport {\r\n  Box,\r\n  Breadcrumbs,\r\n  Button,\r\n  Container,\r\n  Divider,\r\n  Grid,\r\n  Link,\r\n  Tab,\r\n  Tabs,\r\n  Typography\r\n} from '@material-ui/core';\r\nimport { customerApi } from '../../__fakeApi__/customerApi';\r\nimport {\r\n  CustomerContactDetails,\r\n  CustomerEmailsSummary,\r\n  CustomerInvoices,\r\n  CustomerInvoicesSummary,\r\n  CustomerLogs\r\n} from '../../components/dashboard/customer';\r\nimport useMounted from '../../hooks/useMounted';\r\nimport ChevronRightIcon from '../../icons/ChevronRight';\r\nimport PencilAltIcon from '../../icons/PencilAlt';\r\nimport gtm from '../../lib/gtm';\r\nimport useSettings from '../../hooks/useSettings';\r\n\r\nconst tabs = [\r\n  { label: 'Detalhes', value: 'details' },\r\n  { label: 'Pedidos', value: 'invoices' },\r\n  { label: 'Logs', value: 'logs' }\r\n];\r\n\r\nconst CustomerDetails = () => {\r\n  const mounted = useMounted();\r\n  const { settings } = useSettings();\r\n  const [customer, setCustomer] = useState(null);\r\n  const [currentTab, setCurrentTab] = useState('details');\r\n\r\n  useEffect(() => {\r\n    gtm.push({ event: 'page_view' });\r\n  }, []);\r\n\r\n  const getCustomer = useCallback(async () => {\r\n    try {\r\n      const data = await customerApi.getCustomer();\r\n\r\n      if (mounted.current) {\r\n        setCustomer(data);\r\n      }\r\n    } catch (err) {\r\n      console.error(err);\r\n    }\r\n  }, [mounted]);\r\n\r\n  useEffect(() => {\r\n    getCustomer();\r\n  }, [getCustomer]);\r\n\r\n  const handleTabsChange = (event, value) => {\r\n    setCurrentTab(value);\r\n  };\r\n\r\n  if (!customer) {\r\n    return null;\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Helmet>\r\n        <title>AdminCerti - Detalhes do Cliente</title>\r\n      </Helmet>\r\n      <Box\r\n        sx={{\r\n          backgroundColor: 'background.default',\r\n          minHeight: '100%',\r\n          py: 8\r\n        }}\r\n      >\r\n        <Container maxWidth={settings.compact ? 'xl' : false}>\r\n          <Grid\r\n            container\r\n            justifyContent=\"space-between\"\r\n            spacing={3}\r\n          >\r\n            <Grid item>\r\n              <Typography\r\n                color=\"textPrimary\"\r\n                variant=\"h5\"\r\n              >\r\n                Visualizar Cliente\r\n              </Typography>\r\n              <Breadcrumbs\r\n                aria-label=\"breadcrumb\"\r\n                separator={<ChevronRightIcon fontSize=\"small\" />}\r\n                sx={{ mt: 1 }}\r\n              >\r\n                <Link\r\n                  color=\"textPrimary\"\r\n                  component={RouterLink}\r\n                  to=\"/dashboard\"\r\n                  variant=\"subtitle2\"\r\n                >\r\n                  Dashboard\r\n                </Link>\r\n                <Link\r\n                  color=\"textPrimary\"\r\n                  component={RouterLink}\r\n                  to=\"/dashboard\"\r\n                  variant=\"subtitle2\"\r\n                >\r\n                  Controle AdminCerti\r\n                </Link>\r\n                <Link\r\n                  color=\"textPrimary\"\r\n                  component={RouterLink}\r\n                  to=\"/customers\"\r\n                  variant=\"subtitle2\"\r\n                >\r\n                  Clientes\r\n                </Link>\r\n                <Link\r\n                  color=\"textSecondary\"\r\n                  component={RouterLink}\r\n                  to=\"/customers/1\"\r\n                  variant=\"subtitle2\"\r\n                >\r\n                  Visualizar Cliente\r\n                </Link>\r\n              </Breadcrumbs>\r\n            </Grid>\r\n            <Grid item>\r\n              <Box sx={{ m: -1 }}>\r\n                <Button\r\n                  color=\"primary\"\r\n                  component={RouterLink}\r\n                  startIcon={<PencilAltIcon fontSize=\"small\" />}\r\n                  sx={{ m: 1 }}\r\n                  to=\"/dashboard/customers/1/edit\"\r\n                  variant=\"contained\"\r\n                >\r\n                  Editar Cliente\r\n                </Button>\r\n              </Box>\r\n            </Grid>\r\n          </Grid>\r\n          <Box sx={{ mt: 3 }}>\r\n            <Tabs\r\n              indicatorColor=\"primary\"\r\n              onChange={handleTabsChange}\r\n              scrollButtons=\"auto\"\r\n              textColor=\"primary\"\r\n              value={currentTab}\r\n              variant=\"scrollable\"\r\n            >\r\n              {tabs.map((tab) => (\r\n                <Tab\r\n                  key={tab.value}\r\n                  label={tab.label}\r\n                  value={tab.value}\r\n                />\r\n              ))}\r\n            </Tabs>\r\n          </Box>\r\n          <Divider />\r\n          <Box sx={{ mt: 3 }}>\r\n            {currentTab === 'details' && (\r\n              <Grid\r\n                container\r\n                spacing={3}\r\n              >\r\n                <Grid\r\n                  item\r\n                  lg={settings.compact ? 6 : 4}\r\n                  md={6}\r\n                  xl={settings.compact ? 6 : 3}\r\n                  xs={12}\r\n                >\r\n                  <CustomerContactDetails\r\n                    address1={customer.address1}\r\n                    address2={customer.address2}\r\n                    country={customer.country}\r\n                    email={customer.email}\r\n                    isVerified={customer.isVerified}\r\n                    phone={customer.phone}\r\n                    state={customer.state}\r\n                  />\r\n                </Grid>\r\n                <Grid\r\n                  item\r\n                  lg={settings.compact ? 6 : 4}\r\n                  md={6}\r\n                  xl={settings.compact ? 6 : 3}\r\n                  xs={12}\r\n                >\r\n                  <CustomerInvoicesSummary />\r\n                </Grid>\r\n                <Grid\r\n                  item\r\n                  lg={settings.compact ? 6 : 4}\r\n                  md={6}\r\n                  xl={settings.compact ? 6 : 3}\r\n                  xs={12}\r\n                >\r\n                  <CustomerEmailsSummary />\r\n                </Grid>\r\n              </Grid>\r\n            )}\r\n            {currentTab === 'invoices' && <CustomerInvoices />}\r\n            {currentTab === 'logs' && <CustomerLogs />}\r\n          </Box>\r\n        </Container>\r\n      </Box>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default CustomerDetails;\r\n"],"sourceRoot":""}